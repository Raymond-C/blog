
INSERT INTO `blog_comments` VALUES (2,215,'seaside residences frasers centrepoint homes','larablosfot@mail.ru','http://www.seaside-residences.sg/','23.105.157.227','2016-12-29 23:43:25','2016-12-29 23:43:25','First off I would like to say excellent blog! I had a quick question that I\'d like to ask if you \r\ndo not mind. I was interested to find out how you center yourself and clear your mind before writing.\r\nI\'ve had a hard time clearing my thoughts in getting my ideas out there.\r\nI truly do enjoy writing but it just seems like the first 10 to 15 minutes tend to be wasted \r\nsimply just trying to figure out how to begin. Any ideas or tips?\r\n\r\nMany thanks!\r\n\r\nFeel free to visit my weblog; <a href=\"http://www.seaside-residences.sg/\" rel=\"nofollow\">seaside residences frasers centrepoint homes</a> http://www.seaside-residences.sg/',0,'0','Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36','',0,0),(3,217,'Jona','danialdegaris@t-online.de','http://bing.org','198.20.182.179','2016-12-31 21:28:19','2016-12-31 21:28:19','I have been browsing online more than three hours nowadays, but I never discovered any interesting article like yours.\r\nIt is lovely worth sufficient for me. Personally, if all webmasters and bloggers made just right content \r\nas you did, the internet will be a lot more useful than ever before.\r\n\r\n\r\nMy site <a href=\"http://bing.org\" rel=\"nofollow\">Jona</a>',0,'0','Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36','',0,0),(4,221,'Kill','maxinekrauss@gmail.com','http://yahoo.net/','45.57.230.121','2017-01-05 16:19:04','2017-01-05 16:19:04','Woah! I\'m really enjoying the template/theme of this blog.\r\n\r\nIt\'s simple, yet effective. A lot of times it\'s hard to get that \r\n\"perfect balance\" between usability and visual appearance.\r\n\r\nI must say that you\'ve done a superb job with this.\r\nAlso, the blog loads extremely fast for me on Chrome. Exceptional Blog!\r\n\r\n\r\n\r\nFeel free to visit my web-site: <a href=\"http://yahoo.net/\" rel=\"nofollow\">Kill</a>',0,'0','Mozilla/5.0 (X11; Linux i686; rv:17.0) Gecko/20100101 Firefox/17.0','',0,0),(5,221,'Jim','troy.shifflett@yahoo.com','http://bing.net','104.144.110.53','2017-01-06 09:02:07','2017-01-06 09:02:07','I have been browsing online more than 3 hours \r\nnowadays, yet I by no means discovered any interesting article like yours.\r\n\r\nIt is beautiful worth sufficient for me.\r\nPersonally, if all website owners and bloggers made excellent content material as you did, the web will be a lot more useful than ever \r\nbefore.\r\n\r\nFeel free to surf to my site; <a href=\"http://bing.net\" rel=\"nofollow\">Jim</a>',0,'0','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36','',0,0);


INSERT INTO `blog_options` VALUES (1,'siteurl','http://blog.mflysys.com','yes'),(2,'home','http://blog.mflysys.com','yes'),(3,'blogname','Raymond-blog','yes'),(4,'blogdescription','learn something new everyday','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','raymond.zc@gmail.com','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'comment_moderation','','yes'),(27,'moderation_notify','','yes'),(28,'permalink_structure','','yes'),(29,'gzipcompression','0','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:0:{}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'advanced_edit','0','yes'),(37,'comment_max_links','2','yes'),(38,'gmt_offset','0','yes'),(39,'default_email_category','1','yes'),(40,'recently_edited','a:2:{i:0;s:53:\"/home/web/blog/wp-content/plugins/akismet/akismet.php\";i:1;s:0:\"\";}','no'),(41,'template','twentythirteen','yes'),(42,'stylesheet','twentythirteen','yes'),(43,'comment_whitelist','1','yes'),(44,'blacklist_keys','','no'),(45,'comment_registration','','yes'),(46,'html_type','text/html','yes'),(47,'use_trackback','0','yes'),(48,'default_role','subscriber','yes'),(49,'db_version','31535','yes'),(50,'uploads_use_yearmonth_folders','1','yes'),(51,'upload_path','','yes'),(52,'blog_public','1','yes'),(53,'default_link_category','2','yes'),(54,'show_on_front','posts','yes'),(55,'tag_base','','yes'),(56,'show_avatars','1','yes'),(57,'avatar_rating','G','yes'),(58,'upload_url_path','','yes'),(59,'thumbnail_size_w','150','yes'),(60,'thumbnail_size_h','150','yes'),(61,'thumbnail_crop','1','yes'),(62,'medium_size_w','300','yes'),(63,'medium_size_h','300','yes'),(64,'avatar_default','blank','yes'),(65,'large_size_w','1024','yes'),(66,'large_size_h','1024','yes'),(67,'image_default_link_type','file','yes'),(68,'image_default_size','','yes'),(69,'image_default_align','','yes'),(70,'close_comments_for_old_posts','','yes'),(71,'close_comments_days_old','14','yes'),(72,'thread_comments','1','yes'),(73,'thread_comments_depth','5','yes'),(74,'page_comments','','yes'),(75,'comments_per_page','50','yes'),(76,'default_comments_page','newest','yes'),(77,'comment_order','asc','yes'),(78,'sticky_posts','a:0:{}','yes'),(79,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(82,'uninstall_plugins','a:0:{}','no'),(83,'timezone_string','','yes'),(84,'page_for_posts','0','yes'),(85,'page_on_front','0','yes'),(86,'default_post_format','0','yes'),(87,'link_manager_enabled','0','yes'),(88,'initial_db_version','31535','yes'),(89,'blog_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:9:\"add_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(90,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(91,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(92,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(93,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(94,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(95,'sidebars_widgets','a:5:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}','yes'),(101,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:7:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.7.1.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.7.1.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.7.1-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.7.1-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.7.1\";s:7:\"version\";s:5:\"4.7.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.7.1.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.7.1.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.7.1-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.7.1-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.7.1\";s:7:\"version\";s:5:\"4.7.1\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:2;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.6.2.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.6.2.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.6.2-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.6.2-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.6.2\";s:7:\"version\";s:5:\"4.6.2\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:3;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.5.5.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.5.5.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.5.5-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.5.5-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.5.5\";s:7:\"version\";s:5:\"4.5.5\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:4;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.4.6.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.4.6.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.4.6-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.4.6-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.4.6\";s:7:\"version\";s:5:\"4.4.6\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:5;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.3.7.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.3.7.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.3.7-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.3.7-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.3.7\";s:7:\"version\";s:5:\"4.3.7\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:6;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:60:\"https://downloads.wordpress.org/release/wordpress-4.2.11.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:60:\"https://downloads.wordpress.org/release/wordpress-4.2.11.zip\";s:10:\"no_content\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.2.11-no-content.zip\";s:11:\"new_bundled\";s:72:\"https://downloads.wordpress.org/release/wordpress-4.2.11-new-bundled.zip\";s:7:\"partial\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.2.11-partial-2.zip\";s:8:\"rollback\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.2.11-rollback-2.zip\";}s:7:\"current\";s:6:\"4.2.11\";s:7:\"version\";s:6:\"4.2.11\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:5:\"4.2.2\";s:9:\"new_files\";s:0:\"\";}}s:12:\"last_checked\";i:1484275881;s:15:\"version_checked\";s:5:\"4.2.2\";s:12:\"translations\";a:0:{}}','yes'),(1841,'_site_transient_timeout_browser_e69998cd166d0a716e585b452d0a9806','1482146933','yes'),(100,'_transient_random_seed','6b2f22fdd24dcb29a4e724c31dff80d3','yes'),(2341,'_site_transient_timeout_theme_roots','1484277685','yes'),(2342,'_site_transient_theme_roots','a:3:{s:13:\"twentyfifteen\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";}','yes'),(106,'_site_transient_timeout_browser_b0a28404cf76e9506b5b72c1b3f7da7e','1436756936','yes'),(107,'_site_transient_browser_b0a28404cf76e9506b5b72c1b3f7da7e','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"41.0.2272.76\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(108,'can_compress_scripts','1','yes'),(98,'cron','a:5:{i:1484276928;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1484276933;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1484277231;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1484290980;a:1:{s:20:\"wp_maybe_auto_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}s:7:\"version\";i:2;}','yes'),(1842,'_site_transient_browser_e69998cd166d0a716e585b452d0a9806','a:9:{s:8:\"platform\";s:7:\"Windows\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"47.0.2526.111\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2346,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1484275893;s:7:\"checked\";a:3:{s:13:\"twentyfifteen\";s:3:\"1.2\";s:14:\"twentyfourteen\";s:3:\"1.4\";s:14:\"twentythirteen\";s:3:\"1.5\";}s:8:\"response\";a:3:{s:13:\"twentyfifteen\";a:4:{s:5:\"theme\";s:13:\"twentyfifteen\";s:11:\"new_version\";s:3:\"1.7\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentyfifteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentyfifteen.1.7.zip\";}s:14:\"twentyfourteen\";a:4:{s:5:\"theme\";s:14:\"twentyfourteen\";s:11:\"new_version\";s:3:\"1.9\";s:3:\"url\";s:44:\"https://wordpress.org/themes/twentyfourteen/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/theme/twentyfourteen.1.9.zip\";}s:14:\"twentythirteen\";a:4:{s:5:\"theme\";s:14:\"twentythirteen\";s:11:\"new_version\";s:3:\"2.1\";s:3:\"url\";s:44:\"https://wordpress.org/themes/twentythirteen/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/theme/twentythirteen.2.1.zip\";}}s:12:\"translations\";a:0:{}}','yes'),(2347,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1484275893;s:8:\"response\";a:1:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:2:\"15\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:3:\"3.2\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:54:\"https://downloads.wordpress.org/plugin/akismet.3.2.zip\";}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:1:{s:9:\"hello.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:4:\"3564\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";}}}','yes'),(2239,'_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109','1483507825','no'),(2240,'_transient_feed_b9388c83948825c1edaef0d856b7b109','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:117:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"WordPress Plugins » View: Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://wordpress.org/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"WordPress Plugins » View: Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 03 Jan 2017 17:02:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:30:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"NextGEN Gallery - WordPress Gallery Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/nextgen-gallery/#post-1169\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 23 Apr 2007 20:08:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"1169@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:121:\"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 16 million downloads.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Alex Rabe\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Really Simple CAPTCHA\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"https://wordpress.org/plugins/really-simple-captcha/#post-9542\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 09 Mar 2009 02:17:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"9542@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:138:\"Really Simple CAPTCHA is a CAPTCHA module intended to be called from other plugins. It is originally created for my Contact Form 7 plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"18101@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WooCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/woocommerce/#post-29860\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Sep 2011 08:13:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29860@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"WooThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WP Super Cache\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/wp-super-cache/#post-2572\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Nov 2007 11:40:04 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2572@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"A very fast caching engine for WordPress that produces static html files.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Donncha O Caoimh\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"TinyMCE Advanced\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://wordpress.org/plugins/tinymce-advanced/#post-2082\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Jun 2007 15:00:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2082@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"Extends and enhances TinyMCE, the WordPress Visual Editor.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Andrew Ozz\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Advanced Custom Fields\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/advanced-custom-fields/#post-25254\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 17 Mar 2011 04:07:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"25254@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"Customise WordPress with powerful, professional and intuitive fields\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"elliotcondon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Regenerate Thumbnails\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:62:\"https://wordpress.org/plugins/regenerate-thumbnails/#post-6743\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 23 Aug 2008 14:38:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"6743@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"Allows you to regenerate your thumbnails after changing the thumbnail sizes.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Alex Mills (Viper007Bond)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Hello Dolly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://wordpress.org/plugins/hello-dolly/#post-5790\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 29 May 2008 22:11:34 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"5790@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"This is not just a plugin, it symbolizes the hope and enthusiasm of an entire generation summed up in two words sung most famously by Louis Armstrong.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Page Builder by SiteOrigin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/siteorigin-panels/#post-51888\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 11 Apr 2013 10:36:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"51888@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"Build responsive page layouts using the widgets you know and love using this simple drag and drop page builder.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Greg Priday\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Yoast SEO\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://wordpress.org/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"8321@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:118:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using the Yoast SEO plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"WP-PageNavi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wp-pagenavi/#post-363\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 23:17:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"363@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Adds a more advanced paging navigation interface.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Lester Chan\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"W3 Total Cache\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/w3-total-cache/#post-12073\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 29 Jul 2009 18:46:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"12073@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:144:\"Search Engine (SEO) &#38; Performance Optimization (WPO) via caching. Integrated caching: CDN, Minify, Page, Object, Fragment, Database support.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Frederick Townes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Duplicate Post\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/duplicate-post/#post-2646\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 05 Dec 2007 17:40:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2646@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Clone posts and pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Lopo\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"15@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:15;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"132@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Arne Brachhold\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:16;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Wordfence Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wordfence/#post-29832\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 04 Sep 2011 03:13:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29832@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:149:\"Secure your website with the most comprehensive WordPress security plugin. Firewall, malware scan, blocking, live traffic, login security &#38; more.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Wordfence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:17;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2141@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:18;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"753@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"One of the most downloaded WordPress plugins (over 30 million downloads since 2007). Use All in One SEO Pack to optimize your site for Search Engines.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:19;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://wordpress.org/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"23862@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:107:\"Increase your traffic, view your stats, speed up your site, and protect yourself from hackers with Jetpack.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Automattic\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:20;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"Google Analytics by MonsterInsights\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2316@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:113:\"Connect Google Analytics with WordPress by adding your Google Analytics tracking code. Get the stats that matter.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Syed Balkhi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:21;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"UpdraftPlus WordPress Backup Plugin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/updraftplus/#post-38058\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 21 May 2012 15:14:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"38058@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:148:\"Backup and restoration made easy. Complete backups; manual or scheduled (backup to S3, Dropbox, Google Drive, Rackspace, FTP, SFTP, email + others).\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"David Anderson\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:22;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Clef Two-Factor Authentication\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"https://wordpress.org/plugins/wpclef/#post-47509\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 27 Dec 2012 01:25:57 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"47509@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:139:\"Modern two-factor that people love to use: strong authentication without passwords or tokens; single sign on/off; magical login experience.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Dave Ross\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:23;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"Google Analytics Dashboard for WP\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:75:\"https://wordpress.org/plugins/google-analytics-dashboard-for-wp/#post-50539\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 10 Mar 2013 17:07:11 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"50539@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:127:\"Displays Google Analytics reports in your WordPress Dashboard. Inserts the latest Google Analytics tracking code in your pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Alin Marcu\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:24;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Disable Comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wordpress.org/plugins/disable-comments/#post-26907\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 27 May 2011 04:42:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"26907@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:150:\"Allows administrators to globally disable comments on their site. Comments can be disabled according to post type. Multisite friendly. Provides tool t\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Samir Shah\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:25;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WP Multibyte Patch\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wp-multibyte-patch/#post-28395\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 14 Jul 2011 12:22:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"28395@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"Multibyte functionality enhancement for the WordPress Japanese package.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"plugin-master\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:26;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Duplicator\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://wordpress.org/plugins/duplicator/#post-26607\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 16 May 2011 12:15:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"26607@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:88:\"Duplicate, clone, backup, move and transfer an entire site from one location to another.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Cory Lamle\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:27;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Black Studio TinyMCE Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/plugins/black-studio-tinymce-widget/#post-31973\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Nov 2011 15:06:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"31973@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"The visual editor widget for Wordpress.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Marco Chiesi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:28;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"iThemes Security (formerly Better WP Security)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/better-wp-security/#post-21738\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Oct 2010 22:06:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"21738@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:146:\"Take the guesswork out of WordPress security. iThemes Security offers 30+ ways to lock down WordPress in an easy-to-use WordPress security plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"iThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:29;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"SiteOrigin Widgets Bundle\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/so-widgets-bundle/#post-67824\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 24 May 2014 14:27:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"67824@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:128:\"A collection of all widgets, neatly bundled into a single plugin. It&#039;s also a framework to code your own widgets on top of.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Greg Priday\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:46:\"https://wordpress.org/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:12:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Tue, 03 Jan 2017 17:25:03 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:25:\"strict-transport-security\";s:11:\"max-age=360\";s:7:\"expires\";s:29:\"Tue, 03 Jan 2017 17:37:37 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Tue, 03 Jan 2017 17:02:37 +0000\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 249\";}s:5:\"build\";s:14:\"20150702064619\";}','no'),(2235,'_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1483464615','no'),(2233,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1483507815','no'),(2234,'_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1483507815','no'),(1528,'_site_transient_timeout_browser_99df0719b10b04f12be9d1d4b98a21bd','1473838550','yes'),(1529,'_site_transient_browser_99df0719b10b04f12be9d1d4b98a21bd','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"51.0.2704.79\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1720,'_site_transient_timeout_browser_9caa69fdb5af7db9f98e89109d0da400','1480508774','yes'),(1721,'_site_transient_browser_9caa69fdb5af7db9f98e89109d0da400','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"52.0.2743.116\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1324,'_site_transient_timeout_browser_2d9a5a3ac10f1981982cd99f5556e650','1465350731','yes'),(1325,'_site_transient_browser_2d9a5a3ac10f1981982cd99f5556e650','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"49.0.2623.108\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(664,'_site_transient_timeout_browser_b96cd9f83287661b914828235f74b697','1440864297','yes'),(665,'_site_transient_browser_b96cd9f83287661b914828235f74b697','a:9:{s:8:\"platform\";s:7:\"Windows\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"41.0.2272.101\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2241,'_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109','1483507825','no'),(2242,'_transient_feed_mod_b9388c83948825c1edaef0d856b7b109','1483464625','no'),(2243,'_transient_timeout_plugin_slugs','1483551025','no'),(2244,'_transient_plugin_slugs','a:2:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";}','no'),(2245,'_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51','1483507826','no'),(2246,'_transient_dash_4077549d03da2e451c8b5f002294ff51','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2016/12/vaughan/\'>WordPress 4.7 “Vaughan”</a> <span class=\"rss-date\">December 6, 2016</span><div class=\"rssSummary\">Version 4.7 of WordPress, named “Vaughan” in honor of legendary jazz vocalist Sarah &quot;Sassy&quot; Vaughan, is available for download or update in your WordPress dashboard. New features in 4.7 help you get your site set up the way you want it.</div></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wptavern.com/state-of-the-word-2016-mullenweg-pushes-calypso-as-future-of-wordpress-interface-proposes-major-changes-to-release-cycle\'>WPTavern: State of the Word 2016: Mullenweg Pushes Calypso as Future of WordPress’ Interface, Proposes Major Changes to Release Cycle</a></li><li><a class=\'rsswidget\' href=\'https://poststatus.com/matt-mullenweg-state-word-2016/\'>Post Status: Matt Mullenweg State of the Word, 2016</a></li><li><a class=\'rsswidget\' href=\'https://ma.tt/2016/12/wordcamp-live-stream/\'>Matt: WordCamp Live Stream</a></li></ul></div><div class=\"rss-widget\"><ul><li class=\'dashboard-news-plugin\'><span>Popular Plugin:</span> <a href=\'https://wordpress.org/plugins/siteorigin-panels/\' class=\'dashboard-news-plugin-link\'>Page Builder by SiteOrigin</a>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=siteorigin-panels&amp;_wpnonce=518e2c38c2&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Page Builder by SiteOrigin\'>Install</a>)</span></li></ul></div>','no'),(124,'recently_activated','a:0:{}','yes'),(2247,'_site_transient_timeout_available_translations','1483475687','yes'),(2248,'_site_transient_available_translations','a:61:{s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-26 06:57:37\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-27 06:36:25\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Напред\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-08 17:43:43\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-08 11:08:34\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-06-03 00:26:43\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Forts&#230;t\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-13 14:52:11\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-26 14:36:24\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:72:\"https://downloads.wordpress.org/translation/core/4.1.13/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-22 11:37:31\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/es_ES.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"es\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-04-25 13:39:01\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/es_PE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/es_MX.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2016-05-24 21:33:37\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.13/es_CL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"es\";i:2;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-05 20:09:08\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-15 10:49:37\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-10 14:16:27\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:3:\"4.0\";s:7:\"updated\";s:19:\"2014-09-05 17:37:43\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/4.0/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-26 15:20:27\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/translation/core/4.1.13/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-12 08:05:04\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"המשך\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-07 17:26:35\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-26 06:43:50\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Folytatás\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-04-23 15:23:08\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2016-06-05 06:46:01\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.13/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.13/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ဆောင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-07 10:32:20\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-16 14:25:19\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-06-08 07:10:14\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-06-10 17:07:58\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.2.2/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-09 10:15:05\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.13/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"دوام ورکړه\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-22 10:25:51\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-08 14:53:48\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-31 11:58:44\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-26 09:29:23\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-26 16:25:46\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.13/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Nadaljuj\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-05-29 08:27:12\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-12 00:55:52\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-06 10:10:09\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-22 10:57:52\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2015-03-26 16:45:38\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:9:\"Uyƣurqə\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.13/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-05 10:51:50\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.2.2/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:6:\"4.1.13\";s:7:\"updated\";s:19:\"2016-09-22 04:50:31\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.13/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-07-04 19:52:42\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:5:\"4.2.2\";s:7:\"updated\";s:19:\"2015-04-29 06:37:03\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.2.2/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}}','yes'),(1998,'category_children','a:1:{i:3;a:4:{i:0;i:5;i:1;i:7;i:2;i:13;i:3;i:15;}}','yes'),(139,'widget_calendar','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(138,'_transient_twentyfifteen_categories','1','yes'),(135,'ftp_credentials','a:3:{s:8:\"hostname\";s:16:\"blog.raymond.com\";s:8:\"username\";s:7:\"raymond\";s:15:\"connection_type\";s:3:\"ftp\";}','yes'),(140,'widget_nav_menu','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(141,'widget_pages','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(142,'widget_tag_cloud','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(144,'widget_widget_twentyfourteen_ephemera','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(145,'_transient_twentyfourteen_category_count','1','yes'),(146,'theme_mods_twentyfifteen','a:1:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1436154799;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}}}}','yes'),(147,'current_theme','Twenty Thirteen','yes'),(148,'theme_mods_twentyfourteen','a:2:{i:0;b:0;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1436154821;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}','yes'),(149,'theme_switched','','yes'),(150,'theme_switched_via_customizer','','yes'),(153,'theme_mods_twentythirteen','a:1:{i:0;b:0;}','yes'),(1225,'_site_transient_timeout_browser_ebb23f7bda3de6f70205f5ea830b5b1d','1457668564','yes'),(1226,'_site_transient_browser_ebb23f7bda3de6f70205f5ea830b5b1d','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"43.0.2357.81\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2142,'_site_transient_timeout_browser_d2854db6940f4667d5c5fbbeb7a4d501','1483684393','yes'),(2143,'_site_transient_browser_d2854db6940f4667d5c5fbbeb7a4d501','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"53.0.2785.143\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2231,'_site_transient_timeout_browser_8804ec930d5f99e67e9b17c2a46b44de','1484069396','yes'),(2232,'_site_transient_browser_8804ec930d5f99e67e9b17c2a46b44de','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"55.0.2883.87\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(1259,'_site_transient_timeout_browser_dc33fbab7d27993604465a4de7fdd602','1458809396','yes'),(1260,'_site_transient_browser_dc33fbab7d27993604465a4de7fdd602','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"48.0.2564.82\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(2236,'_transient_timeout_feed_d117b5738fbd35bd8c0391cda1f2b5d9','1483507820','no'),(2237,'_transient_timeout_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1483507822','no'),(2238,'_transient_feed_mod_d117b5738fbd35bd8c0391cda1f2b5d9','1483464622','no'),(1832,'WPLANG','','yes'),(2262,'_transient_is_multi_author','0','yes');


INSERT INTO `blog_postmeta` VALUES (1,2,'_wp_page_template','default'),(2,4,'_edit_last','1'),(3,4,'_edit_lock','1456051555:1'),(33,12,'_edit_last','1'),(13,9,'_menu_item_type','custom'),(14,9,'_menu_item_menu_item_parent','0'),(15,9,'_menu_item_object_id','9'),(16,9,'_menu_item_object','custom'),(17,9,'_menu_item_target',''),(18,9,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(19,9,'_menu_item_xfn',''),(20,9,'_menu_item_url','http://blog.raymond.com/'),(21,9,'_menu_item_orphaned','1436154861'),(22,10,'_menu_item_type','post_type'),(23,10,'_menu_item_menu_item_parent','0'),(24,10,'_menu_item_object_id','2'),(25,10,'_menu_item_object','page'),(26,10,'_menu_item_target',''),(27,10,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(28,10,'_menu_item_xfn',''),(29,10,'_menu_item_url',''),(30,10,'_menu_item_orphaned','1436154861'),(34,12,'_edit_lock','1436340657:1'),(35,13,'_wp_attached_file','2015/07/05001154_UcCt.png'),(36,13,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:489;s:6:\"height\";i:457;s:4:\"file\";s:25:\"2015/07/05001154_UcCt.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:25:\"05001154_UcCt-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:25:\"05001154_UcCt-300x280.png\";s:5:\"width\";i:300;s:6:\"height\";i:280;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:25:\"05001154_UcCt-489x270.png\";s:5:\"width\";i:489;s:6:\"height\";i:270;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(43,16,'_edit_last','1'),(44,16,'_edit_lock','1436184132:1'),(53,22,'_edit_last','1'),(54,22,'_edit_lock','1436348367:1'),(57,24,'_edit_last','1'),(58,24,'_edit_lock','1436352932:1'),(61,26,'_edit_last','1'),(62,26,'_edit_lock','1436254647:1'),(75,34,'_edit_last','1'),(76,34,'_edit_lock','1438980089:1'),(79,36,'_edit_last','1'),(80,36,'_edit_lock','1436462408:1'),(81,37,'_wp_attached_file','2015/07/wxpay.png'),(82,37,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:841;s:6:\"height\";i:539;s:4:\"file\";s:17:\"2015/07/wxpay.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:17:\"wxpay-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:17:\"wxpay-300x192.png\";s:5:\"width\";i:300;s:6:\"height\";i:192;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:17:\"wxpay-604x270.png\";s:5:\"width\";i:604;s:6:\"height\";i:270;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(83,38,'_wp_attached_file','2015/07/wx1.png'),(84,38,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:595;s:6:\"height\";i:247;s:4:\"file\";s:15:\"2015/07/wx1.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:15:\"wx1-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:15:\"wx1-300x125.png\";s:5:\"width\";i:300;s:6:\"height\";i:125;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(85,39,'_wp_attached_file','2015/07/我先.png'),(86,39,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:601;s:6:\"height\";i:613;s:4:\"file\";s:18:\"2015/07/我先.png\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:18:\"我先-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:18:\"我先-294x300.png\";s:5:\"width\";i:294;s:6:\"height\";i:300;s:9:\"mime-type\";s:9:\"image/png\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:18:\"我先-601x270.png\";s:5:\"width\";i:601;s:6:\"height\";i:270;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(89,41,'_edit_last','1'),(90,41,'_edit_lock','1437362460:1'),(91,42,'_edit_last','1'),(92,42,'_edit_lock','1437489266:1'),(95,44,'_edit_last','1'),(96,44,'_edit_lock','1445834636:1'),(103,47,'_edit_last','1'),(106,47,'_edit_lock','1437762551:1'),(107,49,'_edit_last','1'),(108,49,'_edit_lock','1438608643:1'),(111,51,'_edit_last','1'),(114,51,'_edit_lock','1445870611:1'),(115,54,'_edit_last','1'),(116,54,'_edit_lock','1438796514:1'),(117,55,'_edit_last','1'),(118,55,'_edit_lock','1438018931:1'),(121,57,'_edit_last','1'),(122,57,'_edit_lock','1438692846:1'),(127,60,'_edit_last','1'),(128,60,'_edit_lock','1438711780:1'),(131,62,'_edit_last','1'),(132,62,'_edit_lock','1438798221:1'),(137,66,'_edit_last','1'),(138,66,'_edit_lock','1439285870:1'),(145,71,'_edit_last','1'),(146,71,'_edit_lock','1439295399:1'),(151,76,'_edit_last','1'),(152,76,'_edit_lock','1439730977:1'),(157,76,'_wp_old_slug','centos%e9%85%8d%e7%bd%aegit-shh'),(158,79,'_edit_last','1'),(159,79,'_edit_lock','1441105123:1'),(162,81,'_edit_last','1'),(163,81,'_edit_lock','1441011601:1'),(168,83,'_oembed_cf00aa02f559bd9e1ccd859b41d50453','{{unknown}}'),(169,83,'_edit_last','1'),(170,83,'_edit_lock','1441090699:1'),(185,92,'_edit_last','1'),(186,92,'_edit_lock','1441621046:1'),(189,94,'_edit_last','1'),(190,94,'_edit_lock','1442744348:1'),(195,99,'_edit_last','1'),(196,99,'_edit_lock','1442828243:1'),(199,101,'_edit_last','1'),(200,101,'_edit_lock','1444635059:1'),(203,103,'_edit_last','1'),(204,103,'_edit_lock','1444795112:1'),(205,105,'_edit_last','1'),(206,105,'_edit_lock','1444881828:1'),(209,107,'_edit_last','1'),(210,107,'_edit_lock','1447075653:1'),(213,109,'_edit_last','1'),(214,109,'_edit_lock','1447490124:1'),(223,115,'_edit_last','1'),(224,115,'_edit_lock','1449503883:1'),(227,117,'_edit_last','1'),(230,117,'_edit_lock','1449828344:1'),(231,119,'_edit_last','1'),(232,119,'_edit_lock','1450361210:1'),(237,123,'_edit_last','1'),(238,123,'_edit_lock','1451902519:1'),(466,249,'_edit_last','1'),(241,125,'_edit_last','1'),(467,249,'_edit_lock','1483499269:1'),(244,125,'_edit_lock','1453780169:1'),(245,127,'_edit_last','1'),(246,127,'_edit_lock','1456738856:1'),(249,129,'_edit_last','1'),(250,129,'_edit_lock','1456741269:1'),(462,246,'_edit_last','1'),(253,131,'_edit_last','1'),(254,131,'_edit_lock','1458210090:1'),(463,246,'_edit_lock','1483081116:1'),(458,243,'_edit_last','1'),(259,135,'_edit_last','1'),(260,135,'_edit_lock','1464747914:1'),(459,243,'_edit_lock','1483000865:1'),(263,137,'_edit_last','1'),(264,137,'_edit_lock','1468380363:1'),(267,140,'_edit_last','1'),(268,140,'_edit_lock','1469695133:1'),(454,240,'_edit_last','1'),(271,142,'_edit_last','1'),(272,142,'_edit_lock','1469814647:1'),(455,240,'_edit_lock','1482740620:1'),(275,144,'_edit_last','1'),(276,144,'_edit_lock','1470642874:1'),(279,146,'_edit_last','1'),(280,146,'_edit_lock','1470643014:1'),(451,238,'_edit_lock','1482690786:1'),(283,150,'_edit_last','1'),(284,150,'_edit_lock','1472566251:1'),(450,238,'_edit_last','1'),(287,152,'_edit_last','1'),(290,152,'_edit_lock','1472629919:1'),(291,154,'_edit_last','1'),(292,154,'_edit_lock','1472995537:1'),(448,237,'_edit_last','1'),(295,156,'_edit_last','1'),(449,237,'_edit_lock','1482566915:1'),(298,156,'_edit_lock','1473098903:1'),(444,235,'_edit_last','1'),(445,235,'_edit_lock','1482508196:1'),(303,160,'_edit_last','1'),(304,160,'_edit_lock','1473241996:1'),(440,233,'_edit_last','1'),(441,233,'_edit_lock','1482467072:1'),(309,165,'_edit_last','1'),(310,165,'_edit_lock','1473252193:1'),(433,228,'_edit_lock','1482426356:1'),(432,228,'_edit_last','1'),(430,227,'_edit_last','1'),(431,227,'_edit_lock','1482426051:1'),(319,170,'_edit_last','1'),(320,170,'_edit_lock','1473403541:1'),(323,172,'_edit_last','1'),(324,172,'_edit_lock','1473701722:1'),(426,225,'_edit_last','1'),(327,174,'_edit_last','1'),(328,174,'_edit_lock','1473740844:1'),(427,225,'_edit_lock','1482425883:1'),(331,176,'_edit_last','1'),(332,176,'_edit_lock','1473775124:1'),(422,223,'_edit_last','1'),(335,178,'_edit_last','1'),(336,178,'_edit_lock','1473792660:1'),(423,223,'_edit_lock','1482466036:1'),(341,181,'_edit_last','1'),(342,181,'_edit_lock','1474340953:1'),(419,221,'_edit_lock','1482424309:1'),(345,181,'_oembed_d1dd98e53cd0f1fb39accf95a95f6501','{{unknown}}'),(346,183,'_edit_last','1'),(347,183,'_edit_lock','1474911799:1'),(418,221,'_edit_last','1'),(354,188,'_edit_last','1'),(355,188,'_edit_lock','1476442334:1'),(417,219,'_edit_lock','1481906823:1'),(406,215,'_edit_last','1'),(407,215,'_edit_lock','1481906363:1'),(416,219,'_edit_last','1'),(410,217,'_edit_last','1'),(411,217,'_edit_lock','1481906644:1'),(366,194,'_edit_last','1'),(367,194,'_edit_lock','1480278296:1'),(402,213,'_edit_last','1'),(370,196,'_edit_last','1'),(371,196,'_edit_lock','1480314314:1'),(403,213,'_edit_lock','1481906028:1'),(374,198,'_edit_last','1'),(375,198,'_edit_lock','1480316857:1'),(378,200,'_edit_last','1'),(379,200,'_edit_lock','1480412559:1'),(398,211,'_edit_last','1'),(394,209,'_edit_last','1'),(395,209,'_edit_lock','1481905289:1'),(399,211,'_edit_lock','1481905721:1'),(391,207,'_edit_lock','1481543980:1'),(390,207,'_edit_last','1');

INSERT INTO `blog_posts` VALUES (12,1,'2015-07-06 05:46:34','2015-07-06 05:46:34','Gearman是一个分发任务的程序框架．它提供了你进行并行工作的能力、负载均衡处理的能力，以及在不同程序语言之间沟通的能力。\r\n使用Gearman的应用通常有三部分组成：一个Client、一个Worker、一个 任务服务器。\r\nClient的提出一个 Job 任务 交给 Job Server 任务服务器。Job Server 会去寻找一个 合适的 Worker 来完成这项任务。Worker 执行由 Client 发送过来的 Job，并且将结果通过 Job Server 返回给 Client。\r\nGearman 提供了 Client 和 Worker 的 API，利用这些API 应用 Client 和 Worker 可以同 Gearman Job Server通过 TCP 连接来进行通信。\r\n<p style=\"text-align: justify;\"><a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt.png\"><img class=\"alignnone size-medium wp-image-13\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt-300x280.png\" alt=\"05001154_UcCt\" width=\"300\" height=\"280\" /></a></p>\r\n<p style=\"text-align: justify;\"></p>\r\n<p style=\"text-align: justify;\"></p>\r\n<p style=\"text-align: justify;\">gearman 主要的两个应用\r\n1.实现不同语言程序直接的调用\r\n2.负载分担</p>','gearman简介','','publish','open','open','','gearman%e7%ae%80%e4%bb%8b','','','2015-07-08 07:10:15','2015-07-08 07:10:15','',0,'http://blog.raymond.com/?p=12',0,'post','',0),(2,1,'2015-07-06 03:08:29','2015-07-06 03:08:29','This is an example page. It\'s different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:\n\n<blockquote>Hi there! I\'m a bike messenger by day, aspiring actor by night, and this is my blog. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin\' caught in the rain.)</blockquote>\n\n...or something like this:\n\n<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>\n\nAs a new WordPress user, you should go to <a href=\"http://blog.raymond.com/wp-admin/\">your dashboard</a> to delete this page and create new pages for your content. Have fun!','Sample Page','','publish','open','open','','sample-page','','','2015-07-06 03:08:29','2015-07-06 03:08:29','',0,'http://blog.raymond.com/?page_id=2',0,'page','',0),(4,1,'2015-07-06 03:43:33','2015-07-06 03:43:33','记录个人blog的第一步就是搭建个人blog站点．由于是买个vps，所以首先需要搭建 php+nginx+mysql．但是搭建过程中出现了一些问题．\r\n\r\n1.基础配置,yum安装\r\n\r\n<em><span style=\"color: #999999;\">rpm -Uvh 升级软件包</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install nginx 安装 nginx</span></em>\r\n<em><span style=\"color: #999999;\"> chkconfig nginx on 设置nginx为开机启动</span></em>\r\n<em><span style=\"color: #999999;\"> service nginx start 启动nginx</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install mysql mysql-server 安装mysql</span></em>\r\n<em><span style=\"color: #999999;\"> /etc/init.d/mysqld start 启动</span></em>\r\n<em><span style=\"color: #999999;\"> chkconfig mysqld on #设为开机启动</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install php php-devel 安装php</span></em>\r\n<em><span style=\"color: #999999;\"> /etc/init.d/httpd restart 启动</span></em>\r\n<em><span style=\"color: #999999;\"> yum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc 安装扩展</span></em>\r\n\r\n<span style=\"color: #333333;\">安装php-fpm(php5.3.3之前的需要)</span>\r\n<em><span style=\"color: #999999;\"> yum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64</span></em>\r\n<em><span style=\"color: #999999;\"> yum install php55w-fpm</span></em>\r\n\r\n2.nginx 502\r\n基础安装完成，配置nginx完成了，但是打开php站点发现nginx 502\r\n原因：php-fpm 没有配置好\r\n<em><span style=\"color: #999999;\">netstat -anpo | grep \"php-cgi\" | wc -l 　　查看当前的进程是否够用</span></em>\r\n<em><span style=\"color: #999999;\"> /usr/local/php/sbin/php-fpm -t　　测试php-fpm配置</span></em>\r\n<em><span style=\"color: #999999;\"> /usr/local/php/sbin/php-fpm　　启动php-fpm</span></em>\r\n<em><span style=\"color: #999999;\"> kill -INT `cat /usr/local/php/var/run/php-fpm.pid　　关闭php-fpm</span></em>\r\n<em><span style=\"color: #999999;\"> kill -USR2 `cat /usr/local/php/var/run/php-fpm.pid　　重启php-fpm</span></em>\r\n\r\n3.　fastcgi_pass错误\r\n当php-fpm配置完成之后,出现了另一个错误\r\n12521#0: *1 connect() to unix:/var/run/php5-fpm.sock failed (2: No such file or directory) while connecting to upstream\r\n这个主要原因就是　fastcgi_pass　的配置,nginx 和　php-fpm 不一致\r\nphp-fpm配置：\r\n<em><span style=\"color: #808080;\">fastcgi_pass unix:/tmp/php5-fpm.sock;</span></em>\r\n\r\n<em><span style=\"color: #808080;\">listen = /tmp/php5-fpm.sock</span></em>\r\n<em><span style=\"color: #808080;\"> listen.owner = nginx</span></em>\r\n<em><span style=\"color: #808080;\"> listen.group = nginx</span></em>\r\n\r\n<span style=\"color: #000000;\">nginx.conf配置</span>\r\n<em><span style=\"color: #808080;\"> fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span></em>\r\n\r\n4.Can\'t connect to local MySQL server through socket \'/var/lib/mysql/mysql.sock\' (2)\r\n没启动mysql,启动一下\r\n<em><span style=\"color: #808080;\">service mysqld restart</span></em>\r\n\r\n5.Cannot start session without errors, please check errors given in your PHP and/or webserver log file and configure your PHP installation properly. Also ensure that cookies are enabled in your browser.\r\nPHP没有权限写log造成的\r\n修改php的 cookie 和 session目录，并且设置auto_start为on，\r\n<em><span style=\"color: #808080;\">chown nobody:nobody session</span></em>\r\n<em><span style=\"color: #808080;\"> chmod -R 777 session</span></em>\r\n\r\n6.修改wp配置，启动安装，done!','centos6.6 搭建nginx+php+mysql','','publish','open','open','','centos6-6-%e6%90%ad%e5%bb%banginxphpmysql','','','2015-07-06 03:50:59','2015-07-06 03:50:59','',0,'http://blog.raymond.com/?p=4',0,'post','',0),(5,1,'2015-07-06 03:42:46','2015-07-06 03:42:46','记录个人blog的第一步就是搭建个人blog站点．由于是买个vps，所以首先需要搭建 php+nginx+mysql．但是搭建过程中出现了一些问题．\r\n\r\n1.基础配置,yum安装\r\n\r\nrpm -Uvh 升级软件包\r\n\r\nyum install nginx 安装 nginx\r\nchkconfig nginx on 设置nginx为开机启动\r\nservice nginx start 启动nginx\r\n\r\nyum install mysql mysql-server 安装mysql\r\n/etc/init.d/mysqld start 启动\r\nchkconfig mysqld on #设为开机启动\r\n\r\nyum install php php-devel 安装php\r\n/etc/init.d/httpd restart 启动\r\nyum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc 安装扩展\r\n\r\n安装php-fpm(php5.3.3之前的需要)\r\nyum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64\r\nyum install php55w-fpm\r\n\r\n2.nginx 502\r\n基础安装完成，配置nginx完成了，但是打开php站点发现nginx 502\r\n原因：php-fpm 没有配置好\r\nnetstat -anpo | grep \"php-cgi\" | wc -l 　　查看当前的进程是否够用\r\n/usr/local/php/sbin/php-fpm -t　　测试php-fpm配置\r\n/usr/local/php/sbin/php-fpm　　启动php-fpm\r\nkill -INT `cat /usr/local/php/var/run/php-fpm.pid　　关闭php-fpm\r\nkill -USR2 `cat /usr/local/php/var/run/php-fpm.pid　　重启php-fpm\r\n\r\n3.　fastcgi_pass错误\r\n当php-fpm配置完成之后,出现了另一个错误\r\n12521#0: *1 connect() to unix:/var/run/php5-fpm.sock failed (2: No such file or directory) while connecting to upstream\r\n这个主要原因就是　fastcgi_pass　的配置,nginx 和　php-fpm 不一致\r\nphp-fpm配置：\r\nfastcgi_pass unix:/tmp/php5-fpm.sock;\r\n\r\nlisten = /tmp/php5-fpm.sock\r\nlisten.owner = nginx\r\nlisten.group = nginx\r\n\r\nnginx.conf配置\r\nfastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n\r\n4.Can\'t connect to local MySQL server through socket \'/var/lib/mysql/mysql.sock\' (2)\r\n没启动mysql,启动一下\r\nservice mysqld restart\r\n\r\n5.Cannot start session without errors, please check errors given in your PHP and/or webserver log file and configure your PHP installation properly. Also ensure that cookies are enabled in your browser.\r\nPHP没有权限写log造成的\r\n修改php的 cookie 和 session目录，并且设置auto_start为on，\r\nchown nobody:nobody session\r\nchmod -R 777 session\r\n\r\n6.修改wp配置，启动安装，done!','centos6.6 搭建nginx+php+mysql','','inherit','open','open','','4-revision-v1','','','2015-07-06 03:42:46','2015-07-06 03:42:46','',4,'http://blog.raymond.com/?p=5',0,'revision','',0),(7,1,'2015-07-06 03:49:44','2015-07-06 03:49:44','记录个人blog的第一步就是搭建个人blog站点．由于是买个vps，所以首先需要搭建 php+nginx+mysql．但是搭建过程中出现了一些问题．\n\n1.基础配置,yum安装\n\n<span style=\"color: #999999;\">rpm -Uvh 升级软件包</span>\n\n<span style=\"color: #999999;\">yum install nginx 安装 nginx</span>\n<span style=\"color: #999999;\"> chkconfig nginx on 设置nginx为开机启动</span>\n<span style=\"color: #999999;\"> service nginx start 启动nginx</span>\n\n<span style=\"color: #999999;\">yum install mysql mysql-server 安装mysql</span>\n<span style=\"color: #999999;\"> /etc/init.d/mysqld start 启动</span>\n<span style=\"color: #999999;\"> chkconfig mysqld on #设为开机启动</span>\n\n<span style=\"color: #999999;\">yum install php php-devel 安装php</span>\n<span style=\"color: #999999;\"> /etc/init.d/httpd restart 启动</span>\n<span style=\"color: #999999;\"> yum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc 安装扩展</span>\n\n<span style=\"color: #999999;\">安装php-fpm(php5.3.3之前的需要)</span>\n<span style=\"color: #999999;\"> yum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64</span>\n<span style=\"color: #999999;\"> yum install php55w-fpm</span>\n\n2.nginx 502\n基础安装完成，配置nginx完成了，但是打开php站点发现nginx 502\n原因：php-fpm 没有配置好\nnetstat -anpo | grep \"php-cgi\" | wc -l 　　查看当前的进程是否够用\n/usr/local/php/sbin/php-fpm -t　　测试php-fpm配置\n/usr/local/php/sbin/php-fpm　　启动php-fpm\nkill -INT `cat /usr/local/php/var/run/php-fpm.pid　　关闭php-fpm\nkill -USR2 `cat /usr/local/php/var/run/php-fpm.pid　　重启php-fpm\n\n3.　fastcgi_pass错误\n当php-fpm配置完成之后,出现了另一个错误\n12521#0: *1 connect() to unix:/var/run/php5-fpm.sock failed (2: No such file or directory) while connecting to upstream\n这个主要原因就是　fastcgi_pass　的配置,nginx 和　php-fpm 不一致\nphp-fpm配置：\nfastcgi_pass unix:/tmp/php5-fpm.sock;\n\nlisten = /tmp/php5-fpm.sock\nlisten.owner = nginx\nlisten.group = nginx\n\nnginx.conf配置\nfastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\n4.Can\'t connect to local MySQL server through socket \'/var/lib/mysql/mysql.sock\' (2)\n没启动mysql,启动一下\nservice mysqld restart\n\n5.Cannot start session without errors, please check errors given in your PHP and/or webserver log file and configure your PHP installation properly. Also ensure that cookies are enabled in your browser.\nPHP没有权限写log造成的\n修改php的 cookie 和 session目录，并且设置auto_start为on，\nchown nobody:nobody session\nchmod -R 777 session\n\n6.修改wp配置，启动安装，done!','centos6.6 搭建nginx+php+mysql','','inherit','open','open','','4-autosave-v1','','','2015-07-06 03:49:44','2015-07-06 03:49:44','',4,'http://blog.raymond.com/?p=7',0,'revision','',0),(8,1,'2015-07-06 03:50:59','2015-07-06 03:50:59','记录个人blog的第一步就是搭建个人blog站点．由于是买个vps，所以首先需要搭建 php+nginx+mysql．但是搭建过程中出现了一些问题．\r\n\r\n1.基础配置,yum安装\r\n\r\n<em><span style=\"color: #999999;\">rpm -Uvh 升级软件包</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install nginx 安装 nginx</span></em>\r\n<em><span style=\"color: #999999;\"> chkconfig nginx on 设置nginx为开机启动</span></em>\r\n<em><span style=\"color: #999999;\"> service nginx start 启动nginx</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install mysql mysql-server 安装mysql</span></em>\r\n<em><span style=\"color: #999999;\"> /etc/init.d/mysqld start 启动</span></em>\r\n<em><span style=\"color: #999999;\"> chkconfig mysqld on #设为开机启动</span></em>\r\n\r\n<em><span style=\"color: #999999;\">yum install php php-devel 安装php</span></em>\r\n<em><span style=\"color: #999999;\"> /etc/init.d/httpd restart 启动</span></em>\r\n<em><span style=\"color: #999999;\"> yum install php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc 安装扩展</span></em>\r\n\r\n<span style=\"color: #333333;\">安装php-fpm(php5.3.3之前的需要)</span>\r\n<em><span style=\"color: #999999;\"> yum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64</span></em>\r\n<em><span style=\"color: #999999;\"> yum install php55w-fpm</span></em>\r\n\r\n2.nginx 502\r\n基础安装完成，配置nginx完成了，但是打开php站点发现nginx 502\r\n原因：php-fpm 没有配置好\r\n<em><span style=\"color: #999999;\">netstat -anpo | grep \"php-cgi\" | wc -l 　　查看当前的进程是否够用</span></em>\r\n<em><span style=\"color: #999999;\"> /usr/local/php/sbin/php-fpm -t　　测试php-fpm配置</span></em>\r\n<em><span style=\"color: #999999;\"> /usr/local/php/sbin/php-fpm　　启动php-fpm</span></em>\r\n<em><span style=\"color: #999999;\"> kill -INT `cat /usr/local/php/var/run/php-fpm.pid　　关闭php-fpm</span></em>\r\n<em><span style=\"color: #999999;\"> kill -USR2 `cat /usr/local/php/var/run/php-fpm.pid　　重启php-fpm</span></em>\r\n\r\n3.　fastcgi_pass错误\r\n当php-fpm配置完成之后,出现了另一个错误\r\n12521#0: *1 connect() to unix:/var/run/php5-fpm.sock failed (2: No such file or directory) while connecting to upstream\r\n这个主要原因就是　fastcgi_pass　的配置,nginx 和　php-fpm 不一致\r\nphp-fpm配置：\r\n<em><span style=\"color: #808080;\">fastcgi_pass unix:/tmp/php5-fpm.sock;</span></em>\r\n\r\n<em><span style=\"color: #808080;\">listen = /tmp/php5-fpm.sock</span></em>\r\n<em><span style=\"color: #808080;\"> listen.owner = nginx</span></em>\r\n<em><span style=\"color: #808080;\"> listen.group = nginx</span></em>\r\n\r\n<span style=\"color: #000000;\">nginx.conf配置</span>\r\n<em><span style=\"color: #808080;\"> fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span></em>\r\n\r\n4.Can\'t connect to local MySQL server through socket \'/var/lib/mysql/mysql.sock\' (2)\r\n没启动mysql,启动一下\r\n<em><span style=\"color: #808080;\">service mysqld restart</span></em>\r\n\r\n5.Cannot start session without errors, please check errors given in your PHP and/or webserver log file and configure your PHP installation properly. Also ensure that cookies are enabled in your browser.\r\nPHP没有权限写log造成的\r\n修改php的 cookie 和 session目录，并且设置auto_start为on，\r\n<em><span style=\"color: #808080;\">chown nobody:nobody session</span></em>\r\n<em><span style=\"color: #808080;\"> chmod -R 777 session</span></em>\r\n\r\n6.修改wp配置，启动安装，done!','centos6.6 搭建nginx+php+mysql','','inherit','open','open','','4-revision-v1','','','2015-07-06 03:50:59','2015-07-06 03:50:59','',4,'http://blog.raymond.com/?p=8',0,'revision','',0),(9,1,'2015-07-06 03:54:21','0000-00-00 00:00:00','','Home','','draft','open','open','','','','','2015-07-06 03:54:21','0000-00-00 00:00:00','',0,'http://blog.raymond.com/?p=9',1,'nav_menu_item','',0),(10,1,'2015-07-06 03:54:21','0000-00-00 00:00:00',' ','','','draft','open','open','','','','','2015-07-06 03:54:21','0000-00-00 00:00:00','',0,'http://blog.raymond.com/?p=10',1,'nav_menu_item','',0),(13,1,'2015-07-06 05:43:28','2015-07-06 05:43:28','','05001154_UcCt','','inherit','open','open','','05001154_ucct','','','2015-07-06 05:43:28','2015-07-06 05:43:28','',12,'http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt.png',0,'attachment','image/png',0),(14,1,'2015-07-06 05:46:34','2015-07-06 05:46:34','Gearman是一个分发任务的程序框架．它提供了你进行并行工作的能力、负载均衡处理的能力，以及在不同程序语言之间沟通的能力。\r\n使用Gearman的应用通常有三部分组成：一个Client、一个Worker、一个 任务服务器。\r\nClient的提出一个 Job 任务 交给 Job Server 任务服务器。Job Server 会去寻找一个 合适的 Worker 来完成这项任务。Worker 执行由 Client 发送过来的 Job，并且将结果通过 Job Server 返回给 Client。\r\nGearman 提供了 Client 和 Worker 的 API，利用这些API 应用 Client 和 Worker 可以同 Gearman Job Server通过 TCP 连接来进行通信。\r\n<p style=\"text-align: justify;\"><a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt.png\"><img class=\"alignnone size-medium wp-image-13\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt-300x280.png\" alt=\"05001154_UcCt\" width=\"300\" height=\"280\" /></a></p>','gearman简介','','inherit','open','open','','12-revision-v1','','','2015-07-06 05:46:34','2015-07-06 05:46:34','',12,'http://blog.raymond.com/?p=14',0,'revision','',0),(16,1,'2015-07-06 07:15:08','2015-07-06 07:15:08','安装libevent：\r\nlibevent是一个基于事件触发的网络库，memcached底层也是使用libevent库.\r\n由下面几大部分组成：\r\n* 事件管理包括各种IO（socket）、定时器、信号等事件，也是libevent应用最广的模块；\r\n* 缓存管理是指evbuffer功能；\r\n* DNS是libevent提供的一个异步DNS查询功能；\r\n* HTTP是libevent的一个轻量级http实现，包括服务器和客户端\r\n2.安装gearman\r\n\r\n3.安装gearman的php扩展\r\n\r\n&nbsp;\r\n\r\n&nbsp;','安装gearman','','publish','open','open','','%e5%ae%89%e8%a3%85gearman','','','2015-07-06 12:04:29','2015-07-06 12:04:29','',0,'http://blog.raymond.com/?p=16',0,'post','',0),(21,1,'2015-07-06 12:04:29','2015-07-06 12:04:29','安装libevent：\r\nlibevent是一个基于事件触发的网络库，memcached底层也是使用libevent库.\r\n由下面几大部分组成：\r\n* 事件管理包括各种IO（socket）、定时器、信号等事件，也是libevent应用最广的模块；\r\n* 缓存管理是指evbuffer功能；\r\n* DNS是libevent提供的一个异步DNS查询功能；\r\n* HTTP是libevent的一个轻量级http实现，包括服务器和客户端\r\n2.安装gearman\r\n\r\n3.安装gearman的php扩展\r\n\r\n&nbsp;\r\n\r\n&nbsp;','安装gearman','','inherit','open','open','','16-revision-v1','','','2015-07-06 12:04:29','2015-07-06 12:04:29','',16,'http://blog.raymond.com/?p=21',0,'revision','',0),(17,1,'2015-07-06 07:15:08','2015-07-06 07:15:08','安装libevent：\r\nlibevent是一个基于事件触发的网络库，memcached底层也是使用libevent库.\r\n由下面几大部分组成：\r\n* 事件管理包括各种IO（socket）、定时器、信号等事件，也是libevent应用最广的模块；\r\n* 缓存管理是指evbuffer功能；\r\n* DNS是libevent提供的一个异步DNS查询功能；\r\n* HTTP是libevent的一个轻量级http实现，包括服务器和客户端\r\nwget http://www.monkey.org/~provos/libevent-1.4.12-stable.tar.gz\r\ntar zxvf libevent-1.4.12-stable.tar.gz\r\ncd libevent-1.4.12-stable/\r\n./configure --prefix=/usr\r\nmake &amp;&amp; make install\r\n/sbin/ldconfig\r\ncd ../','安装gearman','','inherit','open','open','','16-revision-v1','','','2015-07-06 07:15:08','2015-07-06 07:15:08','',16,'http://blog.raymond.com/?p=17',0,'revision','',0),(223,1,'2016-12-22 16:34:52','2016-12-22 16:34:52','数字\r\nint,int8,int16,int32\r\nuint,uint8,uint16,uint32.uint64\r\nfloat32,float63\r\n\r\n字符\r\nstring\r\n\r\n数组\r\n定义：\r\n（1） var array[10] int\r\narray[0] = 1\r\n（2） array:=[10]int{1}\r\n遍历：\r\nfor key,val := range array{\r\n//此处key为数组键，val为数组值\r\n}\r\n\r\n切片（不用指定大小的数组）\r\n定义：\r\n（1） slice:=[]int{1,2,3}\r\n（2） 从旧切片中截取 sliceTemp:=slice[1:2]\r\n（3） slice:=make([]int,5,10)\r\nappend(slice,1,2,3)\r\n读取:\r\n和数组一样\r\n\r\n字典\r\n定义：\r\n（1） m:=make(map[string]int)\r\nm[\"first\"]=1\r\ndelete(m,\"first\")\r\n（2） m:=map[string]int{\r\n\"first\":1,\r\n\"second\":2\r\n}\r\n\r\n&nbsp;\r\n\r\n结构体\r\n定义：\r\ntype 结构体名称 struct{\r\n字段名 字段值类型\r\n}\r\n\r\ntype Rectangle struct{\r\nwidth float64\r\nheight float64\r\n}\r\n实例：\r\n（1） var r Rectangle\r\nr.width=20\r\nr.height=20\r\n（2） r = Rectangle{width:20,height:20}\r\n（3） r =Rectangle{20,20}\r\n定义结构体的方法\r\nfunc (r *Rectangle)area() float64{\r\nreturn r.width * r.height\r\n}\r\n\r\n&nbsp;\r\n\r\n通道类型\r\n定义：\r\nc:=make(chan int,10)\r\n赋值：\r\nc&lt;-0\r\n从通道接收数据\r\ni:&lt;-c','go学习笔记(1)：基础数据类型','','publish','open','open','','go%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b01%ef%bc%9a%e5%9f%ba%e7%a1%80%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b','','','2016-12-23 04:09:36','2016-12-23 04:09:36','',0,'http://blog.mflysys.com/?p=223',0,'post','',0),(20,1,'2015-07-06 09:34:39','2015-07-06 09:34:39','安装libevent：\nlibevent是一个基于事件触发的网络库，memcached底层也是使用libevent库.\n由下面几大部分组成：\n* 事件管理包括各种IO（socket）、定时器、信号等事件，也是libevent应用最广的模块；\n* 缓存管理是指evbuffer功能；\n* DNS是libevent提供的一个异步DNS查询功能；\n* HTTP是libevent的一个轻量级http实现，包括服务器和客户端\n2.安装gearman\n\n3.安装gearman的php扩展\n\n&nbsp;\n\n&nbsp;','安装gearman','','inherit','open','open','','16-autosave-v1','','','2015-07-06 09:34:39','2015-07-06 09:34:39','',16,'http://blog.raymond.com/?p=20',0,'revision','',0),(22,1,'2015-07-06 12:05:07','2015-07-06 12:05:07','ubuntu安装gearman\r\n\r\n1. 安装依赖包：\r\n\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install gcc autoconf bison flex libtool make libboost-all-dev libcurl4-openssl-dev curl libevent-dev memcached uuid-dev libsqlite3-dev libmysqlclient-dev\r\n\r\n2.下载Gearman版本\r\n\r\nwget https://launchpad.net/gearmand/1.2/1.1.5/+download/gearmand-1.1.5.tar.gz\r\n\r\n3.解压、编译、安装源码包\r\n\r\ntar xvzf gearmand-1.1.5.tar.gz\r\ncd gearmand-1.1.5\r\n./configure\r\nmake &amp;&amp; make install\r\n\r\n4.为大多数最新的共享库创建必须的链接和缓存。其中可能报：\r\nerror: gearman: error while loading shared libraries: libgearman.so.6: cannot open shared object file: No such file or directory\r\n解决办法：sudo ldconfig\r\n\r\n5.在php.ini文件末尾添加\"extension=gearman.so\"\r\nsudo echo \"extension = gearman.so\" &gt; /etc/php5/conf.d/php.ini\r\n如果找不到gearman.so，重新下载扩展库\r\nwget http://pecl.php.net/get/gearman-1.1.2.tgz\r\ntar zxvf gearman-1.1.2.tgz\r\ncd gearman-1.1.2/\r\nphpize\r\nwhereis php-config\r\n./configure --with-php-config=/usr/bin/php-config\r\nmake &amp;&amp; make install\r\n\r\n6.检测扩展是否安装成功\r\nphp --info | grep \"gearman support\"\r\ngearman support =&gt; enabled\r\n显示出:gearman support =&gt; enabled，就表示安装成功了\r\n\r\n7测试\r\n1)生成libgearman.so.8: sudo ldconfig\r\n2)启动gearmand: gearmand -d\r\n\r\n&nbsp;\r\n\r\n如果要安装命令行:\r\nsudo apt-get install gearman-tools','ubuntu12.0.4 安装gearman','','publish','open','open','','ubuntu12-0-4-%e5%ae%89%e8%a3%85gearman','','','2015-07-08 09:41:44','2015-07-08 09:41:44','',0,'http://blog.raymond.com/?p=22',0,'post','',0),(23,1,'2015-07-06 12:05:07','2015-07-06 12:05:07','ubuntu安装gearman\r\n\r\n1. 安装依赖包：\r\n\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install gcc autoconf bison flex libtool make libboost-all-dev libcurl4-openssl-dev curl libevent-dev memcached uuid-dev libsqlite3-dev libmysqlclient-dev\r\n\r\n2.下载Gearman版本\r\n\r\nwget https://launchpad.net/gearmand/1.2/1.1.5/+download/gearmand-1.1.5.tar.gz\r\n\r\n3.解压、编译、安装源码包\r\n\r\ntar xvzf gearmand-1.1.5.tar.gz\r\ncd gearmand-1.1.5\r\n./configure\r\nmake &amp;&amp; make install\r\n\r\n4.为大多数最新的共享库创建必须的链接和缓存。其中可能报：\r\nerror: gearman: error while loading shared libraries: libgearman.so.6: cannot open shared object file: No such file or directory\r\n解决办法：sudo ldconfig\r\n\r\n5.在php.ini文件末尾添加\"extension=gearman.so\"\r\nsudo echo \"extension = gearman.so\" &gt; /etc/php5/conf.d/php.ini\r\n如果找不到gearman.so，重新下载扩展库\r\nwget http://pecl.php.net/get/gearman-1.1.2.tgz\r\ntar zxvf gearman-1.1.2.tgz\r\ncd gearman-1.1.2/\r\nphpize\r\nwhereis php-config\r\n./configure --with-php-config=/usr/bin/php-config\r\nmake &amp;&amp; make install\r\n\r\n6.检测扩展是否安装成功\r\nphp --info | grep \"gearman support\"\r\ngearman support =&gt; enabled\r\n显示出:gearman support =&gt; enabled，就表示安装成功了\r\n\r\n7测试\r\n1)生成libgearman.so.8: sudo ldconfig\r\n2)启动gearmand: gearmand -d','ubuntu12.0.4 安装gearman','','inherit','open','open','','22-revision-v1','','','2015-07-06 12:05:07','2015-07-06 12:05:07','',22,'http://blog.raymond.com/?p=23',0,'revision','',0),(24,1,'2015-07-06 12:21:37','2015-07-06 12:21:37','<strong>client.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $client= new GearmanClient();</span></em>\r\n<em><span style=\"color: #808080;\"> $client-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> print $client-&gt;do(\"title\", \"AlL THE World\'s a sTagE\");</span></em>\r\n<em><span style=\"color: #808080;\"> print \"\\n\";</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n<strong>worker.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $worker= new GearmanWorker();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addFunction(\"title\", \"title_function\");</span></em>\r\n<em><span style=\"color: #808080;\"> while ($worker-&gt;work());</span></em>\r\n\r\n<em><span style=\"color: #808080;\"> function title_function($job)</span></em>\r\n<em><span style=\"color: #808080;\"> {</span></em>\r\n<em><span style=\"color: #808080;\"> return ucwords(\"Hello!  \".strtolower($job-&gt;workload()));</span></em>\r\n<em><span style=\"color: #808080;\"> }</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n\r\n1、启动job\r\n<em><span style=\"color: #808080;\">gearmand -d</span></em>\r\n2、启动worker\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] worker.php</span></em>\r\n3、启动client\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] client.php</span></em>\r\n\r\n输出：\r\n\r\n[1] 10062\r\nHello! All The World\'s A Stage\r\n\r\n&nbsp;\r\n\r\n<strong>命令行下：</strong>\r\n启动Worker：gearman -w -f wc -- wc -l &amp;\r\n运行Client：gearman -f wc &lt; /etc/passwd\r\n\r\n输出:\r\n\r\n10 (passwd的行数)\r\n\r\n&nbsp;\r\n\r\nGearman 分布式任务实现原理上只用到2个字段，function name和data。\r\nfunction name即任务名称，由client传给job server, job server根据function name选择合适的worker节点来执行。\r\ndata通常为执行任务所需的自定义的内容，比如简单的做法可以把需要执行的脚本当成data即可(当然要注 意其中的安全防范)。\r\n如果有多个worker可以处理同一个function name, 则job server会自动分配一个。当用于远程监控场景时，我们可以让每个worker注册成不同的业务名称，以达到方便控制每台worker节点的目的。','gearman初体验','','publish','open','open','','gearman%e5%88%9d%e4%bd%93%e9%aa%8c','','','2015-07-08 09:44:03','2015-07-08 09:44:03','',0,'http://blog.raymond.com/?p=24',0,'post','',0),(25,1,'2015-07-06 12:21:37','2015-07-06 12:21:37','<strong>client.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $client= new GearmanClient();</span></em>\r\n<em><span style=\"color: #808080;\"> $client-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> print $client-&gt;do(\"title\", \"AlL THE World\'s a sTagE\");</span></em>\r\n<em><span style=\"color: #808080;\"> print \"\\n\";</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n<strong>worker.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $worker= new GearmanWorker();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addFunction(\"title\", \"title_function\");</span></em>\r\n<em><span style=\"color: #808080;\"> while ($worker-&gt;work());</span></em>\r\n\r\n<em><span style=\"color: #808080;\"> function title_function($job)</span></em>\r\n<em><span style=\"color: #808080;\"> {</span></em>\r\n<em><span style=\"color: #808080;\"> return ucwords(\"Hello!  \".strtolower($job-&gt;workload()));</span></em>\r\n<em><span style=\"color: #808080;\"> }</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n\r\n1、启动job\r\n<em><span style=\"color: #808080;\">gearmand -d</span></em>\r\n2、启动worker\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] worker.php</span></em>\r\n3、启动client\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] client.php</span></em>\r\n\r\n输出：\r\n\r\n[1] 10062\r\nHello! All The World\'s A Stage','gearman初体验','','inherit','open','open','','24-revision-v1','','','2015-07-06 12:21:37','2015-07-06 12:21:37','',24,'http://blog.raymond.com/?p=25',0,'revision','',0),(26,1,'2015-07-07 07:07:56','2015-07-07 07:07:56','date(\'Y-m-d\', mktime(0,0,0,date(\'m\')-1,1,date(\'Y\'))); //上个月的开始日期\r\ndate(\'Y-m-d\', mktime(0,0,0,date(\'m\')-1,$t,date(\'Y\'))); //上个月的结束日期\r\ndate(\'t\',strtotime(date())); //这个月共多少天','PHP时间处理','','publish','open','open','','php%e6%97%b6%e9%97%b4%e5%a4%84%e7%90%86','','','2015-07-07 07:07:56','2015-07-07 07:07:56','',0,'http://blog.raymond.com/?p=26',0,'post','',0),(27,1,'2015-07-07 07:07:56','2015-07-07 07:07:56','date(\'Y-m-d\', mktime(0,0,0,date(\'m\')-1,1,date(\'Y\'))); //上个月的开始日期\r\ndate(\'Y-m-d\', mktime(0,0,0,date(\'m\')-1,$t,date(\'Y\'))); //上个月的结束日期\r\ndate(\'t\',strtotime(date())); //这个月共多少天','PHP时间处理','','inherit','open','open','','26-revision-v1','','','2015-07-07 07:07:56','2015-07-07 07:07:56','',26,'http://blog.raymond.com/?p=27',0,'revision','',0),(28,1,'2015-07-07 09:08:39','2015-07-07 09:08:39','<strong>client.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $client= new GearmanClient();</span></em>\r\n<em><span style=\"color: #808080;\"> $client-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> print $client-&gt;do(\"title\", \"AlL THE World\'s a sTagE\");</span></em>\r\n<em><span style=\"color: #808080;\"> print \"\\n\";</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n<strong>worker.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $worker= new GearmanWorker();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addFunction(\"title\", \"title_function\");</span></em>\r\n<em><span style=\"color: #808080;\"> while ($worker-&gt;work());</span></em>\r\n\r\n<em><span style=\"color: #808080;\"> function title_function($job)</span></em>\r\n<em><span style=\"color: #808080;\"> {</span></em>\r\n<em><span style=\"color: #808080;\"> return ucwords(\"Hello!  \".strtolower($job-&gt;workload()));</span></em>\r\n<em><span style=\"color: #808080;\"> }</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n\r\n1、启动job\r\n<em><span style=\"color: #808080;\">gearmand -d</span></em>\r\n2、启动worker\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] worker.php</span></em>\r\n3、启动client\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] client.php</span></em>\r\n\r\n输出：\r\n\r\n[1] 10062\r\nHello! All The World\'s A Stage\r\n\r\n&nbsp;\r\n\r\nGearman 分布式任务实现原理上只用到2个字段，function name和data。\r\nfunction name即任务名称，由client传给job server, job server根据function name选择合适的worker节点来执行。\r\ndata通常为执行任务所需的自定义的内容，比如简单的做法可以把需要执行的脚本当成data即可(当然要注 意其中的安全防范)。\r\n如果有多个worker可以处理同一个function name, 则job server会自动分配一个。当用于远程监控场景时，我们可以让每个worker注册成不同的业务名称，以达到方便控制每台worker节点的目的。','gearman初体验','','inherit','open','open','','24-revision-v1','','','2015-07-07 09:08:39','2015-07-07 09:08:39','',24,'http://blog.raymond.com/?p=28',0,'revision','',0),(30,1,'2015-07-08 07:10:15','2015-07-08 07:10:15','Gearman是一个分发任务的程序框架．它提供了你进行并行工作的能力、负载均衡处理的能力，以及在不同程序语言之间沟通的能力。\r\n使用Gearman的应用通常有三部分组成：一个Client、一个Worker、一个 任务服务器。\r\nClient的提出一个 Job 任务 交给 Job Server 任务服务器。Job Server 会去寻找一个 合适的 Worker 来完成这项任务。Worker 执行由 Client 发送过来的 Job，并且将结果通过 Job Server 返回给 Client。\r\nGearman 提供了 Client 和 Worker 的 API，利用这些API 应用 Client 和 Worker 可以同 Gearman Job Server通过 TCP 连接来进行通信。\r\n<p style=\"text-align: justify;\"><a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt.png\"><img class=\"alignnone size-medium wp-image-13\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/05001154_UcCt-300x280.png\" alt=\"05001154_UcCt\" width=\"300\" height=\"280\" /></a></p>\r\n<p style=\"text-align: justify;\"></p>\r\n<p style=\"text-align: justify;\"></p>\r\n<p style=\"text-align: justify;\">gearman 主要的两个应用\r\n1.实现不同语言程序直接的调用\r\n2.负载分担</p>','gearman简介','','inherit','open','open','','12-revision-v1','','','2015-07-08 07:10:15','2015-07-08 07:10:15','',12,'http://blog.raymond.com/?p=30',0,'revision','',0),(31,1,'2015-07-08 09:41:44','2015-07-08 09:41:44','ubuntu安装gearman\r\n\r\n1. 安装依赖包：\r\n\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install gcc autoconf bison flex libtool make libboost-all-dev libcurl4-openssl-dev curl libevent-dev memcached uuid-dev libsqlite3-dev libmysqlclient-dev\r\n\r\n2.下载Gearman版本\r\n\r\nwget https://launchpad.net/gearmand/1.2/1.1.5/+download/gearmand-1.1.5.tar.gz\r\n\r\n3.解压、编译、安装源码包\r\n\r\ntar xvzf gearmand-1.1.5.tar.gz\r\ncd gearmand-1.1.5\r\n./configure\r\nmake &amp;&amp; make install\r\n\r\n4.为大多数最新的共享库创建必须的链接和缓存。其中可能报：\r\nerror: gearman: error while loading shared libraries: libgearman.so.6: cannot open shared object file: No such file or directory\r\n解决办法：sudo ldconfig\r\n\r\n5.在php.ini文件末尾添加\"extension=gearman.so\"\r\nsudo echo \"extension = gearman.so\" &gt; /etc/php5/conf.d/php.ini\r\n如果找不到gearman.so，重新下载扩展库\r\nwget http://pecl.php.net/get/gearman-1.1.2.tgz\r\ntar zxvf gearman-1.1.2.tgz\r\ncd gearman-1.1.2/\r\nphpize\r\nwhereis php-config\r\n./configure --with-php-config=/usr/bin/php-config\r\nmake &amp;&amp; make install\r\n\r\n6.检测扩展是否安装成功\r\nphp --info | grep \"gearman support\"\r\ngearman support =&gt; enabled\r\n显示出:gearman support =&gt; enabled，就表示安装成功了\r\n\r\n7测试\r\n1)生成libgearman.so.8: sudo ldconfig\r\n2)启动gearmand: gearmand -d\r\n\r\n&nbsp;\r\n\r\n如果要安装命令行:\r\nsudo apt-get install gearman-tools','ubuntu12.0.4 安装gearman','','inherit','open','open','','22-revision-v1','','','2015-07-08 09:41:44','2015-07-08 09:41:44','',22,'http://blog.raymond.com/?p=31',0,'revision','',0),(32,1,'2015-07-08 09:43:07','2015-07-08 09:43:07','<strong>client.php</strong>\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\n<em><span style=\"color: #808080;\"> $client= new GearmanClient();</span></em>\n<em><span style=\"color: #808080;\"> $client-&gt;addServer();</span></em>\n<em><span style=\"color: #808080;\"> print $client-&gt;do(\"title\", \"AlL THE World\'s a sTagE\");</span></em>\n<em><span style=\"color: #808080;\"> print \"\\n\";</span></em>\n<em><span style=\"color: #808080;\">?&gt;</span></em>\n<strong>worker.php</strong>\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\n<em><span style=\"color: #808080;\"> $worker= new GearmanWorker();</span></em>\n<em><span style=\"color: #808080;\"> $worker-&gt;addServer();</span></em>\n<em><span style=\"color: #808080;\"> $worker-&gt;addFunction(\"title\", \"title_function\");</span></em>\n<em><span style=\"color: #808080;\"> while ($worker-&gt;work());</span></em>\n\n<em><span style=\"color: #808080;\"> function title_function($job)</span></em>\n<em><span style=\"color: #808080;\"> {</span></em>\n<em><span style=\"color: #808080;\"> return ucwords(\"Hello!  \".strtolower($job-&gt;workload()));</span></em>\n<em><span style=\"color: #808080;\"> }</span></em>\n<em><span style=\"color: #808080;\">?&gt;</span></em>\n\n1、启动job\n<em><span style=\"color: #808080;\">gearmand -d</span></em>\n2、启动worker\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] worker.php</span></em>\n3、启动client\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] client.php</span></em>\n\n输出：\n\n[1] 10062\nHello! All The World\'s A Stage\n\n&nbsp;\n\n启动Worker：gearman -w -f wc -- wc -l &amp;\n运行Client：gearman -f wc &lt; /etc/passwd\n\nGearman 分布式任务实现原理上只用到2个字段，function name和data。\nfunction name即任务名称，由client传给job server, job server根据function name选择合适的worker节点来执行。\ndata通常为执行任务所需的自定义的内容，比如简单的做法可以把需要执行的脚本当成data即可(当然要注 意其中的安全防范)。\n如果有多个worker可以处理同一个function name, 则job server会自动分配一个。当用于远程监控场景时，我们可以让每个worker注册成不同的业务名称，以达到方便控制每台worker节点的目的。','gearman初体验','','inherit','open','open','','24-autosave-v1','','','2015-07-08 09:43:07','2015-07-08 09:43:07','',24,'http://blog.raymond.com/?p=32',0,'revision','',0),(33,1,'2015-07-08 09:44:03','2015-07-08 09:44:03','<strong>client.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $client= new GearmanClient();</span></em>\r\n<em><span style=\"color: #808080;\"> $client-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> print $client-&gt;do(\"title\", \"AlL THE World\'s a sTagE\");</span></em>\r\n<em><span style=\"color: #808080;\"> print \"\\n\";</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n<strong>worker.php</strong>\r\n<em><span style=\"color: #808080;\">&lt;?php</span></em>\r\n<em><span style=\"color: #808080;\"> $worker= new GearmanWorker();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addServer();</span></em>\r\n<em><span style=\"color: #808080;\"> $worker-&gt;addFunction(\"title\", \"title_function\");</span></em>\r\n<em><span style=\"color: #808080;\"> while ($worker-&gt;work());</span></em>\r\n\r\n<em><span style=\"color: #808080;\"> function title_function($job)</span></em>\r\n<em><span style=\"color: #808080;\"> {</span></em>\r\n<em><span style=\"color: #808080;\"> return ucwords(\"Hello!  \".strtolower($job-&gt;workload()));</span></em>\r\n<em><span style=\"color: #808080;\"> }</span></em>\r\n<em><span style=\"color: #808080;\">?&gt;</span></em>\r\n\r\n1、启动job\r\n<em><span style=\"color: #808080;\">gearmand -d</span></em>\r\n2、启动worker\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] worker.php</span></em>\r\n3、启动client\r\n<em><span style=\"color: #808080;\">php [-c /etc/php5/cli/php.ini] client.php</span></em>\r\n\r\n输出：\r\n\r\n[1] 10062\r\nHello! All The World\'s A Stage\r\n\r\n&nbsp;\r\n\r\n<strong>命令行下：</strong>\r\n启动Worker：gearman -w -f wc -- wc -l &amp;\r\n运行Client：gearman -f wc &lt; /etc/passwd\r\n\r\n输出:\r\n\r\n10 (passwd的行数)\r\n\r\n&nbsp;\r\n\r\nGearman 分布式任务实现原理上只用到2个字段，function name和data。\r\nfunction name即任务名称，由client传给job server, job server根据function name选择合适的worker节点来执行。\r\ndata通常为执行任务所需的自定义的内容，比如简单的做法可以把需要执行的脚本当成data即可(当然要注 意其中的安全防范)。\r\n如果有多个worker可以处理同一个function name, 则job server会自动分配一个。当用于远程监控场景时，我们可以让每个worker注册成不同的业务名称，以达到方便控制每台worker节点的目的。','gearman初体验','','inherit','open','open','','24-revision-v1','','','2015-07-08 09:44:03','2015-07-08 09:44:03','',24,'http://blog.raymond.com/?p=33',0,'revision','',0),(34,1,'2015-07-09 07:58:08','2015-07-09 07:58:08','直接安装\r\n<span style=\"color: #0000ff;\"><em>sudo apt-get install git</em></span>\r\n\r\n编译安装\r\n<span style=\"color: #0000ff;\"><em>sudo apt-get install libcurl4-openssl-dev libexpat1-dev </em></span>\r\n<span style=\"color: #0000ff;\"><em>make prefix=/usr/local all </em></span>\r\n<span style=\"color: #0000ff;\"><em>sudo make prefix=/usr/local install</em></span>\r\n\r\n图形化界面\r\n<em><span style=\"color: #0000ff;\">GitX (L) (OSX, open source)</span></em>\r\n<em><span style=\"color: #0000ff;\">Tower (OSX)</span></em>\r\n<em><span style=\"color: #0000ff;\">Source Tree (OSX, free)</span></em>\r\n<em><span style=\"color: #0000ff;\">GitHub for Mac (OSX, free)</span></em>\r\n<em><span style=\"color: #0000ff;\">GitBox (OSX)</span></em>\r\n安装完了之后，克隆一个版本库，clone完成后默认checkout最新版本\r\n<em><span style=\"color: #808080;\">git clone https://github.com/Raymond-C/raymond.git</span></em>\r\n\r\n<em><span style=\"color: #808080;\">git tag</span></em> 可以查看当前所有版本\r\ncheckout任何版本的代码：\r\n<em><span style=\"color: #808080;\">git checkout v.1.7.8.2</span></em>\r\n\r\n创建新仓库\r\n<span style=\"color: #808080;\"><em>git init</em></span>\r\n\r\n新增文件\r\n<span style=\"color: #808080;\"><em>git add addnew.txt</em> </span>\r\n提交改动\r\n<span style=\"color: #808080;\"><em>git commit -m \'add new file\'</em></span>\r\n\r\n这时候提交的改动已经到了 head，但是没有到远端仓库\r\n\r\n把改动提交到远端仓库 ray 里面\r\n<span style=\"color: #808080;\"><em>git push 远程主机名 本地版本:远程版本</em></span>\r\n在没有克隆仓库时，将本地仓库连接到远程服务器，并将改动推送到所添加的服务器上\r\n<span style=\"color: #808080;\"><em>git remote add origin &lt;server&gt;</em></span>\r\n\r\n检出一个分支\r\n<span style=\"color: #808080;\"><em>git checkout -b ray-local</em></span>\r\n切换到主分支\r\n<span style=\"color: #808080;\"><em>git checkout master</em></span>\r\n删除某个分支\r\n<span style=\"color: #808080;\"><em>git branch -d raymond-branch</em></span>\r\n更新版本至最新改动\r\n<span style=\"color: #808080;\"><em>git pull</em></span>\r\n把某一个分支合并到当前分支\r\n<span style=\"color: #808080;\"><em>git merge 分支版本</em></span>\r\n\r\n查看两个版本之间的差别\r\n<span style=\"color: #808080;\"><em>git diff &lt;source_branch&gt; &lt;target_branch&gt;</em></span>\r\n\r\n为某次提交标记版本\r\n<span style=\"color: #808080;\"><em>git tag 1.0.0 6353cc1a5f（提交ID前10位）</em></span>\r\n\r\n查看提交历史\r\n<span style=\"color: #808080;\"><em>git log</em></span>\r\n\r\n如果你发现当前本地改动错了，想用远程文件替换\r\n<span style=\"color: #808080;\"><em>git checkout -- &lt;filename&gt;</em></span>\r\n更严重的，如果发现所有的改动都是错的，丢弃所有本地的改动\r\n<span style=\"color: #808080;\"><em>git fetch origin</em></span>\r\n用远程本版重置当前分支\r\n<span style=\"color: #808080;\"><em>git reset --hard origin/master</em></span>\r\n一些优化设置\r\n内建的图形化 git：\r\n<span style=\"color: #0000ff;\"><em>gitk</em></span>\r\n彩色的 git 输出：\r\n<span style=\"color: #0000ff;\"><em>git config color.ui true</em></span>\r\n显示历史记录时，只显示一行注释信息：\r\n<span style=\"color: #0000ff;\"><em>git config format.pretty oneline</em></span>','ubuntu上使用git','','publish','open','open','','ubuntu%e4%b8%8a%e4%bd%bf%e7%94%a8git','','','2015-07-09 07:58:08','2015-07-09 07:58:08','',0,'http://blog.raymond.com/?p=34',0,'post','',0),(35,1,'2015-07-09 07:58:08','2015-07-09 07:58:08','直接安装\r\n<span style=\"color: #0000ff;\"><em>sudo apt-get install git</em></span>\r\n\r\n编译安装\r\n<span style=\"color: #0000ff;\"><em>sudo apt-get install libcurl4-openssl-dev libexpat1-dev </em></span>\r\n<span style=\"color: #0000ff;\"><em>make prefix=/usr/local all </em></span>\r\n<span style=\"color: #0000ff;\"><em>sudo make prefix=/usr/local install</em></span>\r\n\r\n图形化界面\r\n<em><span style=\"color: #0000ff;\">GitX (L) (OSX, open source)</span></em>\r\n<em><span style=\"color: #0000ff;\">Tower (OSX)</span></em>\r\n<em><span style=\"color: #0000ff;\">Source Tree (OSX, free)</span></em>\r\n<em><span style=\"color: #0000ff;\">GitHub for Mac (OSX, free)</span></em>\r\n<em><span style=\"color: #0000ff;\">GitBox (OSX)</span></em>\r\n安装完了之后，克隆一个版本库，clone完成后默认checkout最新版本\r\n<em><span style=\"color: #808080;\">git clone https://github.com/Raymond-C/raymond.git</span></em>\r\n\r\n<em><span style=\"color: #808080;\">git tag</span></em> 可以查看当前所有版本\r\ncheckout任何版本的代码：\r\n<em><span style=\"color: #808080;\">git checkout v.1.7.8.2</span></em>\r\n\r\n创建新仓库\r\n<span style=\"color: #808080;\"><em>git init</em></span>\r\n\r\n新增文件\r\n<span style=\"color: #808080;\"><em>git add addnew.txt</em> </span>\r\n提交改动\r\n<span style=\"color: #808080;\"><em>git commit -m \'add new file\'</em></span>\r\n\r\n这时候提交的改动已经到了 head，但是没有到远端仓库\r\n\r\n把改动提交到远端仓库 ray 里面\r\n<span style=\"color: #808080;\"><em>git push 远程主机名 本地版本:远程版本</em></span>\r\n在没有克隆仓库时，将本地仓库连接到远程服务器，并将改动推送到所添加的服务器上\r\n<span style=\"color: #808080;\"><em>git remote add origin &lt;server&gt;</em></span>\r\n\r\n检出一个分支\r\n<span style=\"color: #808080;\"><em>git checkout -b ray-local</em></span>\r\n切换到主分支\r\n<span style=\"color: #808080;\"><em>git checkout master</em></span>\r\n删除某个分支\r\n<span style=\"color: #808080;\"><em>git branch -d raymond-branch</em></span>\r\n更新版本至最新改动\r\n<span style=\"color: #808080;\"><em>git pull</em></span>\r\n把某一个分支合并到当前分支\r\n<span style=\"color: #808080;\"><em>git merge 分支版本</em></span>\r\n\r\n查看两个版本之间的差别\r\n<span style=\"color: #808080;\"><em>git diff &lt;source_branch&gt; &lt;target_branch&gt;</em></span>\r\n\r\n为某次提交标记版本\r\n<span style=\"color: #808080;\"><em>git tag 1.0.0 6353cc1a5f（提交ID前10位）</em></span>\r\n\r\n查看提交历史\r\n<span style=\"color: #808080;\"><em>git log</em></span>\r\n\r\n如果你发现当前本地改动错了，想用远程文件替换\r\n<span style=\"color: #808080;\"><em>git checkout -- &lt;filename&gt;</em></span>\r\n更严重的，如果发现所有的改动都是错的，丢弃所有本地的改动\r\n<span style=\"color: #808080;\"><em>git fetch origin</em></span>\r\n用远程本版重置当前分支\r\n<span style=\"color: #808080;\"><em>git reset --hard origin/master</em></span>\r\n一些优化设置\r\n内建的图形化 git：\r\n<span style=\"color: #0000ff;\"><em>gitk</em></span>\r\n彩色的 git 输出：\r\n<span style=\"color: #0000ff;\"><em>git config color.ui true</em></span>\r\n显示历史记录时，只显示一行注释信息：\r\n<span style=\"color: #0000ff;\"><em>git config format.pretty oneline</em></span>','ubuntu上使用git','','inherit','open','open','','34-revision-v1','','','2015-07-09 07:58:08','2015-07-09 07:58:08','',34,'http://blog.raymond.com/?p=35',0,'revision','',0),(36,1,'2015-07-09 17:22:05','2015-07-09 17:22:05','&nbsp;\r\n\r\n<strong>URL 地址</strong>：<span style=\"color: #0000ff;\"><strong>https://api.mch.weixin.qq.com/pay/unifiedorder</strong></span>\r\n\r\n<a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/wx1.png\"><img class=\"alignnone size-full wp-image-38\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/wx1.png\" alt=\"wx1\" width=\"595\" height=\"247\" /></a> <a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/我先.png\"><img class=\"alignnone size-full wp-image-39\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/我先.png\" alt=\"我先\" width=\"601\" height=\"613\" /></a>\r\n\r\n<strong>微信支付接口的调用方式主要分几种：</strong>\r\n<ol>\r\n	<li>通过JSapi，在微信客户端中点击触发支付 返回预支付订单号</li>\r\n	<li>native支付模式————用微信扫的静态链接二维码 支付返回二维码 code_url</li>\r\n	<li>native支付模式————用微信扫的动态链接二维码 支付返回二维码 code_url</li>\r\n</ol>\r\n<strong>接口调用规则：</strong>\r\n<ul>\r\n	<li>认证方式：HTTPS 认证，退款和冲正接口调用需要商户证书(证书在审核邮件附件中)</li>\r\n	<li>请求采用 POST 方式</li>\r\n	<li>提交和返回结果采用 XML 格式</li>\r\n	<li>字符集默认使用 UTF-8，请勿使用其它字符集</li>\r\n	<li>商户不微信之间的交互(特别是 Native 回调和支付通知回调)，都需要验证签名</li>\r\n	<li>处理返回时先判断协议返回错误码，再判断业务返回错误码，最后判断交易状态</li>\r\n</ul>\r\n&nbsp;\r\n\r\n<strong>现在主要讲第一种方式  ————  JSAPI触发支付</strong>\r\n在整个流程中，每一步都得先获得微信端的安全响应，才能进行下一步\r\n登陆授权，得到一个openid 这样商家才能获取用户的信息     <strong><span style=\"color: #ff0000;\">——&gt;</span></strong>\r\n下订单后，需要获得带支付签名的订单数据   <strong>  <span style=\"color: #ff0000;\">——&gt;</span></strong>\r\n统一提交b中的订单，会获得一个prepayid     <span style=\"color: #ff0000;\"><strong>——&gt;</strong></span>\r\n获得prepayid后才能发送支付请求，在完成支付授权认证后，完成支付，获得支付结果\r\n\r\n<a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/wxpay.png\"><img class=\"alignnone size-full wp-image-37\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/wxpay.png\" alt=\"wxpay\" width=\"841\" height=\"539\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<span style=\"color: #808080;\">//=========步骤1：网页授权获取用户openid============//</span>\r\n<pre>$jsApi = new JsApi_pub();\r\n<span style=\"color: #008000;\">// JSAPI支付——H5网页端调起支付接口</span>\r\n<span style=\"color: #008000;\">//在微信的帮助文档中，有类JsApi_pub的详细定义</span>\r\n</pre>\r\n生成可以获得code的url\r\n<pre>\r\n<span style=\"color: #008000;\"> /**</span>\r\n<span style=\"color: #008000;\"> *$redirectUrl:获取openid的跳转地址</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createOauthUrlForCode($redirectUrl) {\r\n $urlObj[\"appid\"] = WxPayConf_pub::APPID;\r\n $urlObj[\"redirect_uri\"] = \"$redirectUrl\";\r\n $urlObj[\"response_type\"] = \"code\";\r\n $urlObj[\"scope\"] = \"snsapi_base\";\r\n $urlObj[\"state\"] = \"STATE\".\"#wechat_redirect\";\r\n $bizString = $this-&gt;formatBizQueryParaMap($urlObj, false);\r\n return \"https://open.weixin.qq.com/connect/oauth2/authorize?\".$bizString;\r\n }</pre>\r\n//-----在$redirectUrl页面中-----//\r\n<pre>$code = $_GET[\'code\'];\r\n $jsApi-&gt;setCode($code);\r\n $openid = $jsApi-&gt;getOpenId();</pre>\r\n<pre>function getOpenid() {\r\n $url = $this-&gt;createOauthUrlForOpenid(); <span style=\"color: #008000;\">//生成可以获得openid的url</span>\r\n $ch = curl_init(); //初始化curl\r\n curl_setopt($ch, CURLOP_TIMEOUT, $this-&gt;curl_timeout); <span style=\"color: #008000;\">//设置超时</span>\r\n curl_setopt($ch, CURLOPT_URL, $url);\r\n curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\r\n curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);\r\n curl_setopt($ch, CURLOPT_HEADER, FALSE);\r\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\r\n $res = curl_exec($ch);<span style=\"color: #008000;\"> //运行curl，结果以jason形式返回</span>\r\n curl_close($ch);\r\n<span style=\"color: #008000;\"> //取出openid</span>\r\n $data = json_decode($res, true);\r\n $this-&gt;openid = $data[\'openid\'];\r\n return $this-&gt;openid;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：生成可以获得openid的url</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createOauthUrlForOpenid() {\r\n $urlObj[\"appid\"] = WxPayConf_pub::APPID;\r\n $urlObj[\"secret\"] = WxPayConf_pub::APPSECRET;\r\n $urlObj[\"code\"] = $this-&gt;code;\r\n $urlObj[\"grant_type\"] = \"authorization_code\";\r\n $bizString = $this-&gt;formatBizQueryParaMap($urlObj, false);\r\n return \"https://api.weixin.qq.com/sns/oauth2/access_token?\".$bizString;\r\n }</pre>\r\n<span style=\"color: #808080;\">//=========步骤2：使用统一支付接口，获取prepay_id============//</span>\r\n<pre><strong>$unifiedOrder = new UnifiedOrder_pub();</strong>\r\n<span style=\"color: #008000;\"> /*</span>\r\n<span style=\"color: #008000;\"> 使用统一支付接口类</span>\r\n<span style=\"color: #008000;\"> 在微信的帮助文档中定义：class UnifiedOrder_pub extends Wxpay_client_pub</span>\r\n<span style=\"color: #008000;\"> */</span></pre>\r\n<pre>\r\n $unifiedOrder-&gt;setParameter(\"openid\", \"<span style=\"color: #0000ff;\">$openid</span>\");\r\n $unifiedOrder-&gt;setParameter(\"body\", \"<span style=\"color: #008000;\">商品描述</span>\");\r\n $unifiedOrder-&gt;setParameter(\"out_trade_no\", \"<span style=\"color: #008000;\">商户订单号</span>\");\r\n $unifiedOrder-&gt;setParameter(\"total_fee\", \"<span style=\"color: #008000;\">总金额</span>\");\r\n $unifiedOrder-&gt;setParameter(\"notify_url\", <span style=\"color: #008000;\">WxPayConf_pub::NOTIFY_URL</span>); <span style=\"color: #008000;\">//获取成功后需要通知的地址，商户根据实际开发过程设定</span>\r\n $unifiedOrder-&gt;setParameter(\"trade_type\", \"<span style=\"color: #008000;\">JSAPI</span>\"); <span style=\"color: #008000;\">//交易类型</span></pre>\r\n<pre><strong>$prepay_id = $unifiedOrder-&gt;getPrepayId();</strong></pre>\r\n<pre>\r\n<span style=\"color: #008000;\"> /**</span>\r\n<span style=\"color: #008000;\"> * 获取prepay_id</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function getPrepayId() {\r\n $this-&gt;postXml();\r\n $this-&gt;result = $this-&gt;xmlToArray($this-&gt;response);\r\n $prepay_id = $this-&gt;result[\"prepay_id\"];\r\n return $prepay_id;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：post请求xml</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function postXml() {\r\n $xml = $this-&gt;createXml();\r\n $this-&gt;response = $this-&gt;postXmlCurl($xml, $this-&gt;url, $this-&gt;curl_timeout);\r\n return $this-&gt;response;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：设置标配的请求参数，生成签名，生成接口参数xml</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createXml() {\r\n $this-&gt;parameters[\"appid\"] = WxPayConf_pub::APPID; <span style=\"color: #008000;\">//公众账号ID</span>\r\n $this-&gt;parameters[\"mch_id\"] = WxPayConf_pub::MCHID; <span style=\"color: #008000;\">//商户号</span>\r\n $this-&gt;parameters[\"nonce_str\"] = $this-&gt;createNoncestr(); <span style=\"color: #008000;\">//随机字符串</span>\r\n $this-&gt;parameters[\"sign\"] = $this-&gt;getSign($this-&gt;parameters); <span style=\"color: #008000;\">//签名</span>\r\n return $this-&gt;arrayToXml($this-&gt;parameters);\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：将xml转为array</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n public function xmlToArray($xml) {\r\n<span style=\"color: #008000;\"> //将XML转为array</span>\r\n $array_data = json_decode(json_encode(simplexml_load_string($xml, \'SimpleXMLElement\', LIBXML_NOCDATA)), true);\r\n return $array_data;\r\n }</pre>\r\n//=========步骤3：设置所有参数，完成后就可以使用jsapi调起支付============\r\n<pre>$jsApi-&gt;setPrepayId($prepay_id);\r\n$jsApiParameters = $jsApi-&gt;getParameters();</pre>\r\n上面的步骤一般是在页面加载的时候完成的，完成后会有一个 $jsApiParameters ，包含了完成支付所必要的所有参数\r\n在页面js中加入微信私有接口，则可以实现jsapi调用微信接口\r\n<pre>\r\n<span style=\"color: #008000;\">//调用微信JS api 支付</span>\r\nfunction jsApiCall() {\r\nWeixinJSBridge.invoke(\r\n\'getBrandWCPayRequest\',\r\n<span style=\"color: #0000ff;\">&lt; ? php echo $jsApiParameters; ? &gt;</span> ,\r\nfunction (res) {\r\nWeixinJSBridge.log(res.err_msg);\r\n});\r\n}</pre>','微信支付接口的调用','','publish','open','open','','%e5%be%ae%e4%bf%a1%e6%94%af%e4%bb%98%e6%8e%a5%e5%8f%a3%e7%9a%84%e8%b0%83%e7%94%a8','','','2015-07-09 17:22:05','2015-07-09 17:22:05','',0,'http://blog.raymond.com/?p=36',0,'post','',0),(37,1,'2015-07-09 16:31:42','2015-07-09 16:31:42','','wxpay','','inherit','open','open','','wxpay','','','2015-07-09 16:31:42','2015-07-09 16:31:42','',36,'http://blog.raymond.com/wp-content/uploads/2015/07/wxpay.png',0,'attachment','image/png',0),(38,1,'2015-07-09 16:39:34','2015-07-09 16:39:34','','wx1','','inherit','open','open','','wx1','','','2015-07-09 16:39:34','2015-07-09 16:39:34','',36,'http://blog.raymond.com/wp-content/uploads/2015/07/wx1.png',0,'attachment','image/png',0),(39,1,'2015-07-09 16:40:00','2015-07-09 16:40:00','','我先','','inherit','open','open','','%e6%88%91%e5%85%88','','','2015-07-09 16:40:00','2015-07-09 16:40:00','',36,'http://blog.raymond.com/wp-content/uploads/2015/07/我先.png',0,'attachment','image/png',0),(40,1,'2015-07-09 17:22:05','2015-07-09 17:22:05','&nbsp;\r\n\r\n<strong>URL 地址</strong>：<span style=\"color: #0000ff;\"><strong>https://api.mch.weixin.qq.com/pay/unifiedorder</strong></span>\r\n\r\n<a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/wx1.png\"><img class=\"alignnone size-full wp-image-38\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/wx1.png\" alt=\"wx1\" width=\"595\" height=\"247\" /></a> <a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/我先.png\"><img class=\"alignnone size-full wp-image-39\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/我先.png\" alt=\"我先\" width=\"601\" height=\"613\" /></a>\r\n\r\n<strong>微信支付接口的调用方式主要分几种：</strong>\r\n<ol>\r\n	<li>通过JSapi，在微信客户端中点击触发支付 返回预支付订单号</li>\r\n	<li>native支付模式————用微信扫的静态链接二维码 支付返回二维码 code_url</li>\r\n	<li>native支付模式————用微信扫的动态链接二维码 支付返回二维码 code_url</li>\r\n</ol>\r\n<strong>接口调用规则：</strong>\r\n<ul>\r\n	<li>认证方式：HTTPS 认证，退款和冲正接口调用需要商户证书(证书在审核邮件附件中)</li>\r\n	<li>请求采用 POST 方式</li>\r\n	<li>提交和返回结果采用 XML 格式</li>\r\n	<li>字符集默认使用 UTF-8，请勿使用其它字符集</li>\r\n	<li>商户不微信之间的交互(特别是 Native 回调和支付通知回调)，都需要验证签名</li>\r\n	<li>处理返回时先判断协议返回错误码，再判断业务返回错误码，最后判断交易状态</li>\r\n</ul>\r\n&nbsp;\r\n\r\n<strong>现在主要讲第一种方式  ————  JSAPI触发支付</strong>\r\n在整个流程中，每一步都得先获得微信端的安全响应，才能进行下一步\r\n登陆授权，得到一个openid 这样商家才能获取用户的信息     <strong><span style=\"color: #ff0000;\">——&gt;</span></strong>\r\n下订单后，需要获得带支付签名的订单数据   <strong>  <span style=\"color: #ff0000;\">——&gt;</span></strong>\r\n统一提交b中的订单，会获得一个prepayid     <span style=\"color: #ff0000;\"><strong>——&gt;</strong></span>\r\n获得prepayid后才能发送支付请求，在完成支付授权认证后，完成支付，获得支付结果\r\n\r\n<a href=\"http://blog.raymond.com/wp-content/uploads/2015/07/wxpay.png\"><img class=\"alignnone size-full wp-image-37\" src=\"http://blog.raymond.com/wp-content/uploads/2015/07/wxpay.png\" alt=\"wxpay\" width=\"841\" height=\"539\" /></a>\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<span style=\"color: #808080;\">//=========步骤1：网页授权获取用户openid============//</span>\r\n<pre>$jsApi = new JsApi_pub();\r\n<span style=\"color: #008000;\">// JSAPI支付——H5网页端调起支付接口</span>\r\n<span style=\"color: #008000;\">//在微信的帮助文档中，有类JsApi_pub的详细定义</span>\r\n</pre>\r\n生成可以获得code的url\r\n<pre>\r\n<span style=\"color: #008000;\"> /**</span>\r\n<span style=\"color: #008000;\"> *$redirectUrl:获取openid的跳转地址</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createOauthUrlForCode($redirectUrl) {\r\n $urlObj[\"appid\"] = WxPayConf_pub::APPID;\r\n $urlObj[\"redirect_uri\"] = \"$redirectUrl\";\r\n $urlObj[\"response_type\"] = \"code\";\r\n $urlObj[\"scope\"] = \"snsapi_base\";\r\n $urlObj[\"state\"] = \"STATE\".\"#wechat_redirect\";\r\n $bizString = $this-&gt;formatBizQueryParaMap($urlObj, false);\r\n return \"https://open.weixin.qq.com/connect/oauth2/authorize?\".$bizString;\r\n }</pre>\r\n//-----在$redirectUrl页面中-----//\r\n<pre>$code = $_GET[\'code\'];\r\n $jsApi-&gt;setCode($code);\r\n $openid = $jsApi-&gt;getOpenId();</pre>\r\n<pre>function getOpenid() {\r\n $url = $this-&gt;createOauthUrlForOpenid(); <span style=\"color: #008000;\">//生成可以获得openid的url</span>\r\n $ch = curl_init(); //初始化curl\r\n curl_setopt($ch, CURLOP_TIMEOUT, $this-&gt;curl_timeout); <span style=\"color: #008000;\">//设置超时</span>\r\n curl_setopt($ch, CURLOPT_URL, $url);\r\n curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\r\n curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);\r\n curl_setopt($ch, CURLOPT_HEADER, FALSE);\r\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\r\n $res = curl_exec($ch);<span style=\"color: #008000;\"> //运行curl，结果以jason形式返回</span>\r\n curl_close($ch);\r\n<span style=\"color: #008000;\"> //取出openid</span>\r\n $data = json_decode($res, true);\r\n $this-&gt;openid = $data[\'openid\'];\r\n return $this-&gt;openid;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：生成可以获得openid的url</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createOauthUrlForOpenid() {\r\n $urlObj[\"appid\"] = WxPayConf_pub::APPID;\r\n $urlObj[\"secret\"] = WxPayConf_pub::APPSECRET;\r\n $urlObj[\"code\"] = $this-&gt;code;\r\n $urlObj[\"grant_type\"] = \"authorization_code\";\r\n $bizString = $this-&gt;formatBizQueryParaMap($urlObj, false);\r\n return \"https://api.weixin.qq.com/sns/oauth2/access_token?\".$bizString;\r\n }</pre>\r\n<span style=\"color: #808080;\">//=========步骤2：使用统一支付接口，获取prepay_id============//</span>\r\n<pre><strong>$unifiedOrder = new UnifiedOrder_pub();</strong>\r\n<span style=\"color: #008000;\"> /*</span>\r\n<span style=\"color: #008000;\"> 使用统一支付接口类</span>\r\n<span style=\"color: #008000;\"> 在微信的帮助文档中定义：class UnifiedOrder_pub extends Wxpay_client_pub</span>\r\n<span style=\"color: #008000;\"> */</span></pre>\r\n<pre>\r\n $unifiedOrder-&gt;setParameter(\"openid\", \"<span style=\"color: #0000ff;\">$openid</span>\");\r\n $unifiedOrder-&gt;setParameter(\"body\", \"<span style=\"color: #008000;\">商品描述</span>\");\r\n $unifiedOrder-&gt;setParameter(\"out_trade_no\", \"<span style=\"color: #008000;\">商户订单号</span>\");\r\n $unifiedOrder-&gt;setParameter(\"total_fee\", \"<span style=\"color: #008000;\">总金额</span>\");\r\n $unifiedOrder-&gt;setParameter(\"notify_url\", <span style=\"color: #008000;\">WxPayConf_pub::NOTIFY_URL</span>); <span style=\"color: #008000;\">//获取成功后需要通知的地址，商户根据实际开发过程设定</span>\r\n $unifiedOrder-&gt;setParameter(\"trade_type\", \"<span style=\"color: #008000;\">JSAPI</span>\"); <span style=\"color: #008000;\">//交易类型</span></pre>\r\n<pre><strong>$prepay_id = $unifiedOrder-&gt;getPrepayId();</strong></pre>\r\n<pre>\r\n<span style=\"color: #008000;\"> /**</span>\r\n<span style=\"color: #008000;\"> * 获取prepay_id</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function getPrepayId() {\r\n $this-&gt;postXml();\r\n $this-&gt;result = $this-&gt;xmlToArray($this-&gt;response);\r\n $prepay_id = $this-&gt;result[\"prepay_id\"];\r\n return $prepay_id;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：post请求xml</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function postXml() {\r\n $xml = $this-&gt;createXml();\r\n $this-&gt;response = $this-&gt;postXmlCurl($xml, $this-&gt;url, $this-&gt;curl_timeout);\r\n return $this-&gt;response;\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：设置标配的请求参数，生成签名，生成接口参数xml</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n function createXml() {\r\n $this-&gt;parameters[\"appid\"] = WxPayConf_pub::APPID; <span style=\"color: #008000;\">//公众账号ID</span>\r\n $this-&gt;parameters[\"mch_id\"] = WxPayConf_pub::MCHID; <span style=\"color: #008000;\">//商户号</span>\r\n $this-&gt;parameters[\"nonce_str\"] = $this-&gt;createNoncestr(); <span style=\"color: #008000;\">//随机字符串</span>\r\n $this-&gt;parameters[\"sign\"] = $this-&gt;getSign($this-&gt;parameters); <span style=\"color: #008000;\">//签名</span>\r\n return $this-&gt;arrayToXml($this-&gt;parameters);\r\n }</pre>\r\n<pre><span style=\"color: #008000;\">/**</span>\r\n<span style=\"color: #008000;\"> * 作用：将xml转为array</span>\r\n<span style=\"color: #008000;\"> */</span>\r\n public function xmlToArray($xml) {\r\n<span style=\"color: #008000;\"> //将XML转为array</span>\r\n $array_data = json_decode(json_encode(simplexml_load_string($xml, \'SimpleXMLElement\', LIBXML_NOCDATA)), true);\r\n return $array_data;\r\n }</pre>\r\n//=========步骤3：设置所有参数，完成后就可以使用jsapi调起支付============\r\n<pre>$jsApi-&gt;setPrepayId($prepay_id);\r\n$jsApiParameters = $jsApi-&gt;getParameters();</pre>\r\n上面的步骤一般是在页面加载的时候完成的，完成后会有一个 $jsApiParameters ，包含了完成支付所必要的所有参数\r\n在页面js中加入微信私有接口，则可以实现jsapi调用微信接口\r\n<pre>\r\n<span style=\"color: #008000;\">//调用微信JS api 支付</span>\r\nfunction jsApiCall() {\r\nWeixinJSBridge.invoke(\r\n\'getBrandWCPayRequest\',\r\n<span style=\"color: #0000ff;\">&lt; ? php echo $jsApiParameters; ? &gt;</span> ,\r\nfunction (res) {\r\nWeixinJSBridge.log(res.err_msg);\r\n});\r\n}</pre>','微信支付接口的调用','','inherit','open','open','','36-revision-v1','','','2015-07-09 17:22:05','2015-07-09 17:22:05','',36,'http://blog.raymond.com/?p=40',0,'revision','',0),(41,1,'2015-07-20 03:21:00','0000-00-00 00:00:00','','postgresql表结构','','draft','open','open','','','','','2015-07-20 03:21:00','2015-07-20 03:21:00','',0,'http://blog.raymond.com/?p=41',0,'post','',0),(42,1,'2015-07-21 14:35:58','2015-07-21 14:35:58','引用必要的css和js库\r\n\r\n&lt;!-- DataTables CSS --&gt;\r\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.datatables.net/1.10.7/css/jquery.dataTables.css\"&gt;\r\n&lt;!-- jQuery --&gt;\r\n&lt;script type=\"text/javascript\" charset=\"utf8\" src=\"//code.jquery.com/jquery-1.10.2.min.js\"&gt;&lt;/script&gt;\r\n&lt;!-- DataTables --&gt;\r\n&lt;script type=\"text/javascript\" charset=\"utf8\" src=\"//cdn.datatables.net/1.10.7/js/jquery.dataTables.js\"&gt;&lt;/script&gt;\r\n\r\n参数详解：\r\n\r\n&nbsp;\r\n\r\n\"bAutoWidth\":true,//是否自动计算列宽，计算列宽会花费一些时间，如果列宽通过aoColumns传递，可以关闭该属性作为优化\r\n\"bFilter\":true,//是否对数据进行过滤，数据过滤是十分灵活的，允许终端用户输入多个用空格分隔开的关键字\r\n\"bInfo\":true,//是否显示表格信息，是指当前页面上显示的数据的信息，如果有过滤操作执行，也会显示过滤操作的信息\r\n\"bJQueryUI\":false,//是否开启jQuery UI ThemeRoller支持，需要一些ThemeRoller使用的标记，这些标记有些与DataTable传统使用的有轻微的差异，有些是额外附加的\r\n\"bLengthChange\":false,//是否允许终端用户从一个选择列表中选择分页的页数，页数为10，25，50和100，需要分页组件bPaginate的支持\r\n\"bPaginage\":true,//是否开启分页功能,即使设置为false,仍然会有一个默认的&lt;前进,后退&gt;分页组件\r\n\"bProcessing\":false,//当表格在处理的时候（比如排序操作）是否显示“处理中...\r\n\"bScrollInfinite\":false,//是否开启不限制长度的滚动条（和sScrollY属性结合使用），不限制长度的滚动条意味着当用户拖动滚动条的时候DataTable会不断加载数据\r\n\"bServerSide\":false,//配置DataTable使用服务器端处理，注意，sAjaxSource参数必须指定，以便给DataTable一个为每一行获取数据的数据源\r\n\"bSort\":true,//是否开启列排序，对单独列的设置在每一列的bSortable选项中指定\r\n\"bStateSave\":false,//是否开启状态保存，当选项开启的时候会使用一个cookie保存表格展示的信息的状态，例如分页信息，展示长度，过滤和排序等\r\n\"sScrollX\":\"100%\",//是否开启水平滚动，当一个表格过于宽以至于无法放入一个布局的时候，或者表格有太多列的时候，你可以开启该选项\r\n\"sScrollY\":\"100%\",//是否开启垂直滚动，垂直滚动会驱使DataTable设置为给定的长度，任何溢出到当前视图之外的数据可以通过垂直滚动进行察看\r\n\"searching\":false,//是否显示搜索框\r\n\r\n//自定义语言设置\r\n\"oLanguage\":{\r\n\"oAria\":{\r\n\"sSortAscending\": \" - click/return to sort ascending\",//当一列被按照升序排序的时候添加到表头的ARIA标签，注意列头是这个字符串的前缀（？）\r\n\"sSortDescending\": \" - click/return to sort descending\"//当一列被按照升序降序的时候添加到表头的ARIA标签，注意列头是这个字符串的前缀（？）\r\n}，\r\n\"oPaginate\": {\r\n\"sFirst\": \"First page\",//当使用全数字类型的分页组件的时候，到第一页按钮上的文字\r\n\"sLast\": \"Last page\",//当使用全数字类型的分页组件的时候，到最后一页按钮上的文字\r\n\"sNext\": \"Next page\",//当使用全数字类型的分页组件的时候，到下一页按钮上的文字\r\n\"sNext\": \"Next page\",//当使用全数字类型的分页组件的时候，到下一页按钮上的文字\r\n\"sPrevious\": \"Previous page\"//当使用全数字类型的分页组件的时候，到前一页按钮上的文字\r\n}，\r\n\"sEmptyTable\": \"No data available in table\",//当表格中没有数据（无视因为过滤导致的没有数据）时，该字符串年优先与sZeroRecords显示\r\n\"sInfo\": \"Got a total of _TOTAL_ entries to show (_START_ to _END_)\",//该属性给终端用户提供当前页面的展示信息，字符串中的变量会随着表格的更新被动态替换，而且可以被任意移动和删除\r\n\"sInfoEmpty\": \"No entries to show\",//当表格中没有数据时展示的表格信息，通常情况下格式会符合sInfo的格式\r\n\"sInfoFiltered\": \" - filtering from _MAX_ records\",//当用户过滤表格中的信息的时候，该字符串会被附加到信息字符串的后面，从而给出过滤器强度的直观概念\r\n\"sInfoPostFix\": \"All records shown are derived from real information.\",//使用该属性可以很方便的向表格信息字符串中添加额外的信息，被添加的信息在任何时候都会被附加到表格信息组件的后面\r\n\"sInfoThousands\": \"\'\",//DataTable有内建的格式化数字的工具，可以用来格式化表格信息中较大的数字\r\n\"sLengthMenu\": \"Display _MENU_ records\",//描述当分页组件的下拉菜单的选项被改变的时候发生的动作，\'_MENU_\'变量会被替换为默认的10，25，50，100\r\n\"sLoadingRecords\": \"Please wait - loading...\",//当使用Ajax数据源和表格在第一次被加载搜集数据的时候显示的字符串，该信息在一个空行显示\r\n\"sProcessing\": \"DataTables is currently busy\",//当表格处理用户动作（例如排序或者类似行为）的时候显示的字符串\r\n\"sSearch\": \"Apply filter _INPUT_ to table\",//DataTable会使用用户输入的过滤条件替换_INPUT_为HTML文本组件，从而可以支配它（即用户输入的过滤条件）出现在信息字符串中的位置\r\n\"sUrl\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\",//所有语言信息可以被存储在服务器端的文件中，DataTable可以根据该参数指定的URL去寻找\r\n\"sZeroRecords\": \"No records to display\"//当对数据进行过滤操作后，如果没有要显示的数据，会在表格记录中显示该字符串\r\n}\r\n\"bDestroy\": false,//使用传递的新的初始化对象中的属性构造一个新的表格，并替换一个匹配指定的选择器的表格\r\n\r\n\"sDom\": \'&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&amp;lgt;\'/*默认值为lfrtip (when bJQueryUI is false) or &lt;\"H\"lfr&gt;t&lt;\"F\"ip&gt; (when bJQueryUI is true)\r\n该初始化属性用来指定你想把各种控制组件注入到dom节点的位置（比如你想把分页组件放到表格的顶部）\r\nDIV元素（带或者不带自定的class）可以添加目标样式，下列语法被使用\r\n可供使用的选项\r\n\'l\' - 长度改变\r\n\'f\' - 过滤输入\r\n\'t\' - 表格\r\n\'i\' - 信息\r\n\'p\' - 分页\r\n\'r\' - 处理\r\n可供使用的常量\r\n\'H\' - jQueryUI theme \"header\" classes(\'fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\')\r\n\'F\' - jQueryUI theme \"footer\" classes (\'fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix\')\r\n需要的语法\r\n\'&lt;\' 和 \'&gt;\' - div元素\r\n\'&lt;\"class\" and \'&gt;\' - 带有class属性的div元素\r\n\'&lt;\"#id\" and \'&gt;\' - 带有id属性的div元素\r\n例子\r\n\'&lt;\"wrapper\"flipt&gt;\'\r\n\'&lt;lf&lt;t&gt;ip&gt;\'','datatable使用','','publish','open','open','','datatable%e4%bd%bf%e7%94%a8','','','2015-07-21 14:35:58','2015-07-21 14:35:58','',0,'http://blog.raymond.com/?p=42',0,'post','',0),(43,1,'2015-07-21 14:35:58','2015-07-21 14:35:58','引用必要的css和js库\r\n\r\n&lt;!-- DataTables CSS --&gt;\r\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.datatables.net/1.10.7/css/jquery.dataTables.css\"&gt;\r\n&lt;!-- jQuery --&gt;\r\n&lt;script type=\"text/javascript\" charset=\"utf8\" src=\"//code.jquery.com/jquery-1.10.2.min.js\"&gt;&lt;/script&gt;\r\n&lt;!-- DataTables --&gt;\r\n&lt;script type=\"text/javascript\" charset=\"utf8\" src=\"//cdn.datatables.net/1.10.7/js/jquery.dataTables.js\"&gt;&lt;/script&gt;\r\n\r\n参数详解：\r\n\r\n&nbsp;\r\n\r\n\"bAutoWidth\":true,//是否自动计算列宽，计算列宽会花费一些时间，如果列宽通过aoColumns传递，可以关闭该属性作为优化\r\n\"bFilter\":true,//是否对数据进行过滤，数据过滤是十分灵活的，允许终端用户输入多个用空格分隔开的关键字\r\n\"bInfo\":true,//是否显示表格信息，是指当前页面上显示的数据的信息，如果有过滤操作执行，也会显示过滤操作的信息\r\n\"bJQueryUI\":false,//是否开启jQuery UI ThemeRoller支持，需要一些ThemeRoller使用的标记，这些标记有些与DataTable传统使用的有轻微的差异，有些是额外附加的\r\n\"bLengthChange\":false,//是否允许终端用户从一个选择列表中选择分页的页数，页数为10，25，50和100，需要分页组件bPaginate的支持\r\n\"bPaginage\":true,//是否开启分页功能,即使设置为false,仍然会有一个默认的&lt;前进,后退&gt;分页组件\r\n\"bProcessing\":false,//当表格在处理的时候（比如排序操作）是否显示“处理中...\r\n\"bScrollInfinite\":false,//是否开启不限制长度的滚动条（和sScrollY属性结合使用），不限制长度的滚动条意味着当用户拖动滚动条的时候DataTable会不断加载数据\r\n\"bServerSide\":false,//配置DataTable使用服务器端处理，注意，sAjaxSource参数必须指定，以便给DataTable一个为每一行获取数据的数据源\r\n\"bSort\":true,//是否开启列排序，对单独列的设置在每一列的bSortable选项中指定\r\n\"bStateSave\":false,//是否开启状态保存，当选项开启的时候会使用一个cookie保存表格展示的信息的状态，例如分页信息，展示长度，过滤和排序等\r\n\"sScrollX\":\"100%\",//是否开启水平滚动，当一个表格过于宽以至于无法放入一个布局的时候，或者表格有太多列的时候，你可以开启该选项\r\n\"sScrollY\":\"100%\",//是否开启垂直滚动，垂直滚动会驱使DataTable设置为给定的长度，任何溢出到当前视图之外的数据可以通过垂直滚动进行察看\r\n\"searching\":false,//是否显示搜索框\r\n\r\n//自定义语言设置\r\n\"oLanguage\":{\r\n\"oAria\":{\r\n\"sSortAscending\": \" - click/return to sort ascending\",//当一列被按照升序排序的时候添加到表头的ARIA标签，注意列头是这个字符串的前缀（？）\r\n\"sSortDescending\": \" - click/return to sort descending\"//当一列被按照升序降序的时候添加到表头的ARIA标签，注意列头是这个字符串的前缀（？）\r\n}，\r\n\"oPaginate\": {\r\n\"sFirst\": \"First page\",//当使用全数字类型的分页组件的时候，到第一页按钮上的文字\r\n\"sLast\": \"Last page\",//当使用全数字类型的分页组件的时候，到最后一页按钮上的文字\r\n\"sNext\": \"Next page\",//当使用全数字类型的分页组件的时候，到下一页按钮上的文字\r\n\"sNext\": \"Next page\",//当使用全数字类型的分页组件的时候，到下一页按钮上的文字\r\n\"sPrevious\": \"Previous page\"//当使用全数字类型的分页组件的时候，到前一页按钮上的文字\r\n}，\r\n\"sEmptyTable\": \"No data available in table\",//当表格中没有数据（无视因为过滤导致的没有数据）时，该字符串年优先与sZeroRecords显示\r\n\"sInfo\": \"Got a total of _TOTAL_ entries to show (_START_ to _END_)\",//该属性给终端用户提供当前页面的展示信息，字符串中的变量会随着表格的更新被动态替换，而且可以被任意移动和删除\r\n\"sInfoEmpty\": \"No entries to show\",//当表格中没有数据时展示的表格信息，通常情况下格式会符合sInfo的格式\r\n\"sInfoFiltered\": \" - filtering from _MAX_ records\",//当用户过滤表格中的信息的时候，该字符串会被附加到信息字符串的后面，从而给出过滤器强度的直观概念\r\n\"sInfoPostFix\": \"All records shown are derived from real information.\",//使用该属性可以很方便的向表格信息字符串中添加额外的信息，被添加的信息在任何时候都会被附加到表格信息组件的后面\r\n\"sInfoThousands\": \"\'\",//DataTable有内建的格式化数字的工具，可以用来格式化表格信息中较大的数字\r\n\"sLengthMenu\": \"Display _MENU_ records\",//描述当分页组件的下拉菜单的选项被改变的时候发生的动作，\'_MENU_\'变量会被替换为默认的10，25，50，100\r\n\"sLoadingRecords\": \"Please wait - loading...\",//当使用Ajax数据源和表格在第一次被加载搜集数据的时候显示的字符串，该信息在一个空行显示\r\n\"sProcessing\": \"DataTables is currently busy\",//当表格处理用户动作（例如排序或者类似行为）的时候显示的字符串\r\n\"sSearch\": \"Apply filter _INPUT_ to table\",//DataTable会使用用户输入的过滤条件替换_INPUT_为HTML文本组件，从而可以支配它（即用户输入的过滤条件）出现在信息字符串中的位置\r\n\"sUrl\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\",//所有语言信息可以被存储在服务器端的文件中，DataTable可以根据该参数指定的URL去寻找\r\n\"sZeroRecords\": \"No records to display\"//当对数据进行过滤操作后，如果没有要显示的数据，会在表格记录中显示该字符串\r\n}\r\n\"bDestroy\": false,//使用传递的新的初始化对象中的属性构造一个新的表格，并替换一个匹配指定的选择器的表格\r\n\r\n\"sDom\": \'&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&amp;lgt;\'/*默认值为lfrtip (when bJQueryUI is false) or &lt;\"H\"lfr&gt;t&lt;\"F\"ip&gt; (when bJQueryUI is true)\r\n该初始化属性用来指定你想把各种控制组件注入到dom节点的位置（比如你想把分页组件放到表格的顶部）\r\nDIV元素（带或者不带自定的class）可以添加目标样式，下列语法被使用\r\n可供使用的选项\r\n\'l\' - 长度改变\r\n\'f\' - 过滤输入\r\n\'t\' - 表格\r\n\'i\' - 信息\r\n\'p\' - 分页\r\n\'r\' - 处理\r\n可供使用的常量\r\n\'H\' - jQueryUI theme \"header\" classes(\'fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\')\r\n\'F\' - jQueryUI theme \"footer\" classes (\'fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix\')\r\n需要的语法\r\n\'&lt;\' 和 \'&gt;\' - div元素\r\n\'&lt;\"class\" and \'&gt;\' - 带有class属性的div元素\r\n\'&lt;\"#id\" and \'&gt;\' - 带有id属性的div元素\r\n例子\r\n\'&lt;\"wrapper\"flipt&gt;\'\r\n\'&lt;lf&lt;t&gt;ip&gt;\'','datatable使用','','inherit','open','open','','42-revision-v1','','','2015-07-21 14:35:58','2015-07-21 14:35:58','',42,'http://blog.raymond.com/?p=43',0,'revision','',0),(44,1,'2015-07-22 10:18:12','2015-07-22 10:18:12','时间戳转日期　SELECT TIMESTAMP \'epoch\' + 1256905578 * INTERVAL \'1 second\'\r\n\r\n取在月里面的日：select extract(day from timestamp \'2011-06-03\');','postgres时间戳转换','','publish','open','open','','postgres%e6%97%b6%e9%97%b4%e6%88%b3%e8%bd%ac%e6%8d%a2','','','2015-07-23 10:01:59','2015-07-23 10:01:59','',0,'http://blog.raymond.com/?p=44',0,'post','',0),(45,1,'2015-07-22 10:18:12','2015-07-22 10:18:12','时间戳转日期　SELECT TIMESTAMP \'epoch\' + 1256905578 * INTERVAL \'1 second\'','postgres时间戳转换','','inherit','open','open','','44-revision-v1','','','2015-07-22 10:18:12','2015-07-22 10:18:12','',44,'http://blog.raymond.com/?p=45',0,'revision','',0),(46,1,'2015-07-23 07:50:32','2015-07-23 07:50:32','时间戳转日期　SELECT TIMESTAMP \'epoch\' + 1256905578 * INTERVAL \'1 second\'\r\n\r\n取在月里面的日：select extract(day from timestamp \'2011-06-03\');','postgres时间戳转换','','inherit','open','open','','44-revision-v1','','','2015-07-23 07:50:32','2015-07-23 07:50:32','',44,'http://blog.raymond.com/?p=46',0,'revision','',0),(47,1,'2015-07-24 18:27:28','2015-07-24 18:27:28','Mysql 空间数据库\r\n\r\nCREATE TABLE `points` (\r\n`name` varchar(20) NOT NULL DEFAULT \'\',\r\n`location` point NOT NULL,\r\n`description` varchar(200) DEFAULT NULL,\r\nPRIMARY KEY (`name`),\r\nSPATIAL KEY `sp_index` (`location`)--空间索引\r\n) ENGINE=MyISAM DEFAULT CHARSET=gbk;\r\n\r\n空间数据类型的基类是Geometry\r\nINSERT INTO Points (name, location) VALUES ( \'point1\' , GeomFromText( \' POINT(31.5 42.2) \' ) )\r\n\r\nSELECT name, AsText(location) FROM Points;\r\nAsText函数把数据库内部存储的几何对象格式化成一个字符串，将location转换成GIS标准字符串。\r\n\r\nSELECT name, AsText(location) FROM Points WHERE X(location) &lt; 10 and Y(location) &gt; 12;\r\n返回一系列location的X()（经度）小于10并且Y()（经度）大于12的点集合。\r\n\r\nSELECT AsText(Envelope(GeomFromText(\'LineString(1 1,2 2)\')));\r\n把指定的几何对象转变易读的文本：\r\n\r\nSELECT GeometryType(GeomFromText(\'POINT(1 1)\'));\r\n返回指定几何对象的类型：\r\n\r\n查找指定矩形范围内的点：\r\nSET @bbox = \'POLYGON((0 0, 10 0, 10 10, 0 10, 0 0))\';\r\nSELECT name, AsText(location) FROM Points WHERE Intersects( location, GeomFromText(@bbox) );\r\n\r\n查找圆形范围内的点\r\n[1]\r\nSELECT name, AsText(location)\r\nFROM Points\r\nWHERE Intersects( location, GeomFromText(@bbox) )\r\nAND SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) &lt; @radius; To Obtain a result ordered by distance from the center of the selection area:\r\n\r\n[2]\r\nSELECT name, AsText(location), SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) AS distance\r\nFROM Points\r\nWHERE Intersects( location, GeomFromText(@bbox) )\r\nAND SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) &lt; @radius\r\nORDER BY distance;','利用Mysql空间数据库LBS定位','','publish','open','open','','%e5%88%a9%e7%94%a8mysql%e7%a9%ba%e9%97%b4%e6%95%b0%e6%8d%ae%e5%ba%93lbs%e5%ae%9a%e4%bd%8d','','','2015-07-24 18:27:28','2015-07-24 18:27:28','',0,'http://blog.raymond.com/?p=47',0,'post','',0),(48,1,'2015-07-24 18:27:28','2015-07-24 18:27:28','Mysql 空间数据库\r\n\r\nCREATE TABLE `points` (\r\n`name` varchar(20) NOT NULL DEFAULT \'\',\r\n`location` point NOT NULL,\r\n`description` varchar(200) DEFAULT NULL,\r\nPRIMARY KEY (`name`),\r\nSPATIAL KEY `sp_index` (`location`)--空间索引\r\n) ENGINE=MyISAM DEFAULT CHARSET=gbk;\r\n\r\n空间数据类型的基类是Geometry\r\nINSERT INTO Points (name, location) VALUES ( \'point1\' , GeomFromText( \' POINT(31.5 42.2) \' ) )\r\n\r\nSELECT name, AsText(location) FROM Points;\r\nAsText函数把数据库内部存储的几何对象格式化成一个字符串，将location转换成GIS标准字符串。\r\n\r\nSELECT name, AsText(location) FROM Points WHERE X(location) &lt; 10 and Y(location) &gt; 12;\r\n返回一系列location的X()（经度）小于10并且Y()（经度）大于12的点集合。\r\n\r\nSELECT AsText(Envelope(GeomFromText(\'LineString(1 1,2 2)\')));\r\n把指定的几何对象转变易读的文本：\r\n\r\nSELECT GeometryType(GeomFromText(\'POINT(1 1)\'));\r\n返回指定几何对象的类型：\r\n\r\n查找指定矩形范围内的点：\r\nSET @bbox = \'POLYGON((0 0, 10 0, 10 10, 0 10, 0 0))\';\r\nSELECT name, AsText(location) FROM Points WHERE Intersects( location, GeomFromText(@bbox) );\r\n\r\n查找圆形范围内的点\r\n[1]\r\nSELECT name, AsText(location)\r\nFROM Points\r\nWHERE Intersects( location, GeomFromText(@bbox) )\r\nAND SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) &lt; @radius; To Obtain a result ordered by distance from the center of the selection area:\r\n\r\n[2]\r\nSELECT name, AsText(location), SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) AS distance\r\nFROM Points\r\nWHERE Intersects( location, GeomFromText(@bbox) )\r\nAND SQRT(POW( ABS( X(location) - X(@center)), 2) + POW( ABS(Y(location) - Y(@center)), 2 )) &lt; @radius\r\nORDER BY distance;','利用Mysql空间数据库LBS定位','','inherit','open','open','','47-revision-v1','','','2015-07-24 18:27:28','2015-07-24 18:27:28','',47,'http://blog.raymond.com/?p=48',0,'revision','',0),(49,1,'2015-07-24 18:32:11','2015-07-24 18:32:11','抽象为球面两点距离的计算，即已知道球面上两点的经纬度；\r\n点（纬度，经度），A($radLat1,$radLng1)、B($radLat2,$radLng2);\r\n\r\n1、推导\r\n通过余弦定理以及弧度计算方法，最终推导出来的算式A为：\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n目前网上大多使用Google公开的距离计算公司，推导算式B为：\r\n$s = 2*asin(sqrt(pow(sin(($radLat1-$radLat2)/2),2)+cos($radLat1)*cos($radLat2)*pow(sin(($radLng1-$radLng2)/2),2)))*$R;\r\n其中 :\r\n$radLat1、$radLng1，$radLat2，$radLng2 为弧度，$R 为地球半径\r\n\r\n2、通过测试两种算法，结果相同且都正确，但通过PHP代码测试，两点间距离，10W次性能对比，自行推导版本计算时长算式B较优，如下：\r\n\r\n//算式A\r\n0.56368780136108float(431)\r\n0.57460689544678float(431)\r\n0.59051203727722float(431)\r\n\r\n//算式B\r\n0.47404885292053float(431)\r\n0.47808718681335float(431)\r\n0.47946381568909float(431)\r\n\r\n3、所以采用数学方法推导出的公式:\r\n&lt;?php\r\n\r\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\r\npublic static function getDistance($lat1,$lng1,$lat2,$lng2)\r\n{\r\n//地球半径\r\n$R = 6378137;\r\n\r\n//将角度转为狐度\r\n$radLat1 = deg2rad($lat1);\r\n$radLat2 = deg2rad($lat2);\r\n$radLng1 = deg2rad($lng1);\r\n$radLng2 = deg2rad($lng2);\r\n\r\n//结果\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n//精度\r\n$s = round($s* 10000)/10000;\r\n\r\nreturn round($s);\r\n}\r\n\r\n?&gt;\r\n\r\n4、在实际应用中，需要从数据库中遍历取出符合条件，以及排序等操作\r\n将所有数据取出，然后通过PHP循环对比，筛选符合条件结果，显然性能低下；所以我们利用下Mysql存储函数来解决这个问题吧。\r\n4.1、创建Mysql存储函数,并对经纬度字段建立索引\r\n\r\nDELIMITER $$\r\nCREATE DEFINER=`root`@`%` FUNCTION `GETDISTANCE`(lat1 DOUBLE, lng1 DOUBLE, lat2 DOUBLE, lng2 DOUBLE) RETURNS double\r\nREADS SQL DATA\r\nDETERMINISTIC\r\nBEGIN\r\nDECLARE RAD DOUBLE;\r\nDECLARE EARTH_RADIUS DOUBLE DEFAULT 6378137;\r\nDECLARE radLat1 DOUBLE;\r\nDECLARE radLat2 DOUBLE;\r\nDECLARE radLng1 DOUBLE;\r\nDECLARE radLng2 DOUBLE;\r\nDECLARE s DOUBLE;\r\nSET RAD = PI() / 180.0;\r\nSET radLat1 = lat1 * RAD;\r\nSET radLat2 = lat2 * RAD;\r\nSET radLng1 = lng1 * RAD;\r\nSET radLng2 = lng2 * RAD;\r\nSET s = ACOS(COS(radLat1)*COS(radLat2)*COS(radLng1-radLng2)+SIN(radLat1)*SIN(radLat2))*EARTH_RADIUS;\r\nSET s = ROUND(s * 10000) / 10000;\r\nRETURN s;\r\nEND$$\r\nDELIMITER ;\r\n\r\n4.2、查询SQL\r\n\r\n通过SQL，可设置距离以及排序；可搜索出符合条件的信息，以及有一个较好的排序\r\n\r\nSELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,30.663262,104.071619) AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC LIMIT 0,10','利用推导公式获取距离','','publish','open','open','','%e5%88%a9%e7%94%a8%e6%8e%a8%e5%af%bc%e5%85%ac%e5%bc%8f%e8%8e%b7%e5%8f%96%e8%b7%9d%e7%a6%bb','','','2015-07-24 18:32:11','2015-07-24 18:32:11','',0,'http://blog.raymond.com/?p=49',0,'post','',0),(50,1,'2015-07-24 18:32:11','2015-07-24 18:32:11','抽象为球面两点距离的计算，即已知道球面上两点的经纬度；\r\n点（纬度，经度），A($radLat1,$radLng1)、B($radLat2,$radLng2);\r\n\r\n1、推导\r\n通过余弦定理以及弧度计算方法，最终推导出来的算式A为：\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n目前网上大多使用Google公开的距离计算公司，推导算式B为：\r\n$s = 2*asin(sqrt(pow(sin(($radLat1-$radLat2)/2),2)+cos($radLat1)*cos($radLat2)*pow(sin(($radLng1-$radLng2)/2),2)))*$R;\r\n其中 :\r\n$radLat1、$radLng1，$radLat2，$radLng2 为弧度，$R 为地球半径\r\n\r\n2、通过测试两种算法，结果相同且都正确，但通过PHP代码测试，两点间距离，10W次性能对比，自行推导版本计算时长算式B较优，如下：\r\n\r\n//算式A\r\n0.56368780136108float(431)\r\n0.57460689544678float(431)\r\n0.59051203727722float(431)\r\n\r\n//算式B\r\n0.47404885292053float(431)\r\n0.47808718681335float(431)\r\n0.47946381568909float(431)\r\n\r\n3、所以采用数学方法推导出的公式:\r\n&lt;?php\r\n\r\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\r\npublic static function getDistance($lat1,$lng1,$lat2,$lng2)\r\n{\r\n//地球半径\r\n$R = 6378137;\r\n\r\n//将角度转为狐度\r\n$radLat1 = deg2rad($lat1);\r\n$radLat2 = deg2rad($lat2);\r\n$radLng1 = deg2rad($lng1);\r\n$radLng2 = deg2rad($lng2);\r\n\r\n//结果\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n//精度\r\n$s = round($s* 10000)/10000;\r\n\r\nreturn round($s);\r\n}\r\n\r\n?&gt;\r\n\r\n4、在实际应用中，需要从数据库中遍历取出符合条件，以及排序等操作\r\n将所有数据取出，然后通过PHP循环对比，筛选符合条件结果，显然性能低下；所以我们利用下Mysql存储函数来解决这个问题吧。\r\n4.1、创建Mysql存储函数,并对经纬度字段建立索引\r\n\r\nDELIMITER $$\r\nCREATE DEFINER=`root`@`%` FUNCTION `GETDISTANCE`(lat1 DOUBLE, lng1 DOUBLE, lat2 DOUBLE, lng2 DOUBLE) RETURNS double\r\nREADS SQL DATA\r\nDETERMINISTIC\r\nBEGIN\r\nDECLARE RAD DOUBLE;\r\nDECLARE EARTH_RADIUS DOUBLE DEFAULT 6378137;\r\nDECLARE radLat1 DOUBLE;\r\nDECLARE radLat2 DOUBLE;\r\nDECLARE radLng1 DOUBLE;\r\nDECLARE radLng2 DOUBLE;\r\nDECLARE s DOUBLE;\r\nSET RAD = PI() / 180.0;\r\nSET radLat1 = lat1 * RAD;\r\nSET radLat2 = lat2 * RAD;\r\nSET radLng1 = lng1 * RAD;\r\nSET radLng2 = lng2 * RAD;\r\nSET s = ACOS(COS(radLat1)*COS(radLat2)*COS(radLng1-radLng2)+SIN(radLat1)*SIN(radLat2))*EARTH_RADIUS;\r\nSET s = ROUND(s * 10000) / 10000;\r\nRETURN s;\r\nEND$$\r\nDELIMITER ;\r\n\r\n4.2、查询SQL\r\n\r\n通过SQL，可设置距离以及排序；可搜索出符合条件的信息，以及有一个较好的排序\r\n\r\nSELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,30.663262,104.071619) AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC LIMIT 0,10','利用推导公式获取距离','','inherit','open','open','','49-revision-v1','','','2015-07-24 18:32:11','2015-07-24 18:32:11','',49,'http://blog.raymond.com/?p=50',0,'revision','',0),(51,1,'2015-07-24 18:43:16','2015-07-24 18:43:16','Geohash算法；geohash是一种地址编码，它能把二维的经纬度编码成一维的字符串。\r\n\r\n优点:\r\n\r\n1、利用一个字段，即可存储经纬度；搜索时，只需一条索引，效率较高\r\n2、编码的前缀可以表示更大的区域，查找附近的，非常方便。 SQL中，LIKE ‘wm3yr3%’，即可查询附近的所有地点。\r\n3、通过编码精度可模糊坐标、隐私保护等。\r\n\r\n缺点: 距离和排序需二次运算（筛选结果中运行，其实挺快）\r\n\r\n1、geohash的编码算法\r\n\r\n成都永丰立交经纬度(30.63578,104.031601)\r\n\r\n1.1、纬度范围(-90, 90)平分成两个区间(-90, 0)、(0, 90)， 如果目标纬度位于前一个区间，则编码为0，否则编码为1。\r\n由于30.625265属于(0, 90)，所以取编码为1。\r\n然后再将(0, 90)分成 (0, 45), (45, 90)两个区间，而39.92324位于(0, 45)，所以编码为0，\r\n然后再将(0, 45)分成 (0, 22.5), (22.5, 45)两个区间，而39.92324位于(22.5, 45)，所以编码为1，\r\n依次类推可得永丰立交纬度编码为101010111001001000100101101010。\r\n1.2、经度也用同样的算法，对(-180, 180)依次细分，(-180，0)、(0,180) 得出编码110010011111101001100000000000\r\n1.3、合并经纬度编码，从高到低，先取一位经度，再取一位纬度；得出结果 111001001100011111101011100011000010110000010001010001000100\r\n1.4、用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码，得到(30.63578,104.031601)的编码为wm3yr31d2524。\r\n\r\n11100 10011 00011 11110 10111 00011 00001 01100 00010 00101 00010 00100 =&gt; wm3yr31d2524\r\n十进制 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\r\nbase32 0 1 2 3 4 5 6 7 8 9 b c d e f g\r\n十进制 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\r\nbase32 h j k m n p q r s t u v w x y z\r\n\r\n2、策略\r\n1、在纬度和经度入库时，数据库新加一字段geohash，记录此点的geohash值\r\n2、查找附近，利用 在SQL中 LIKE ‘wm3yr3%’；且此结果可缓存；在小区域内，不会因为改变经纬度，而重新数据库查询\r\n3、查找出的有限结果，如需要求距离或者排序，可利用距离公式和二维数据排序；此时也是少量数据，会很快的。\r\n\r\n3、PHP基类 geohash.class.php\r\n\r\n&nbsp;\r\n<p style=\"text-align: justify;\">&lt;?php\r\n/**\r\n* Geohash generation class\r\n* http://blog.dixo.net/downloads/\r\n*\r\n* This file copyright (C) 2008 Paul Dixon (paul@elphin.com)\r\n*\r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU General Public License\r\n* as published by the Free Software Foundation; either version 3\r\n* of the License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n* GNU General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU General Public License\r\n* along with this program; if not, write to the Free Software\r\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\r\n*/</p>\r\n/**\r\n* Encode and decode geohashes\r\n*\r\n*/\r\nclass Geohash\r\n{\r\nprivate $coding=\"0123456789bcdefghjkmnpqrstuvwxyz\";\r\nprivate $codingMap=array();\r\n\r\npublic function Geohash()\r\n{\r\n//build map from encoding char to 0 padded bitfield\r\nfor($i=0; $i&lt;32; $i++)\r\n{\r\n$this-&gt;codingMap[substr($this-&gt;coding,$i,1)]=str_pad(decbin($i), 5, \"0\", STR_PAD_LEFT);\r\n}\r\n\r\n}\r\n\r\n/**\r\n* Decode a geohash and return an array with decimal lat,long in it\r\n*/\r\npublic function decode($hash)\r\n{\r\n//decode hash into binary string\r\n$binary=\"\";\r\n$hl=strlen($hash);\r\nfor($i=0; $i&lt;$hl; $i++)\r\n{\r\n$binary.=$this-&gt;codingMap[substr($hash,$i,1)];\r\n}\r\n\r\n//split the binary into lat and log binary strings\r\n$bl=strlen($binary);\r\n$blat=\"\";\r\n$blong=\"\";\r\nfor ($i=0; $i&lt;$bl; $i++)\r\n{\r\nif ($i%2)\r\n$blat=$blat.substr($binary,$i,1);\r\nelse\r\n$blong=$blong.substr($binary,$i,1);\r\n\r\n}\r\n\r\n//now concert to decimal\r\n$lat=$this-&gt;binDecode($blat,-90,90);\r\n$long=$this-&gt;binDecode($blong,-180,180);\r\n\r\n//figure out how precise the bit count makes this calculation\r\n$latErr=$this-&gt;calcError(strlen($blat),-90,90);\r\n$longErr=$this-&gt;calcError(strlen($blong),-180,180);\r\n\r\n//how many decimal places should we use? There\'s a little art to\r\n//this to ensure I get the same roundings as geohash.org\r\n$latPlaces=max(1, -round(log10($latErr))) - 1;\r\n$longPlaces=max(1, -round(log10($longErr))) - 1;\r\n\r\n//round it\r\n$lat=round($lat, $latPlaces);\r\n$long=round($long, $longPlaces);\r\n\r\nreturn array($lat,$long);\r\n}\r\n/**\r\n* Encode a hash from given lat and long\r\n*/\r\npublic function encode($lat,$long)\r\n{\r\n//how many bits does latitude need?\r\n$plat=$this-&gt;precision($lat);\r\n$latbits=1;\r\n$err=45;\r\nwhile($err&gt;$plat)\r\n{\r\n$latbits++;\r\n$err/=2;\r\n}\r\n\r\n//how many bits does longitude need?\r\n$plong=$this-&gt;precision($long);\r\n$longbits=1;\r\n$err=90;\r\nwhile($err&gt;$plong)\r\n{\r\n$longbits++;\r\n$err/=2;\r\n}\r\n\r\n//bit counts need to be equal\r\n$bits=max($latbits,$longbits);\r\n\r\n//as the hash create bits in groups of 5, lets not\r\n//waste any bits - lets bulk it up to a multiple of 5\r\n//and favour the longitude for any odd bits\r\n$longbits=$bits;\r\n$latbits=$bits;\r\n$addlong=1;\r\nwhile (($longbits+$latbits)%5 != 0)\r\n{\r\n$longbits+=$addlong;\r\n$latbits+=!$addlong;\r\n$addlong=!$addlong;\r\n}\r\n\r\n//encode each as binary string\r\n$blat=$this-&gt;binEncode($lat,-90,90, $latbits);\r\n$blong=$this-&gt;binEncode($long,-180,180,$longbits);\r\n\r\n//merge lat and long together\r\n$binary=\"\";\r\n$uselong=1;\r\nwhile (strlen($blat)+strlen($blong))\r\n{\r\nif ($uselong)\r\n{\r\n$binary=$binary.substr($blong,0,1);\r\n$blong=substr($blong,1);\r\n}\r\nelse\r\n{\r\n$binary=$binary.substr($blat,0,1);\r\n$blat=substr($blat,1);\r\n}\r\n$uselong=!$uselong;\r\n}\r\n\r\n//convert binary string to hash\r\n$hash=\"\";\r\nfor ($i=0; $i&lt;strlen($binary); $i+=5)\r\n{\r\n$n=bindec(substr($binary,$i,5));\r\n$hash=$hash.$this-&gt;coding[$n];\r\n}\r\n\r\nreturn $hash;\r\n}\r\n\r\n/**\r\n* What\'s the maximum error for $bits bits covering a range $min to $max\r\n*/\r\nprivate function calcError($bits,$min,$max)\r\n{\r\n$err=($max-$min)/2;\r\nwhile ($bits--)\r\n$err/=2;\r\nreturn $err;\r\n}\r\n\r\n/*\r\n* returns precision of number\r\n* precision of 42 is 0.5\r\n* precision of 42.4 is 0.05\r\n* precision of 42.41 is 0.005 etc\r\n*/\r\nprivate function precision($number)\r\n{\r\n$precision=0;\r\n$pt=strpos($number,\'.\');\r\nif ($pt!==false)\r\n{\r\n$precision=-(strlen($number)-$pt-1);\r\n}\r\n\r\nreturn pow(10,$precision)/2;\r\n}\r\n\r\n/**\r\n* create binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\r\n* removing the tail recursion is left an exercise for the reader\r\n*/\r\nprivate function binEncode($number, $min, $max, $bitcount)\r\n{\r\nif ($bitcount==0)\r\nreturn \"\";\r\n\r\n#echo \"$bitcount: $min $max&lt;br&gt;\";\r\n\r\n//this is our mid point - we will produce a bit to say\r\n//whether $number is above or below this mid point\r\n$mid=($min+$max)/2;\r\nif ($number&gt;$mid)\r\nreturn \"1\".$this-&gt;binEncode($number, $mid, $max,$bitcount-1);\r\nelse\r\nreturn \"0\".$this-&gt;binEncode($number, $min, $mid,$bitcount-1);\r\n}\r\n\r\n/**\r\n* decodes binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\r\n* removing the tail recursion is left an exercise for the reader\r\n*/\r\nprivate function binDecode($binary, $min, $max)\r\n{\r\n$mid=($min+$max)/2;\r\n\r\nif (strlen($binary)==0)\r\nreturn $mid;\r\n\r\n$bit=substr($binary,0,1);\r\n$binary=substr($binary,1);\r\n\r\nif ($bit==1)\r\nreturn $this-&gt;binDecode($binary, $mid, $max);\r\nelse\r\nreturn $this-&gt;binDecode($binary, $min, $mid);\r\n}\r\n}\r\n?&gt;\r\n\r\n&nbsp;\r\n\r\n测试代码\r\n\r\n&lt;?php\r\n\r\nrequire_once(\'Mysql.class.php\');\r\nrequire_once(\'geohash.class.php\');\r\n\r\n//mysql\r\n$conf = array(\r\n\r\n\'host\' =&gt; \'127.0.0.1\',\r\n\'port\' =&gt; 3306,\r\n\'user\' =&gt; \'root\',\r\n\'password\' =&gt; \'123456\',\r\n\'database\' =&gt; \'mocube\',\r\n\'charset\' =&gt; \'utf8\',\r\n\'persistent\' =&gt; false\r\n);\r\n\r\n$mysql = new Db_Mysql($conf);\r\n$geohash=new Geohash;\r\n\r\n//经纬度转换成Geohash\r\n/*\r\n\r\n$sql = \'select shop_id,latitude,longitude from mb_shop_ext\';\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\nforeach($data as $val)\r\n{\r\n\r\n$geohash_val = $geohash-&gt;encode($val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$sql = \'update mb_shop_ext set geohash= \"\'.$geohash_val.\'\" where shop_id = \'.$val[\'shop_id\'];\r\n\r\necho $sql;\r\n\r\n$re = $mysql-&gt;query($sql);\r\n\r\nvar_dump($re);\r\n\r\n}\r\n*/\r\n\r\n//获取附近的信息\r\n$n_latitude = $_GET[\'la\'];\r\n$n_longitude = $_GET[\'lo\'];\r\n\r\n//开始\r\n$b_time = microtime(true);\r\n\r\n//方案A，直接利用数据库存储函数，遍历排序\r\n/*\r\n$sql = \'SELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,\'.$n_latitude.\',\'.$n_longitude.\') AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC\';\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\nexit;\r\n*/\r\n\r\n//方案B geohash求出附近，然后排序\r\n\r\n//当前 geohash值\r\n$n_geohash = $geohash-&gt;encode($n_latitude,$n_longitude);\r\n\r\n//附近\r\n$n = $_GET[\'n\'];\r\n$like_geohash = substr($n_geohash, 0, $n);\r\n\r\n$sql = \'select * from mb_shop_ext where geohash like \"\'.$like_geohash.\'%\"\';\r\n\r\necho $sql;\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//算出实际距离\r\nforeach($data as $key=&gt;$val)\r\n{\r\n$distance = getDistance($n_latitude,$n_longitude,$val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$data[$key][\'distance\'] = $distance;\r\n\r\n//排序列\r\n$sortdistance[$key] = $distance;\r\n}\r\n\r\n//距离排序\r\narray_multisort($sortdistance,SORT_ASC,$data);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\n\r\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\r\nfunction getDistance($lat1,$lng1,$lat2,$lng2)\r\n{\r\n//地球半径\r\n$R = 6378137;\r\n\r\n//将角度转为狐度\r\n$radLat1 = deg2rad($lat1);\r\n$radLat2 = deg2rad($lat2);\r\n$radLng1 = deg2rad($lng1);\r\n$radLng2 = deg2rad($lng2);\r\n\r\n//结果\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n//精度\r\n$s = round($s* 10000)/10000;\r\n\r\nreturn round($s);\r\n}\r\n\r\n?&gt;','利用Geohash算法获取LBS距离','','publish','open','open','','%e5%88%a9%e7%94%a8geohash%e7%ae%97%e6%b3%95%e8%8e%b7%e5%8f%96lbs%e8%b7%9d%e7%a6%bb','','','2015-08-07 19:04:13','2015-08-07 19:04:13','',0,'http://blog.raymond.com/?p=51',0,'post','',0),(52,1,'2015-07-24 18:43:16','2015-07-24 18:43:16','Geohash算法；geohash是一种地址编码，它能把二维的经纬度编码成一维的字符串。\r\n\r\n优点:\r\n\r\n1、利用一个字段，即可存储经纬度；搜索时，只需一条索引，效率较高\r\n2、编码的前缀可以表示更大的区域，查找附近的，非常方便。 SQL中，LIKE ‘wm3yr3%’，即可查询附近的所有地点。\r\n3、通过编码精度可模糊坐标、隐私保护等。\r\n\r\n缺点: 距离和排序需二次运算（筛选结果中运行，其实挺快）\r\n\r\n1、geohash的编码算法\r\n\r\n成都永丰立交经纬度(30.63578,104.031601)\r\n\r\n1.1、纬度范围(-90, 90)平分成两个区间(-90, 0)、(0, 90)， 如果目标纬度位于前一个区间，则编码为0，否则编码为1。\r\n由于30.625265属于(0, 90)，所以取编码为1。\r\n然后再将(0, 90)分成 (0, 45), (45, 90)两个区间，而39.92324位于(0, 45)，所以编码为0，\r\n然后再将(0, 45)分成 (0, 22.5), (22.5, 45)两个区间，而39.92324位于(22.5, 45)，所以编码为1，\r\n依次类推可得永丰立交纬度编码为101010111001001000100101101010。\r\n1.2、经度也用同样的算法，对(-180, 180)依次细分，(-180，0)、(0,180) 得出编码110010011111101001100000000000\r\n1.3、合并经纬度编码，从高到低，先取一位经度，再取一位纬度；得出结果 111001001100011111101011100011000010110000010001010001000100\r\n1.4、用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码，得到(30.63578,104.031601)的编码为wm3yr31d2524。\r\n\r\n11100 10011 00011 11110 10111 00011 00001 01100 00010 00101 00010 00100 =&gt; wm3yr31d2524\r\n十进制 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\r\nbase32 0 1 2 3 4 5 6 7 8 9 b c d e f g\r\n十进制 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\r\nbase32 h j k m n p q r s t u v w x y z\r\n\r\n2、策略\r\n1、在纬度和经度入库时，数据库新加一字段geohash，记录此点的geohash值\r\n2、查找附近，利用 在SQL中 LIKE ‘wm3yr3%’；且此结果可缓存；在小区域内，不会因为改变经纬度，而重新数据库查询\r\n3、查找出的有限结果，如需要求距离或者排序，可利用距离公式和二维数据排序；此时也是少量数据，会很快的。\r\n\r\n3、PHP基类 geohash.class.php\r\n\r\n&lt;?php\r\n\r\n/**\r\n* Encode and decode geohashes\r\n*\r\n*/\r\n\r\nclass Geohash\r\n{\r\nprivate $coding=\"0123456789bcdefghjkmnpqrstuvwxyz\";\r\nprivate $codingMap=array();\r\n\r\npublic function Geohash()\r\n{\r\nfor($i=0; $i&lt;32; $i++)\r\n{\r\n$this-&gt;codingMap[substr($this-&gt;coding,$i,1)]=str_pad(decbin($i), 5, \"0\", STR_PAD_LEFT);\r\n}\r\n\r\n}\r\n\r\npublic function decode($hash)\r\n{\r\n$binary=\"\";\r\n$hl=strlen($hash);\r\nfor($i=0; $i&lt;$hl; $i++)\r\n{\r\n$binary.=$this-&gt;codingMap[substr($hash,$i,1)];\r\n}\r\n\r\n$bl=strlen($binary);\r\n$blat=\"\";\r\n$blong=\"\";\r\nfor ($i=0; $i&lt;$bl; $i++)\r\n{\r\nif ($i%2)\r\n$blat=$blat.substr($binary,$i,1);\r\nelse\r\n$blong=$blong.substr($binary,$i,1);\r\n\r\n}\r\n\r\n$lat=$this-&gt;binDecode($blat,-90,90);\r\n$long=$this-&gt;binDecode($blong,-180,180);\r\n\r\n$latErr=$this-&gt;calcError(strlen($blat),-90,90);\r\n$longErr=$this-&gt;calcError(strlen($blong),-180,180);\r\n\r\n$latPlaces=max(1, -round(log10($latErr))) - 1;\r\n$longPlaces=max(1, -round(log10($longErr))) - 1;\r\n\r\n$lat=round($lat, $latPlaces);\r\n$long=round($long, $longPlaces);\r\n\r\nreturn array($lat,$long);\r\n}\r\n\r\npublic function encode($lat,$long)\r\n{\r\n$plat=$this-&gt;precision($lat);\r\n$latbits=1;\r\n$err=45;\r\nwhile($err&gt;$plat)\r\n{\r\n$latbits++;\r\n$err/=2;\r\n}\r\n\r\n$plong=$this-&gt;precision($long);\r\n$longbits=1;\r\n$err=90;\r\nwhile($err&gt;$plong)\r\n{\r\n$longbits++;\r\n$err/=2;\r\n}\r\n\r\n$bits=max($latbits,$longbits);\r\n\r\n$longbits=$bits;\r\n$latbits=$bits;\r\n$addlong=1;\r\nwhile (($longbits+$latbits)%5 != 0)\r\n{\r\n$longbits+=$addlong;\r\n$latbits+=!$addlong;\r\n$addlong=!$addlong;\r\n}\r\n\r\n\r\n$blat=$this-&gt;binEncode($lat,-90,90, $latbits);\r\n\r\n$blong=$this-&gt;binEncode($long,-180,180,$longbits);\r\n\r\n$binary=\"\";\r\n$uselong=1;\r\nwhile (strlen($blat)+strlen($blong))\r\n{\r\nif ($uselong)\r\n{\r\n$binary=$binary.substr($blong,0,1);\r\n$blong=substr($blong,1);\r\n}\r\nelse\r\n{\r\n$binary=$binary.substr($blat,0,1);\r\n$blat=substr($blat,1);\r\n}\r\n$uselong=!$uselong;\r\n}\r\n\r\n$hash=\"\";\r\nfor ($i=0; $i&lt;strlen($binary); $i+=5)\r\n{\r\n$n=bindec(substr($binary,$i,5));\r\n$hash=$hash.$this-&gt;coding[$n];\r\n}\r\n\r\n\r\nreturn $hash;\r\n}\r\n\r\nprivate function calcError($bits,$min,$max)\r\n{\r\n$err=($max-$min)/2;\r\nwhile ($bits--)\r\n$err/=2;\r\nreturn $err;\r\n}\r\n\r\nprivate function precision($number)\r\n{\r\n$precision=0;\r\n$pt=strpos($number,\'.\');\r\nif ($pt!==false)\r\n{\r\n$precision=-(strlen($number)-$pt-1);\r\n}\r\n\r\nreturn pow(10,$precision)/2;\r\n}\r\n\r\nprivate function binEncode($number, $min, $max, $bitcount)\r\n{\r\nif ($bitcount==0)\r\nreturn \"\";\r\n$mid=($min+$max)/2;\r\nif ($number&gt;$mid)\r\nreturn \"1\".$this-&gt;binEncode($number, $mid, $max,$bitcount-1);\r\nelse\r\nreturn \"0\".$this-&gt;binEncode($number, $min, $mid,$bitcount-1);\r\n}\r\n\r\nprivate function binDecode($binary, $min, $max)\r\n{\r\n$mid=($min+$max)/2;\r\n\r\nif (strlen($binary)==0)\r\nreturn $mid;\r\n\r\n$bit=substr($binary,0,1);\r\n$binary=substr($binary,1);\r\n\r\nif ($bit==1)\r\nreturn $this-&gt;binDecode($binary, $mid, $max);\r\nelse\r\nreturn $this-&gt;binDecode($binary, $min, $mid);\r\n}\r\n}\r\n\r\n测试代码\r\n\r\n&lt;?php\r\n\r\nrequire_once(\'Mysql.class.php\');\r\nrequire_once(\'geohash.class.php\');\r\n\r\n//mysql\r\n$conf = array(\r\n\r\n\'host\' =&gt; \'127.0.0.1\',\r\n\'port\' =&gt; 3306,\r\n\'user\' =&gt; \'root\',\r\n\'password\' =&gt; \'123456\',\r\n\'database\' =&gt; \'mocube\',\r\n\'charset\' =&gt; \'utf8\',\r\n\'persistent\' =&gt; false\r\n);\r\n\r\n$mysql = new Db_Mysql($conf);\r\n$geohash=new Geohash;\r\n\r\n\r\n//经纬度转换成Geohash\r\n/*\r\n\r\n$sql = \'select shop_id,latitude,longitude from mb_shop_ext\';\r\n\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n\r\nforeach($data as $val)\r\n{\r\n\r\n$geohash_val = $geohash-&gt;encode($val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$sql = \'update mb_shop_ext set geohash= \"\'.$geohash_val.\'\" where shop_id = \'.$val[\'shop_id\'];\r\n\r\necho $sql;\r\n\r\n$re = $mysql-&gt;query($sql);\r\n\r\nvar_dump($re);\r\n\r\n}\r\n*/\r\n\r\n\r\n//获取附近的信息\r\n$n_latitude = $_GET[\'la\'];\r\n$n_longitude = $_GET[\'lo\'];\r\n\r\n//开始\r\n$b_time = microtime(true);\r\n\r\n\r\n//方案A，直接利用数据库存储函数，遍历排序\r\n/*\r\n$sql = \'SELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,\'.$n_latitude.\',\'.$n_longitude.\') AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC\';\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\nexit;\r\n*/\r\n\r\n//方案B geohash求出附近，然后排序\r\n\r\n//当前 geohash值\r\n$n_geohash = $geohash-&gt;encode($n_latitude,$n_longitude);\r\n\r\n//附近\r\n$n = $_GET[\'n\'];\r\n$like_geohash = substr($n_geohash, 0, $n);\r\n\r\n$sql = \'select * from mb_shop_ext where geohash like \"\'.$like_geohash.\'%\"\';\r\n\r\necho $sql;\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//算出实际距离\r\nforeach($data as $key=&gt;$val)\r\n{\r\n$distance = getDistance($n_latitude,$n_longitude,$val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$data[$key][\'distance\'] = $distance;\r\n\r\n//排序列\r\n$sortdistance[$key] = $distance;\r\n}\r\n\r\n//距离排序\r\narray_multisort($sortdistance,SORT_ASC,$data);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\n\r\n\r\n\r\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\r\nfunction getDistance($lat1,$lng1,$lat2,$lng2)\r\n{\r\n//地球半径\r\n$R = 6378137;\r\n\r\n//将角度转为狐度\r\n$radLat1 = deg2rad($lat1);\r\n$radLat2 = deg2rad($lat2);\r\n$radLng1 = deg2rad($lng1);\r\n$radLng2 = deg2rad($lng2);\r\n\r\n//结果\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n//精度\r\n$s = round($s* 10000)/10000;\r\n\r\nreturn round($s);\r\n}\r\n\r\n?&gt;','利用Geohash算法获取LBS距离','','inherit','open','open','','51-revision-v1','','','2015-07-24 18:43:16','2015-07-24 18:43:16','',51,'http://blog.raymond.com/?p=52',0,'revision','',0),(54,1,'2015-08-04 17:51:16','2015-08-04 17:51:16','1.connect\r\n描述：实例连接到一个Redis.\r\n参数：host: string，port: int\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n\r\n$redis = new redis();\r\n$result = $redis-&gt;connect(\'127.0.0.1\', 6379);\r\nvar_dump($result); //结果：bool(true)\r\n\r\n2.set\r\n描述：设置key和value的值\r\n参数：Key Value\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n\r\n$result = $redis-&gt;set(\'test\',\"11111111111\");\r\nvar_dump($result); //结果：bool(true)\r\n\r\n3.get\r\n描述：获取有关指定键的值\r\n参数：key\r\n返回值：string或BOOL 如果键不存在，则返回 FALSE。否则，返回指定键对应的value值。\r\n$result = $redis-&gt;get(\'test\');\r\nvar_dump($result); //结果：string(11) \"11111111111\"\r\n\r\n4.delete\r\n描述：删除指定的键\r\n参数：一个键，或不确定数目的参数，每一个关键的数组：key1 key2 key3 … keyN\r\n返回值：删除的项数\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\necho $redis-&gt;get(\'test\'); //结果：1111111111111\r\n$redis-&gt;delete(\'test\');\r\nvar_dump($redis-&gt;get(\'test\')); //结果：bool(false)\r\n\r\n5.setnx\r\n描述：如果在数据库中不存在该键，设置关键值参数\r\n参数：key value\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\n$redis-&gt;setnx(\'test\',\"22222222\");\r\necho $redis-&gt;get(\'test\'); //结果：1111111111111\r\n$redis-&gt;delete(\'test\');\r\n$redis-&gt;setnx(\'test\',\"22222222\");\r\necho $redis-&gt;get(\'test\'); //结果：22222222\r\n\r\n6.exists\r\n描述：验证指定的键是否存在\r\n参数key\r\n返回值：Bool 成功返回：TRUE;失败返回：FALSE\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\nvar_dump($redis-&gt;exists(\'test\')); //结果：bool(true)\r\n\r\n7.incr\r\n描述：数字递增存储键值键.\r\n参数：key value：将被添加到键的值\r\n返回值：INT the new value\r\n\r\n$redis-&gt;set(\'test\',\"123\");\r\nvar_dump($redis-&gt;incr(\"test\")); //结果：int(124)\r\nvar_dump($redis-&gt;incr(\"test\")); //结果：int(125)\r\n8.decr\r\n描述：数字递减存储键值。\r\n参数：key value：将被添加到键的值\r\n返回值：INT the new value\r\n\r\n$redis-&gt;set(\'test\',\"123\");\r\nvar_dump($redis-&gt;decr(\"test\")); //结果：int(122)\r\nvar_dump($redis-&gt;decr(\"test\")); //结果：int(121)\r\n\r\n9.getMultiple\r\n描述：取得所有指定键的值。如果一个或多个键不存在，该数组中该键的值为假\r\n参数：其中包含键值的列表数组\r\n返回值：返回包含所有键的值的数组\r\n\r\n$redis-&gt;set(\'test1\',\"1\");\r\n$redis-&gt;set(\'test2\',\"2\");\r\n$result = $redis-&gt;getMultiple(array(\'test1\',\'test2\'));\r\nprint_r($result); //结果：Array ( [0] =&gt; 1 [1] =&gt; 2 )\r\n\r\n10.lpush\r\n描述：由列表头部添加字符串值。如果不存在该键则创建该列表。如果该键存在，而且不是一个列表，返回FALSE。\r\n参数：key,value\r\n返回值：成功返回数组长度，失败false\r\nvar_dump($redis-&gt;lpush(\"test\",\"111\")); //结果：int(1)\r\nvar_dump($redis-&gt;lpush(\"test\",\"222\")); //结果：int(2)','PHP操作redis','','publish','open','open','','php%e6%93%8d%e4%bd%9credis','','','2015-08-04 17:51:16','2015-08-04 17:51:16','',0,'http://blog.raymond.com/?p=54',0,'post','',0),(55,1,'2015-07-27 17:26:18','2015-07-27 17:26:18','在windows命令行窗口下执行：\r\n\r\n1.查看所有的端口占用情况\r\nC:\\&gt;netstat -ano\r\n2.查看指定端口的占用情况\r\nC:\\&gt;netstat -aon|findstr \"9050\"\r\n\r\n3.查看某个进程\r\nC:\\&gt;tasklist|findstr \"2016\"\r\n映像名称 PID 会话名 会话# 内存使用\r\n========================= ======== ================\r\ntor.exe 2016 Console 0 16,064 K\r\n\r\n4.结束该进程\r\nC:\\&gt;taskkill /f /t /im tor.exe','windows 命令','','publish','open','open','','windows-%e5%91%bd%e4%bb%a4','','','2015-07-27 17:26:18','2015-07-27 17:26:18','',0,'http://blog.raymond.com/?p=55',0,'post','',0),(56,1,'2015-07-27 17:26:18','2015-07-27 17:26:18','在windows命令行窗口下执行：\r\n\r\n1.查看所有的端口占用情况\r\nC:\\&gt;netstat -ano\r\n2.查看指定端口的占用情况\r\nC:\\&gt;netstat -aon|findstr \"9050\"\r\n\r\n3.查看某个进程\r\nC:\\&gt;tasklist|findstr \"2016\"\r\n映像名称 PID 会话名 会话# 内存使用\r\n========================= ======== ================\r\ntor.exe 2016 Console 0 16,064 K\r\n\r\n4.结束该进程\r\nC:\\&gt;taskkill /f /t /im tor.exe','windows 命令','','inherit','open','open','','55-revision-v1','','','2015-07-27 17:26:18','2015-07-27 17:26:18','',55,'http://blog.raymond.com/?p=56',0,'revision','',0),(57,1,'2015-08-04 12:54:31','2015-08-04 12:54:31','1.安装tcl支持\r\n\r\nyum install tcl\r\n2.安装redis我们以最新的2.8.9为例\r\n\r\nwget http://download.redis.io/releases/redis-2.8.9.tar.gz\r\ntar xzf redis-2.8.9.tar.gz\r\ncd redis-2.8.9\r\nmake\r\nmake test\r\nmake install\r\n\r\n如果出现了 /bin/sh: cc: command not found，是因为没有安装gcc扩展，安装\r\nyum install gcc\r\n\r\n出现了错误\r\n在包含自 adlist.c：34 的文件中:\r\nzmalloc.h:50:31: 错误：jemalloc/jemalloc.h：没有那个文件或目录\r\nzmalloc.h:55:2: 错误：#error \"Newer version of jemalloc required\"\r\n是因为路径没有设置对，要加上malloc=libc\r\nmake PREFIX=/data/apps/redis2.6.14 MALLOC=libc install\r\n\r\n测试通过后安装，安装后会自动把redis-server,redis-cli,redis-benchmark,redis-check-aof,redis-check-dump复制到/usr/local/bin目录下。\r\n\r\n编辑redis.conf文件\r\n\r\nvi redis.conf\r\n修改daemonize no改成yes。\r\n\r\n我们手动复制redis.conf到/etc目录下\r\ncp redis.conf /etc\r\n\r\n启动redis\r\n./bin/redis-server /etc/redis.conf&gt;/dev/null&amp;\r\n停止redis\r\n./redis-cli -h 127.0.0.1 -p 6379 shutdown','centos安装redis','','publish','open','open','','centos%e5%ae%89%e8%a3%85redis','','','2015-08-04 12:54:31','2015-08-04 12:54:31','',0,'http://blog.raymond.com/?p=57',0,'post','',0),(58,1,'2015-08-04 12:54:31','2015-08-04 12:54:31','1.安装tcl支持\r\n\r\nyum install tcl\r\n2.安装redis我们以最新的2.8.9为例\r\n\r\nwget http://download.redis.io/releases/redis-2.8.9.tar.gz\r\ntar xzf redis-2.8.9.tar.gz\r\ncd redis-2.8.9\r\nmake\r\nmake test\r\nmake install\r\n\r\n如果出现了 /bin/sh: cc: command not found，是因为没有安装gcc扩展，安装\r\nyum install gcc\r\n\r\n出现了错误\r\n在包含自 adlist.c：34 的文件中:\r\nzmalloc.h:50:31: 错误：jemalloc/jemalloc.h：没有那个文件或目录\r\nzmalloc.h:55:2: 错误：#error \"Newer version of jemalloc required\"\r\n是因为路径没有设置对，要加上malloc=libc\r\nmake PREFIX=/data/apps/redis2.6.14 MALLOC=libc install\r\n\r\n测试通过后安装，安装后会自动把redis-server,redis-cli,redis-benchmark,redis-check-aof,redis-check-dump复制到/usr/local/bin目录下。\r\n\r\n编辑redis.conf文件\r\n\r\nvi redis.conf\r\n修改daemonize no改成yes。\r\n\r\n我们手动复制redis.conf到/etc目录下\r\ncp redis.conf /etc\r\n\r\n启动redis\r\n./bin/redis-server /etc/redis.conf&gt;/dev/null&amp;\r\n停止redis\r\n./redis-cli -h 127.0.0.1 -p 6379 shutdown','centos安装redis','','inherit','open','open','','57-revision-v1','','','2015-08-04 12:54:31','2015-08-04 12:54:31','',57,'http://blog.raymond.com/?p=58',0,'revision','',0),(59,1,'2015-08-04 17:51:16','2015-08-04 17:51:16','1.connect\r\n描述：实例连接到一个Redis.\r\n参数：host: string，port: int\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n\r\n$redis = new redis();\r\n$result = $redis-&gt;connect(\'127.0.0.1\', 6379);\r\nvar_dump($result); //结果：bool(true)\r\n\r\n2.set\r\n描述：设置key和value的值\r\n参数：Key Value\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n\r\n$result = $redis-&gt;set(\'test\',\"11111111111\");\r\nvar_dump($result); //结果：bool(true)\r\n\r\n3.get\r\n描述：获取有关指定键的值\r\n参数：key\r\n返回值：string或BOOL 如果键不存在，则返回 FALSE。否则，返回指定键对应的value值。\r\n$result = $redis-&gt;get(\'test\');\r\nvar_dump($result); //结果：string(11) \"11111111111\"\r\n\r\n4.delete\r\n描述：删除指定的键\r\n参数：一个键，或不确定数目的参数，每一个关键的数组：key1 key2 key3 … keyN\r\n返回值：删除的项数\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\necho $redis-&gt;get(\'test\'); //结果：1111111111111\r\n$redis-&gt;delete(\'test\');\r\nvar_dump($redis-&gt;get(\'test\')); //结果：bool(false)\r\n\r\n5.setnx\r\n描述：如果在数据库中不存在该键，设置关键值参数\r\n参数：key value\r\n返回值：BOOL 成功返回：TRUE;失败返回：FALSE\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\n$redis-&gt;setnx(\'test\',\"22222222\");\r\necho $redis-&gt;get(\'test\'); //结果：1111111111111\r\n$redis-&gt;delete(\'test\');\r\n$redis-&gt;setnx(\'test\',\"22222222\");\r\necho $redis-&gt;get(\'test\'); //结果：22222222\r\n\r\n6.exists\r\n描述：验证指定的键是否存在\r\n参数key\r\n返回值：Bool 成功返回：TRUE;失败返回：FALSE\r\n$redis-&gt;set(\'test\',\"1111111111111\");\r\nvar_dump($redis-&gt;exists(\'test\')); //结果：bool(true)\r\n\r\n7.incr\r\n描述：数字递增存储键值键.\r\n参数：key value：将被添加到键的值\r\n返回值：INT the new value\r\n\r\n$redis-&gt;set(\'test\',\"123\");\r\nvar_dump($redis-&gt;incr(\"test\")); //结果：int(124)\r\nvar_dump($redis-&gt;incr(\"test\")); //结果：int(125)\r\n8.decr\r\n描述：数字递减存储键值。\r\n参数：key value：将被添加到键的值\r\n返回值：INT the new value\r\n\r\n$redis-&gt;set(\'test\',\"123\");\r\nvar_dump($redis-&gt;decr(\"test\")); //结果：int(122)\r\nvar_dump($redis-&gt;decr(\"test\")); //结果：int(121)\r\n\r\n9.getMultiple\r\n描述：取得所有指定键的值。如果一个或多个键不存在，该数组中该键的值为假\r\n参数：其中包含键值的列表数组\r\n返回值：返回包含所有键的值的数组\r\n\r\n$redis-&gt;set(\'test1\',\"1\");\r\n$redis-&gt;set(\'test2\',\"2\");\r\n$result = $redis-&gt;getMultiple(array(\'test1\',\'test2\'));\r\nprint_r($result); //结果：Array ( [0] =&gt; 1 [1] =&gt; 2 )\r\n\r\n10.lpush\r\n描述：由列表头部添加字符串值。如果不存在该键则创建该列表。如果该键存在，而且不是一个列表，返回FALSE。\r\n参数：key,value\r\n返回值：成功返回数组长度，失败false\r\nvar_dump($redis-&gt;lpush(\"test\",\"111\")); //结果：int(1)\r\nvar_dump($redis-&gt;lpush(\"test\",\"222\")); //结果：int(2)','PHP操作redis','','inherit','open','open','','54-revision-v1','','','2015-08-04 17:51:16','2015-08-04 17:51:16','',54,'http://blog.raymond.com/?p=59',0,'revision','',0),(60,1,'2015-08-04 18:09:37','2015-08-04 18:09:37','CI 使用session\r\n\r\n首先，必须保证有php扩展Mcrypt\r\n在项目中必须初始化session类$this-&gt;load-&gt;library(\'session\');\r\n\r\n添加session数据\r\n$this-&gt;session-&gt;set_userdata($array);\r\n\r\n获取session数据\r\n$this-&gt;session-&gt;userdata(\'item\');\r\n获取所有session数据\r\n$this-&gt;session-&gt;all_userdata()\r\n\r\n删除session数据\r\n$this-&gt;session-&gt;unset_userdata(\'some_name\');\r\n\r\n添加“闪出”数据（只对下一次读取有用）\r\n$this-&gt;session-&gt;set_flashdata(\'item\', \'value\');\r\n读出“闪出”数据\r\n$this-&gt;session-&gt;flashdata(\'item\');\r\n保留“闪出”数据，不读出\r\n$this-&gt;session-&gt;keep_flashdata(\'item\');','CI 框架使用session','','publish','open','open','','ci-%e6%a1%86%e6%9e%b6%e4%bd%bf%e7%94%a8session','','','2015-08-04 18:09:37','2015-08-04 18:09:37','',0,'http://blog.raymond.com/?p=60',0,'post','',0),(61,1,'2015-08-04 18:09:37','2015-08-04 18:09:37','CI 使用session\r\n\r\n首先，必须保证有php扩展Mcrypt\r\n在项目中必须初始化session类$this-&gt;load-&gt;library(\'session\');\r\n\r\n添加session数据\r\n$this-&gt;session-&gt;set_userdata($array);\r\n\r\n获取session数据\r\n$this-&gt;session-&gt;userdata(\'item\');\r\n获取所有session数据\r\n$this-&gt;session-&gt;all_userdata()\r\n\r\n删除session数据\r\n$this-&gt;session-&gt;unset_userdata(\'some_name\');\r\n\r\n添加“闪出”数据（只对下一次读取有用）\r\n$this-&gt;session-&gt;set_flashdata(\'item\', \'value\');\r\n读出“闪出”数据\r\n$this-&gt;session-&gt;flashdata(\'item\');\r\n保留“闪出”数据，不读出\r\n$this-&gt;session-&gt;keep_flashdata(\'item\');','CI 框架使用session','','inherit','open','open','','60-revision-v1','','','2015-08-04 18:09:37','2015-08-04 18:09:37','',60,'http://blog.raymond.com/?p=61',0,'revision','',0),(62,1,'2015-08-05 18:10:20','2015-08-05 18:10:20','CI 框架使用 redis\r\n\r\n正常来说，CI框架3.0版本已经添加了对于缓存类 redis，menchached 。但是我装了个纯净版的木有，不明为何。。。。\r\n\r\n在CI中使用redis，首先当然是得有redis数据库和PHP的redis扩展\r\n\r\n接下来，配置文件保存在 application/config/redis.php 里面\r\n$config = array(\r\n\'default\' =&gt; array(\r\n// \'socket_type\'=&gt;\'tcp\',\r\n// \'socket\'=&gt;\'/var/run/redis.sock\',\r\n\'hostname\' =&gt; \'127.0.0.1\',\r\n\'port\' =&gt; \'6379\',\r\n\'weight\' =&gt; \'1\',\r\n\'timeout\' =&gt; 0\r\n),\r\n);\r\n\r\n然后，只要像下面这样，就能调用redis了\r\n$this-&gt;load-&gt;driver(\'cache\');\r\n$this-&gt;cache-&gt;redis-&gt;save(\'foo\', \'bar\', 10);','CI 使用redis','','publish','open','open','','ci-%e4%bd%bf%e7%94%a8redis','','','2015-08-05 18:10:20','2015-08-05 18:10:20','',0,'http://blog.raymond.com/?p=62',0,'post','',0),(63,1,'2015-08-05 18:10:20','2015-08-05 18:10:20','CI 框架使用 redis\r\n\r\n正常来说，CI框架3.0版本已经添加了对于缓存类 redis，menchached 。但是我装了个纯净版的木有，不明为何。。。。\r\n\r\n在CI中使用redis，首先当然是得有redis数据库和PHP的redis扩展\r\n\r\n接下来，配置文件保存在 application/config/redis.php 里面\r\n$config = array(\r\n\'default\' =&gt; array(\r\n// \'socket_type\'=&gt;\'tcp\',\r\n// \'socket\'=&gt;\'/var/run/redis.sock\',\r\n\'hostname\' =&gt; \'127.0.0.1\',\r\n\'port\' =&gt; \'6379\',\r\n\'weight\' =&gt; \'1\',\r\n\'timeout\' =&gt; 0\r\n),\r\n);\r\n\r\n然后，只要像下面这样，就能调用redis了\r\n$this-&gt;load-&gt;driver(\'cache\');\r\n$this-&gt;cache-&gt;redis-&gt;save(\'foo\', \'bar\', 10);','CI 使用redis','','inherit','open','open','','62-revision-v1','','','2015-08-05 18:10:20','2015-08-05 18:10:20','',62,'http://blog.raymond.com/?p=63',0,'revision','',0),(64,1,'2015-08-07 19:03:20','2015-08-07 19:03:20','Geohash算法；geohash是一种地址编码，它能把二维的经纬度编码成一维的字符串。\n\n优点:\n\n1、利用一个字段，即可存储经纬度；搜索时，只需一条索引，效率较高\n2、编码的前缀可以表示更大的区域，查找附近的，非常方便。 SQL中，LIKE ‘wm3yr3%’，即可查询附近的所有地点。\n3、通过编码精度可模糊坐标、隐私保护等。\n\n缺点: 距离和排序需二次运算（筛选结果中运行，其实挺快）\n\n1、geohash的编码算法\n\n成都永丰立交经纬度(30.63578,104.031601)\n\n1.1、纬度范围(-90, 90)平分成两个区间(-90, 0)、(0, 90)， 如果目标纬度位于前一个区间，则编码为0，否则编码为1。\n由于30.625265属于(0, 90)，所以取编码为1。\n然后再将(0, 90)分成 (0, 45), (45, 90)两个区间，而39.92324位于(0, 45)，所以编码为0，\n然后再将(0, 45)分成 (0, 22.5), (22.5, 45)两个区间，而39.92324位于(22.5, 45)，所以编码为1，\n依次类推可得永丰立交纬度编码为101010111001001000100101101010。\n1.2、经度也用同样的算法，对(-180, 180)依次细分，(-180，0)、(0,180) 得出编码110010011111101001100000000000\n1.3、合并经纬度编码，从高到低，先取一位经度，再取一位纬度；得出结果 111001001100011111101011100011000010110000010001010001000100\n1.4、用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码，得到(30.63578,104.031601)的编码为wm3yr31d2524。\n\n11100 10011 00011 11110 10111 00011 00001 01100 00010 00101 00010 00100 =&gt; wm3yr31d2524\n十进制 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\nbase32 0 1 2 3 4 5 6 7 8 9 b c d e f g\n十进制 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\nbase32 h j k m n p q r s t u v w x y z\n\n2、策略\n1、在纬度和经度入库时，数据库新加一字段geohash，记录此点的geohash值\n2、查找附近，利用 在SQL中 LIKE ‘wm3yr3%’；且此结果可缓存；在小区域内，不会因为改变经纬度，而重新数据库查询\n3、查找出的有限结果，如需要求距离或者排序，可利用距离公式和二维数据排序；此时也是少量数据，会很快的。\n\n3、PHP基类 geohash.class.php\n\n&nbsp;\n\n&lt;?php\n/**\n* Geohash generation class\n* http://blog.dixo.net/downloads/\n*\n* This file copyright (C) 2008 Paul Dixon (paul@elphin.com)\n*\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* as published by the Free Software Foundation; either version 3\n* of the License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this program; if not, write to the Free Software\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n*/\n\n/**\n* Encode and decode geohashes\n*\n*/\nclass Geohash\n{\nprivate $coding=\"0123456789bcdefghjkmnpqrstuvwxyz\";\nprivate $codingMap=array();\n\npublic function Geohash()\n{\n//build map from encoding char to 0 padded bitfield\nfor($i=0; $i&lt;32; $i++)\n{\n$this-&gt;codingMap[substr($this-&gt;coding,$i,1)]=str_pad(decbin($i), 5, \"0\", STR_PAD_LEFT);\n}\n\n}\n\n/**\n* Decode a geohash and return an array with decimal lat,long in it\n*/\npublic function decode($hash)\n{\n//decode hash into binary string\n$binary=\"\";\n$hl=strlen($hash);\nfor($i=0; $i&lt;$hl; $i++)\n{\n$binary.=$this-&gt;codingMap[substr($hash,$i,1)];\n}\n\n//split the binary into lat and log binary strings\n$bl=strlen($binary);\n$blat=\"\";\n$blong=\"\";\nfor ($i=0; $i&lt;$bl; $i++)\n{\nif ($i%2)\n$blat=$blat.substr($binary,$i,1);\nelse\n$blong=$blong.substr($binary,$i,1);\n\n}\n\n//now concert to decimal\n$lat=$this-&gt;binDecode($blat,-90,90);\n$long=$this-&gt;binDecode($blong,-180,180);\n\n//figure out how precise the bit count makes this calculation\n$latErr=$this-&gt;calcError(strlen($blat),-90,90);\n$longErr=$this-&gt;calcError(strlen($blong),-180,180);\n\n//how many decimal places should we use? There\'s a little art to\n//this to ensure I get the same roundings as geohash.org\n$latPlaces=max(1, -round(log10($latErr))) - 1;\n$longPlaces=max(1, -round(log10($longErr))) - 1;\n\n//round it\n$lat=round($lat, $latPlaces);\n$long=round($long, $longPlaces);\n\nreturn array($lat,$long);\n}\n/**\n* Encode a hash from given lat and long\n*/\npublic function encode($lat,$long)\n{\n//how many bits does latitude need?\n$plat=$this-&gt;precision($lat);\n$latbits=1;\n$err=45;\nwhile($err&gt;$plat)\n{\n$latbits++;\n$err/=2;\n}\n\n//how many bits does longitude need?\n$plong=$this-&gt;precision($long);\n$longbits=1;\n$err=90;\nwhile($err&gt;$plong)\n{\n$longbits++;\n$err/=2;\n}\n\n//bit counts need to be equal\n$bits=max($latbits,$longbits);\n\n//as the hash create bits in groups of 5, lets not\n//waste any bits - lets bulk it up to a multiple of 5\n//and favour the longitude for any odd bits\n$longbits=$bits;\n$latbits=$bits;\n$addlong=1;\nwhile (($longbits+$latbits)%5 != 0)\n{\n$longbits+=$addlong;\n$latbits+=!$addlong;\n$addlong=!$addlong;\n}\n\n\n//encode each as binary string\n$blat=$this-&gt;binEncode($lat,-90,90, $latbits);\n$blong=$this-&gt;binEncode($long,-180,180,$longbits);\n\n//merge lat and long together\n$binary=\"\";\n$uselong=1;\nwhile (strlen($blat)+strlen($blong))\n{\nif ($uselong)\n{\n$binary=$binary.substr($blong,0,1);\n$blong=substr($blong,1);\n}\nelse\n{\n$binary=$binary.substr($blat,0,1);\n$blat=substr($blat,1);\n}\n$uselong=!$uselong;\n}\n\n//convert binary string to hash\n$hash=\"\";\nfor ($i=0; $i&lt;strlen($binary); $i+=5)\n{\n$n=bindec(substr($binary,$i,5));\n$hash=$hash.$this-&gt;coding[$n];\n}\n\n\nreturn $hash;\n}\n\n/**\n* What\'s the maximum error for $bits bits covering a range $min to $max\n*/\nprivate function calcError($bits,$min,$max)\n{\n$err=($max-$min)/2;\nwhile ($bits--)\n$err/=2;\nreturn $err;\n}\n\n/*\n* returns precision of number\n* precision of 42 is 0.5\n* precision of 42.4 is 0.05\n* precision of 42.41 is 0.005 etc\n*/\nprivate function precision($number)\n{\n$precision=0;\n$pt=strpos($number,\'.\');\nif ($pt!==false)\n{\n$precision=-(strlen($number)-$pt-1);\n}\n\nreturn pow(10,$precision)/2;\n}\n\n\n/**\n* create binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\n* removing the tail recursion is left an exercise for the reader\n*/\nprivate function binEncode($number, $min, $max, $bitcount)\n{\nif ($bitcount==0)\nreturn \"\";\n\n#echo \"$bitcount: $min $max&lt;br&gt;\";\n\n//this is our mid point - we will produce a bit to say\n//whether $number is above or below this mid point\n$mid=($min+$max)/2;\nif ($number&gt;$mid)\nreturn \"1\".$this-&gt;binEncode($number, $mid, $max,$bitcount-1);\nelse\nreturn \"0\".$this-&gt;binEncode($number, $min, $mid,$bitcount-1);\n}\n\n/**\n* decodes binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\n* removing the tail recursion is left an exercise for the reader\n*/\nprivate function binDecode($binary, $min, $max)\n{\n$mid=($min+$max)/2;\n\nif (strlen($binary)==0)\nreturn $mid;\n\n$bit=substr($binary,0,1);\n$binary=substr($binary,1);\n\nif ($bit==1)\nreturn $this-&gt;binDecode($binary, $mid, $max);\nelse\nreturn $this-&gt;binDecode($binary, $min, $mid);\n}\n}\n?&gt;\n\n&nbsp;\n\n测试代码\n\n&lt;?php\n\nrequire_once(\'Mysql.class.php\');\nrequire_once(\'geohash.class.php\');\n\n//mysql\n$conf = array(\n\n\'host\' =&gt; \'127.0.0.1\',\n\'port\' =&gt; 3306,\n\'user\' =&gt; \'root\',\n\'password\' =&gt; \'123456\',\n\'database\' =&gt; \'mocube\',\n\'charset\' =&gt; \'utf8\',\n\'persistent\' =&gt; false\n);\n\n$mysql = new Db_Mysql($conf);\n$geohash=new Geohash;\n\n//经纬度转换成Geohash\n/*\n\n$sql = \'select shop_id,latitude,longitude from mb_shop_ext\';\n\n$data = $mysql-&gt;queryAll($sql);\n\nforeach($data as $val)\n{\n\n$geohash_val = $geohash-&gt;encode($val[\'latitude\'],$val[\'longitude\']);\n\n$sql = \'update mb_shop_ext set geohash= \"\'.$geohash_val.\'\" where shop_id = \'.$val[\'shop_id\'];\n\necho $sql;\n\n$re = $mysql-&gt;query($sql);\n\nvar_dump($re);\n\n}\n*/\n\n//获取附近的信息\n$n_latitude = $_GET[\'la\'];\n$n_longitude = $_GET[\'lo\'];\n\n//开始\n$b_time = microtime(true);\n\n//方案A，直接利用数据库存储函数，遍历排序\n/*\n$sql = \'SELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,\'.$n_latitude.\',\'.$n_longitude.\') AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC\';\n\n$data = $mysql-&gt;queryAll($sql);\n\n//结束\n$e_time = microtime(true);\n\necho $e_time - $b_time;\n\nvar_dump($data);\nexit;\n*/\n\n//方案B geohash求出附近，然后排序\n\n//当前 geohash值\n$n_geohash = $geohash-&gt;encode($n_latitude,$n_longitude);\n\n//附近\n$n = $_GET[\'n\'];\n$like_geohash = substr($n_geohash, 0, $n);\n\n$sql = \'select * from mb_shop_ext where geohash like \"\'.$like_geohash.\'%\"\';\n\necho $sql;\n\n$data = $mysql-&gt;queryAll($sql);\n\n//算出实际距离\nforeach($data as $key=&gt;$val)\n{\n$distance = getDistance($n_latitude,$n_longitude,$val[\'latitude\'],$val[\'longitude\']);\n\n$data[$key][\'distance\'] = $distance;\n\n//排序列\n$sortdistance[$key] = $distance;\n}\n\n//距离排序\narray_multisort($sortdistance,SORT_ASC,$data);\n\n//结束\n$e_time = microtime(true);\n\necho $e_time - $b_time;\n\nvar_dump($data);\n\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\nfunction getDistance($lat1,$lng1,$lat2,$lng2)\n{\n//地球半径\n$R = 6378137;\n\n//将角度转为狐度\n$radLat1 = deg2rad($lat1);\n$radLat2 = deg2rad($lat2);\n$radLng1 = deg2rad($lng1);\n$radLng2 = deg2rad($lng2);\n\n//结果\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\n\n//精度\n$s = round($s* 10000)/10000;\n\nreturn round($s);\n}\n\n?&gt;','利用Geohash算法获取LBS距离','','inherit','open','open','','51-autosave-v1','','','2015-08-07 19:03:20','2015-08-07 19:03:20','',51,'http://blog.raymond.com/?p=64',0,'revision','',0),(65,1,'2015-08-07 19:04:13','2015-08-07 19:04:13','Geohash算法；geohash是一种地址编码，它能把二维的经纬度编码成一维的字符串。\r\n\r\n优点:\r\n\r\n1、利用一个字段，即可存储经纬度；搜索时，只需一条索引，效率较高\r\n2、编码的前缀可以表示更大的区域，查找附近的，非常方便。 SQL中，LIKE ‘wm3yr3%’，即可查询附近的所有地点。\r\n3、通过编码精度可模糊坐标、隐私保护等。\r\n\r\n缺点: 距离和排序需二次运算（筛选结果中运行，其实挺快）\r\n\r\n1、geohash的编码算法\r\n\r\n成都永丰立交经纬度(30.63578,104.031601)\r\n\r\n1.1、纬度范围(-90, 90)平分成两个区间(-90, 0)、(0, 90)， 如果目标纬度位于前一个区间，则编码为0，否则编码为1。\r\n由于30.625265属于(0, 90)，所以取编码为1。\r\n然后再将(0, 90)分成 (0, 45), (45, 90)两个区间，而39.92324位于(0, 45)，所以编码为0，\r\n然后再将(0, 45)分成 (0, 22.5), (22.5, 45)两个区间，而39.92324位于(22.5, 45)，所以编码为1，\r\n依次类推可得永丰立交纬度编码为101010111001001000100101101010。\r\n1.2、经度也用同样的算法，对(-180, 180)依次细分，(-180，0)、(0,180) 得出编码110010011111101001100000000000\r\n1.3、合并经纬度编码，从高到低，先取一位经度，再取一位纬度；得出结果 111001001100011111101011100011000010110000010001010001000100\r\n1.4、用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码，得到(30.63578,104.031601)的编码为wm3yr31d2524。\r\n\r\n11100 10011 00011 11110 10111 00011 00001 01100 00010 00101 00010 00100 =&gt; wm3yr31d2524\r\n十进制 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\r\nbase32 0 1 2 3 4 5 6 7 8 9 b c d e f g\r\n十进制 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\r\nbase32 h j k m n p q r s t u v w x y z\r\n\r\n2、策略\r\n1、在纬度和经度入库时，数据库新加一字段geohash，记录此点的geohash值\r\n2、查找附近，利用 在SQL中 LIKE ‘wm3yr3%’；且此结果可缓存；在小区域内，不会因为改变经纬度，而重新数据库查询\r\n3、查找出的有限结果，如需要求距离或者排序，可利用距离公式和二维数据排序；此时也是少量数据，会很快的。\r\n\r\n3、PHP基类 geohash.class.php\r\n\r\n&nbsp;\r\n<p style=\"text-align: justify;\">&lt;?php\r\n/**\r\n* Geohash generation class\r\n* http://blog.dixo.net/downloads/\r\n*\r\n* This file copyright (C) 2008 Paul Dixon (paul@elphin.com)\r\n*\r\n* This program is free software; you can redistribute it and/or\r\n* modify it under the terms of the GNU General Public License\r\n* as published by the Free Software Foundation; either version 3\r\n* of the License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n* GNU General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU General Public License\r\n* along with this program; if not, write to the Free Software\r\n* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\r\n*/</p>\r\n/**\r\n* Encode and decode geohashes\r\n*\r\n*/\r\nclass Geohash\r\n{\r\nprivate $coding=\"0123456789bcdefghjkmnpqrstuvwxyz\";\r\nprivate $codingMap=array();\r\n\r\npublic function Geohash()\r\n{\r\n//build map from encoding char to 0 padded bitfield\r\nfor($i=0; $i&lt;32; $i++)\r\n{\r\n$this-&gt;codingMap[substr($this-&gt;coding,$i,1)]=str_pad(decbin($i), 5, \"0\", STR_PAD_LEFT);\r\n}\r\n\r\n}\r\n\r\n/**\r\n* Decode a geohash and return an array with decimal lat,long in it\r\n*/\r\npublic function decode($hash)\r\n{\r\n//decode hash into binary string\r\n$binary=\"\";\r\n$hl=strlen($hash);\r\nfor($i=0; $i&lt;$hl; $i++)\r\n{\r\n$binary.=$this-&gt;codingMap[substr($hash,$i,1)];\r\n}\r\n\r\n//split the binary into lat and log binary strings\r\n$bl=strlen($binary);\r\n$blat=\"\";\r\n$blong=\"\";\r\nfor ($i=0; $i&lt;$bl; $i++)\r\n{\r\nif ($i%2)\r\n$blat=$blat.substr($binary,$i,1);\r\nelse\r\n$blong=$blong.substr($binary,$i,1);\r\n\r\n}\r\n\r\n//now concert to decimal\r\n$lat=$this-&gt;binDecode($blat,-90,90);\r\n$long=$this-&gt;binDecode($blong,-180,180);\r\n\r\n//figure out how precise the bit count makes this calculation\r\n$latErr=$this-&gt;calcError(strlen($blat),-90,90);\r\n$longErr=$this-&gt;calcError(strlen($blong),-180,180);\r\n\r\n//how many decimal places should we use? There\'s a little art to\r\n//this to ensure I get the same roundings as geohash.org\r\n$latPlaces=max(1, -round(log10($latErr))) - 1;\r\n$longPlaces=max(1, -round(log10($longErr))) - 1;\r\n\r\n//round it\r\n$lat=round($lat, $latPlaces);\r\n$long=round($long, $longPlaces);\r\n\r\nreturn array($lat,$long);\r\n}\r\n/**\r\n* Encode a hash from given lat and long\r\n*/\r\npublic function encode($lat,$long)\r\n{\r\n//how many bits does latitude need?\r\n$plat=$this-&gt;precision($lat);\r\n$latbits=1;\r\n$err=45;\r\nwhile($err&gt;$plat)\r\n{\r\n$latbits++;\r\n$err/=2;\r\n}\r\n\r\n//how many bits does longitude need?\r\n$plong=$this-&gt;precision($long);\r\n$longbits=1;\r\n$err=90;\r\nwhile($err&gt;$plong)\r\n{\r\n$longbits++;\r\n$err/=2;\r\n}\r\n\r\n//bit counts need to be equal\r\n$bits=max($latbits,$longbits);\r\n\r\n//as the hash create bits in groups of 5, lets not\r\n//waste any bits - lets bulk it up to a multiple of 5\r\n//and favour the longitude for any odd bits\r\n$longbits=$bits;\r\n$latbits=$bits;\r\n$addlong=1;\r\nwhile (($longbits+$latbits)%5 != 0)\r\n{\r\n$longbits+=$addlong;\r\n$latbits+=!$addlong;\r\n$addlong=!$addlong;\r\n}\r\n\r\n//encode each as binary string\r\n$blat=$this-&gt;binEncode($lat,-90,90, $latbits);\r\n$blong=$this-&gt;binEncode($long,-180,180,$longbits);\r\n\r\n//merge lat and long together\r\n$binary=\"\";\r\n$uselong=1;\r\nwhile (strlen($blat)+strlen($blong))\r\n{\r\nif ($uselong)\r\n{\r\n$binary=$binary.substr($blong,0,1);\r\n$blong=substr($blong,1);\r\n}\r\nelse\r\n{\r\n$binary=$binary.substr($blat,0,1);\r\n$blat=substr($blat,1);\r\n}\r\n$uselong=!$uselong;\r\n}\r\n\r\n//convert binary string to hash\r\n$hash=\"\";\r\nfor ($i=0; $i&lt;strlen($binary); $i+=5)\r\n{\r\n$n=bindec(substr($binary,$i,5));\r\n$hash=$hash.$this-&gt;coding[$n];\r\n}\r\n\r\nreturn $hash;\r\n}\r\n\r\n/**\r\n* What\'s the maximum error for $bits bits covering a range $min to $max\r\n*/\r\nprivate function calcError($bits,$min,$max)\r\n{\r\n$err=($max-$min)/2;\r\nwhile ($bits--)\r\n$err/=2;\r\nreturn $err;\r\n}\r\n\r\n/*\r\n* returns precision of number\r\n* precision of 42 is 0.5\r\n* precision of 42.4 is 0.05\r\n* precision of 42.41 is 0.005 etc\r\n*/\r\nprivate function precision($number)\r\n{\r\n$precision=0;\r\n$pt=strpos($number,\'.\');\r\nif ($pt!==false)\r\n{\r\n$precision=-(strlen($number)-$pt-1);\r\n}\r\n\r\nreturn pow(10,$precision)/2;\r\n}\r\n\r\n/**\r\n* create binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\r\n* removing the tail recursion is left an exercise for the reader\r\n*/\r\nprivate function binEncode($number, $min, $max, $bitcount)\r\n{\r\nif ($bitcount==0)\r\nreturn \"\";\r\n\r\n#echo \"$bitcount: $min $max&lt;br&gt;\";\r\n\r\n//this is our mid point - we will produce a bit to say\r\n//whether $number is above or below this mid point\r\n$mid=($min+$max)/2;\r\nif ($number&gt;$mid)\r\nreturn \"1\".$this-&gt;binEncode($number, $mid, $max,$bitcount-1);\r\nelse\r\nreturn \"0\".$this-&gt;binEncode($number, $min, $mid,$bitcount-1);\r\n}\r\n\r\n/**\r\n* decodes binary encoding of number as detailed in http://en.wikipedia.org/wiki/Geohash#Example\r\n* removing the tail recursion is left an exercise for the reader\r\n*/\r\nprivate function binDecode($binary, $min, $max)\r\n{\r\n$mid=($min+$max)/2;\r\n\r\nif (strlen($binary)==0)\r\nreturn $mid;\r\n\r\n$bit=substr($binary,0,1);\r\n$binary=substr($binary,1);\r\n\r\nif ($bit==1)\r\nreturn $this-&gt;binDecode($binary, $mid, $max);\r\nelse\r\nreturn $this-&gt;binDecode($binary, $min, $mid);\r\n}\r\n}\r\n?&gt;\r\n\r\n&nbsp;\r\n\r\n测试代码\r\n\r\n&lt;?php\r\n\r\nrequire_once(\'Mysql.class.php\');\r\nrequire_once(\'geohash.class.php\');\r\n\r\n//mysql\r\n$conf = array(\r\n\r\n\'host\' =&gt; \'127.0.0.1\',\r\n\'port\' =&gt; 3306,\r\n\'user\' =&gt; \'root\',\r\n\'password\' =&gt; \'123456\',\r\n\'database\' =&gt; \'mocube\',\r\n\'charset\' =&gt; \'utf8\',\r\n\'persistent\' =&gt; false\r\n);\r\n\r\n$mysql = new Db_Mysql($conf);\r\n$geohash=new Geohash;\r\n\r\n//经纬度转换成Geohash\r\n/*\r\n\r\n$sql = \'select shop_id,latitude,longitude from mb_shop_ext\';\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\nforeach($data as $val)\r\n{\r\n\r\n$geohash_val = $geohash-&gt;encode($val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$sql = \'update mb_shop_ext set geohash= \"\'.$geohash_val.\'\" where shop_id = \'.$val[\'shop_id\'];\r\n\r\necho $sql;\r\n\r\n$re = $mysql-&gt;query($sql);\r\n\r\nvar_dump($re);\r\n\r\n}\r\n*/\r\n\r\n//获取附近的信息\r\n$n_latitude = $_GET[\'la\'];\r\n$n_longitude = $_GET[\'lo\'];\r\n\r\n//开始\r\n$b_time = microtime(true);\r\n\r\n//方案A，直接利用数据库存储函数，遍历排序\r\n/*\r\n$sql = \'SELECT *,latitude,longitude,GETDISTANCE(latitude,longitude,\'.$n_latitude.\',\'.$n_longitude.\') AS distance FROM mb_shop_ext where 1 HAVING distance&lt;1000 ORDER BY distance ASC\';\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\nexit;\r\n*/\r\n\r\n//方案B geohash求出附近，然后排序\r\n\r\n//当前 geohash值\r\n$n_geohash = $geohash-&gt;encode($n_latitude,$n_longitude);\r\n\r\n//附近\r\n$n = $_GET[\'n\'];\r\n$like_geohash = substr($n_geohash, 0, $n);\r\n\r\n$sql = \'select * from mb_shop_ext where geohash like \"\'.$like_geohash.\'%\"\';\r\n\r\necho $sql;\r\n\r\n$data = $mysql-&gt;queryAll($sql);\r\n\r\n//算出实际距离\r\nforeach($data as $key=&gt;$val)\r\n{\r\n$distance = getDistance($n_latitude,$n_longitude,$val[\'latitude\'],$val[\'longitude\']);\r\n\r\n$data[$key][\'distance\'] = $distance;\r\n\r\n//排序列\r\n$sortdistance[$key] = $distance;\r\n}\r\n\r\n//距离排序\r\narray_multisort($sortdistance,SORT_ASC,$data);\r\n\r\n//结束\r\n$e_time = microtime(true);\r\n\r\necho $e_time - $b_time;\r\n\r\nvar_dump($data);\r\n\r\n//根据经纬度计算距离 其中A($lat1,$lng1)、B($lat2,$lng2)\r\nfunction getDistance($lat1,$lng1,$lat2,$lng2)\r\n{\r\n//地球半径\r\n$R = 6378137;\r\n\r\n//将角度转为狐度\r\n$radLat1 = deg2rad($lat1);\r\n$radLat2 = deg2rad($lat2);\r\n$radLng1 = deg2rad($lng1);\r\n$radLng2 = deg2rad($lng2);\r\n\r\n//结果\r\n$s = acos(cos($radLat1)*cos($radLat2)*cos($radLng1-$radLng2)+sin($radLat1)*sin($radLat2))*$R;\r\n\r\n//精度\r\n$s = round($s* 10000)/10000;\r\n\r\nreturn round($s);\r\n}\r\n\r\n?&gt;','利用Geohash算法获取LBS距离','','inherit','open','open','','51-revision-v1','','','2015-08-07 19:04:13','2015-08-07 19:04:13','',51,'http://blog.raymond.com/?p=65',0,'revision','',0),(66,1,'2015-08-10 10:44:43','2015-08-10 10:44:43','1.删除PHP\r\n\r\n找到PHP源码的位置，直接删除源码文件夹就可以了\r\n<pre>whereis php   查看安装路径</pre>\r\n<pre>which php  查看运行文件夹地址</pre>\r\n也直接apt快捷删除\r\n<pre>sudo apt-get remove –purge libapache2-mod-php5 php5 php5-gd php5-mysql</pre>\r\n<pre>sudo apt-get autoremove php5</pre>\r\n<div></div>\r\n<div>删除关联</div>\r\n<pre>sudo find /etc -name \"*php*\" |xargs  rm -rf</pre>\r\n<div></div>\r\n<div>清楚残留信息</div>\r\n<pre>dpkg -l |grep ^rc|awk \'{print $2}\' |sudo xargs dpkg -P</pre>\r\n<div>最后用 dpkg -l | grep php 和dpkg -l | grep php5 检查，如无返回即干净卸载</div>\r\n<div></div>\r\n<div>2.正常安装php</div>\r\n<div></div>','ubuntu重新安装php','','publish','open','open','','ubuntu%e9%87%8d%e6%96%b0%e5%ae%89%e8%a3%85php','','','2015-08-11 09:37:50','2015-08-11 09:37:50','',0,'http://blog.raymond.com/?p=66',0,'post','',0),(67,1,'2015-08-10 10:44:43','2015-08-10 10:44:43','1.删除PHP\r\n\r\n找到PHP源码的位置，直接删除源码文件夹就可以了\r\n<pre>whereis php   查看安装路径</pre>\r\n<pre>which php  查看运行文件夹地址</pre>\r\n也直接apt快捷删除\r\n<pre>sudo apt-get –purge remove libapache2-mod-php5 php5 php5-gd php5-mysql</pre>\r\n<pre>sudo apt-get autoremove php5</pre>\r\n<div></div>\r\n<div>删除关联</div>\r\n<pre>sudo find /etc -name \"*php*\" |xargs  rm -rf</pre>\r\n<div></div>\r\n<div>清楚残留信息</div>\r\n<pre>dpkg -l |grep ^rc|awk ’{print $2}’ |sudo xargs dpkg -P</pre>\r\n<div></div>\r\n<div>最后用 dpkg -l | grep php 和dpkg -l | grep php5 检查，如无返回即干净卸载</div>','ubuntu重新安装php','','inherit','open','open','','66-revision-v1','','','2015-08-10 10:44:43','2015-08-10 10:44:43','',66,'http://blog.raymond.com/?p=67',0,'revision','',0),(68,1,'2015-08-11 09:36:04','2015-08-11 09:36:04','1.删除PHP\n\n找到PHP源码的位置，直接删除源码文件夹就可以了\n<pre>whereis php   查看安装路径</pre>\n<pre>which php  查看运行文件夹地址</pre>\n也直接apt快捷删除\n<pre>sudo apt-get remove –purge libapache2-mod-php5 php5 php5-gd php5-mysql</pre>\n<pre>sudo apt-get autoremove php5</pre>\n<div></div>\n<div>删除关联</div>\n<pre>sudo find /etc -name \"*php*\" |xargs  rm -rf</pre>\n<div></div>\n<div>清楚残留信息</div>\n<pre>dpkg -l |grep ^rc|awk \'{print $2}\' |sudo xargs dpkg -P</pre>\n<div>最后用 dpkg -l | grep php 和dpkg -l | grep php5 检查，如无返回即干净卸载</div>\n<div></div>\n<div>2.正常安装php</div>\n<div></div>','ubuntu重新安装php','','inherit','open','open','','66-autosave-v1','','','2015-08-11 09:36:04','2015-08-11 09:36:04','',66,'http://blog.raymond.com/?p=68',0,'revision','',0),(69,1,'2015-08-10 10:53:10','2015-08-10 10:53:10','1.删除PHP\r\n\r\n找到PHP源码的位置，直接删除源码文件夹就可以了\r\n<pre>whereis php   查看安装路径</pre>\r\n<pre>which php  查看运行文件夹地址</pre>\r\n也直接apt快捷删除\r\n<pre>sudo apt-get –purge remove libapache2-mod-php5 php5 php5-gd php5-mysql</pre>\r\n<pre>sudo apt-get autoremove php5</pre>\r\n<div></div>\r\n<div>删除关联</div>\r\n<pre>sudo find /etc -name \"*php*\" |xargs  rm -rf</pre>\r\n<div></div>\r\n<div>清楚残留信息</div>\r\n<pre>dpkg -l |grep ^rc|awk ’{print $2}’ |sudo xargs dpkg -P</pre>\r\n<div>最后用 dpkg -l | grep php 和dpkg -l | grep php5 检查，如无返回即干净卸载</div>\r\n<div></div>\r\n<div>2.正常安装php</div>\r\n<div></div>','ubuntu重新安装php','','inherit','open','open','','66-revision-v1','','','2015-08-10 10:53:10','2015-08-10 10:53:10','',66,'http://blog.raymond.com/?p=69',0,'revision','',0),(70,1,'2015-08-11 09:37:50','2015-08-11 09:37:50','1.删除PHP\r\n\r\n找到PHP源码的位置，直接删除源码文件夹就可以了\r\n<pre>whereis php   查看安装路径</pre>\r\n<pre>which php  查看运行文件夹地址</pre>\r\n也直接apt快捷删除\r\n<pre>sudo apt-get remove –purge libapache2-mod-php5 php5 php5-gd php5-mysql</pre>\r\n<pre>sudo apt-get autoremove php5</pre>\r\n<div></div>\r\n<div>删除关联</div>\r\n<pre>sudo find /etc -name \"*php*\" |xargs  rm -rf</pre>\r\n<div></div>\r\n<div>清楚残留信息</div>\r\n<pre>dpkg -l |grep ^rc|awk \'{print $2}\' |sudo xargs dpkg -P</pre>\r\n<div>最后用 dpkg -l | grep php 和dpkg -l | grep php5 检查，如无返回即干净卸载</div>\r\n<div></div>\r\n<div>2.正常安装php</div>\r\n<div></div>','ubuntu重新安装php','','inherit','open','open','','66-revision-v1','','','2015-08-11 09:37:50','2015-08-11 09:37:50','',66,'http://blog.raymond.com/?p=70',0,'revision','',0),(71,1,'2015-08-11 11:27:18','2015-08-11 11:27:18','<pre>lorcon@lorcon:~$ wget http://www.xdebug.org/files/xdebug-2.2.5.tgz\r\nlorcon@lorcon:~$ tar -zxf xdebug-2.2.5.tgz\r\nlorcon@lorcon:~$ cd xdebug-2.2.5/\r\nlorcon@lorcon:~/xdebug-2.2.5$ /usr/local/php/bin/phpize\r\nConfiguring for:\r\nPHP Api Version: 20121113\r\nZend Module Api No: 20121212\r\nZend Extension Api No: 220121212</pre>\r\n安装扩展需要用到 phpize ，如果没有这个模块的话，用apt-get install php5-dev先安装模块\r\n\r\n如果出现错误：\r\nCannot find config.m4.\r\nMake sure that you run \'/usr/bin/phpize\' in the top level source directory of the module\r\n那是目录不对，phpize命令一定要使用在php的模块文件夹主目录下，因为该命令要根据模块生成模块的配置文件放在模块文件夹下面。\r\n<pre>lorcon@lorcon:~/xdebug-2.2.5$ ./configure --enable-xdebug --with-php-config=/usr/bin/php-config\r\nlorcon@lorcon:~/xdebug-2.2.5$ sudo make\r\nlorcon@lorcon:~/xdebug-2.2.5$ sudo make install</pre>\r\n成功后会有如下提示，表示xdebug模块已经安装成功了\r\nInstalling shared extensions: /usr/lib/php5/20121212/\r\n\r\n+----------------------------------------------------------------------+\r\n| |\r\n| INSTALLATION INSTRUCTIONS |\r\n| ========================= |\r\n| |\r\n| See http://xdebug.org/install.php#configure-php for instructions |\r\n| on how to enable Xdebug for PHP. |\r\n| |\r\n| Documentation is available online as well: |\r\n| - A list of all settings: http://xdebug.org/docs-settings.php |\r\n| - A list of all functions: http://xdebug.org/docs-functions.php |\r\n| - Profiling instructions: http://xdebug.org/docs-profiling2.php |\r\n| - Remote debugging: http://xdebug.org/docs-debugger.php |\r\n| |\r\n| |\r\n| NOTE: Please disregard the message |\r\n| You should add \"extension=xdebug.so\" to php.ini |\r\n| that is emitted by the PECL installer. This does not work for |\r\n| Xdebug. |\r\n| |\r\n+----------------------------------------------------------------------+\r\n\r\n&nbsp;\r\n\r\n接下来还需要我们对php.ini配置文件就行一些修改\r\n添加以下配置选项，更多配置选项请自己借助查看官方说明\r\n<pre>\r\n[Xdebug]\r\nzend_extension = /usr/lib/php5/20121212/xdebug.so\r\nxdebug.auto_trace = on\r\nxdebug.default_enable = on\r\nxdebug.auto_profile = on\r\nxdebug.collect_params = on\r\nxdebug.collect_return = on\r\nxdebug.profiler_enable = on\r\nxdebug.remote_host = localhost\r\nxdebug.remote_port = 9000\r\nxdebug.remote_handler = dbgp\r\nxdebug.trace_output_dir = \"/home/lorcon/share/phpxdebugoutput\"\r\nxdebug.profiler_output_dir = \"/home/lorcon/share/phpxdebugoutput\"</pre>\r\n<pre>\r\n//重启php模块\r\nphpha@asus:~$ sudo service php5-fpm restart</pre>\r\n&nbsp;','ubuntu扩展xdebug','','publish','open','open','','ubuntu%e6%89%a9%e5%b1%95xdebug','','','2015-08-11 11:27:18','2015-08-11 11:27:18','',0,'http://blog.raymond.com/?p=71',0,'post','',0),(72,1,'2015-08-11 11:27:18','2015-08-11 11:27:18','<pre>lorcon@lorcon:~$ wget http://www.xdebug.org/files/xdebug-2.2.5.tgz\r\nlorcon@lorcon:~$ tar -zxf xdebug-2.2.5.tgz\r\nlorcon@lorcon:~$ cd xdebug-2.2.5/\r\nlorcon@lorcon:~/xdebug-2.2.5$ /usr/local/php/bin/phpize\r\nConfiguring for:\r\nPHP Api Version: 20121113\r\nZend Module Api No: 20121212\r\nZend Extension Api No: 220121212</pre>\r\n安装扩展需要用到 phpize ，如果没有这个模块的话，用apt-get install php5-dev先安装模块\r\n\r\n如果出现错误：\r\nCannot find config.m4.\r\nMake sure that you run \'/usr/bin/phpize\' in the top level source directory of the module\r\n那是目录不对，phpize命令一定要使用在php的模块文件夹主目录下，因为该命令要根据模块生成模块的配置文件放在模块文件夹下面。\r\n<pre>lorcon@lorcon:~/xdebug-2.2.5$ ./configure --enable-xdebug --with-php-config=/usr/bin/php-config\r\nlorcon@lorcon:~/xdebug-2.2.5$ sudo make\r\nlorcon@lorcon:~/xdebug-2.2.5$ sudo make install</pre>\r\n成功后会有如下提示，表示xdebug模块已经安装成功了\r\nInstalling shared extensions: /usr/lib/php5/20121212/\r\n\r\n+----------------------------------------------------------------------+\r\n| |\r\n| INSTALLATION INSTRUCTIONS |\r\n| ========================= |\r\n| |\r\n| See http://xdebug.org/install.php#configure-php for instructions |\r\n| on how to enable Xdebug for PHP. |\r\n| |\r\n| Documentation is available online as well: |\r\n| - A list of all settings: http://xdebug.org/docs-settings.php |\r\n| - A list of all functions: http://xdebug.org/docs-functions.php |\r\n| - Profiling instructions: http://xdebug.org/docs-profiling2.php |\r\n| - Remote debugging: http://xdebug.org/docs-debugger.php |\r\n| |\r\n| |\r\n| NOTE: Please disregard the message |\r\n| You should add \"extension=xdebug.so\" to php.ini |\r\n| that is emitted by the PECL installer. This does not work for |\r\n| Xdebug. |\r\n| |\r\n+----------------------------------------------------------------------+\r\n\r\n&nbsp;\r\n\r\n接下来还需要我们对php.ini配置文件就行一些修改\r\n添加以下配置选项，更多配置选项请自己借助查看官方说明\r\n<pre>\r\n[Xdebug]\r\nzend_extension = /usr/lib/php5/20121212/xdebug.so\r\nxdebug.auto_trace = on\r\nxdebug.default_enable = on\r\nxdebug.auto_profile = on\r\nxdebug.collect_params = on\r\nxdebug.collect_return = on\r\nxdebug.profiler_enable = on\r\nxdebug.remote_host = localhost\r\nxdebug.remote_port = 9000\r\nxdebug.remote_handler = dbgp\r\nxdebug.trace_output_dir = \"/home/lorcon/share/phpxdebugoutput\"\r\nxdebug.profiler_output_dir = \"/home/lorcon/share/phpxdebugoutput\"</pre>\r\n<pre>\r\n//重启php模块\r\nphpha@asus:~$ sudo service php5-fpm restart</pre>\r\n&nbsp;','ubuntu扩展xdebug','','inherit','open','open','','71-revision-v1','','','2015-08-11 11:27:18','2015-08-11 11:27:18','',71,'http://blog.raymond.com/?p=72',0,'revision','',0),(76,1,'2015-08-13 12:16:34','2015-08-13 12:16:34','sudo yum install git\r\n\r\n&nbsp;\r\n\r\n&nbsp;','centos配置git ssh','','publish','open','open','','centos%e9%85%8d%e7%bd%aegit-ssh','','','2015-08-16 13:16:17','2015-08-16 13:16:17','',0,'http://blog.raymond.com/?p=76',0,'post','',0),(77,1,'2015-08-13 12:16:34','2015-08-13 12:16:34','sudo yum install git\r\n\r\n&nbsp;\r\n\r\n&nbsp;','centos配置git shh','','inherit','open','open','','76-revision-v1','','','2015-08-13 12:16:34','2015-08-13 12:16:34','',76,'http://blog.raymond.com/?p=77',0,'revision','',0),(78,1,'2015-08-16 13:16:17','2015-08-16 13:16:17','sudo yum install git\r\n\r\n&nbsp;\r\n\r\n&nbsp;','centos配置git ssh','','inherit','open','open','','76-revision-v1','','','2015-08-16 13:16:17','2015-08-16 13:16:17','',76,'http://blog.raymond.com/?p=78',0,'revision','',0),(79,1,'2015-08-27 09:39:43','2015-08-27 09:39:43','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>会保存表行数</td>\r\n<td>不保存表行数</td>\r\n</tr>\r\n<tr>\r\n<td>select 操作</td>\r\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次\r\n1）MYISAM只缓存索引块\r\n2）MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快</td>\r\n<td>innodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\r\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\r\n1）INNODB要缓存数据块\r\n2）innodb寻址要映射到块，再到行\r\n3）INNODB还需要维护MVCC一致，每一次查询需要去检查和维护</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n&nbsp;\r\n\r\nInnoDB 实现 mvvc\r\n\r\ninnodb会为每一行添加两个字段，分别表示该行<strong>创建的版本</strong>和<strong>删除的版本</strong>，填入的是事务的版本号，这个版本号随着事务的创建不断递增。在repeated read的隔离级别（<a href=\"http://blog.csdn.net/chosen0ne/article/details/10036775\" target=\"_blank\">事务的隔离级别请看这篇文章</a>）下，具体各种数据库操作的实现：\r\n\r\nselect：满足以下两个条件innodb会返回该行数据：（1）该行的创建版本号小于等于当前版本号，用于保证在select操作之前所有的操作已经执行落地。（2）该行的删除版本号大于当前版本或者为空。删除版本号大于当前版本意味着有一个并发事务将该行删除了。\r\n\r\ninsert：将新插入的行的创建版本号设置为当前系统的版本号。\r\n\r\ndelete：将要删除的行的删除版本号设置为当前系统的版本号。\r\n\r\nupdate：不执行原地update，而是转换成insert + delete。将旧行的删除版本号设置为当前版本号，并将新行insert同时设置创建版本号为当前版本号。\r\n\r\n其中，写操作（insert、delete和update）执行时，需要将系统版本号递增。\r\n\r\n由于旧数据并不真正的删除，所以必须对这些数据进行清理，innodb会开启一个后台线程执行清理工作，具体的规则是将删除版本号小于当前系统版本的行删除，这个过程叫做purge。\r\n\r\n通过MVCC很好的实现了事务的隔离性，可以达到repeated read级别，要实现serializable还必须加锁。','MyISM和InnoDB','','publish','open','open','','myism%e5%92%8cinnodb','','','2015-09-01 11:00:53','2015-09-01 11:00:53','',0,'http://blog.raymond.com/?p=79',0,'post','',0),(80,1,'2015-08-27 09:39:43','2015-08-27 09:39:43','简单来说，MYISAM','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-08-27 09:39:43','2015-08-27 09:39:43','',79,'http://blog.raymond.com/?p=80',0,'revision','',0),(81,1,'2015-08-31 07:06:30','2015-08-31 07:06:30','获取文件夹下所有文件scandir($dir)\r\n\r\n判断是否文件夹is_dir($dir)\r\n\r\n打开文件夹opendir($dir)\r\n\r\n获取文件名称 <span class=\"pln\"> basename</span><span class=\"pun\">($file</span><span class=\"pun\">)</span>\r\n\r\n获取文件扩展名称pathinfo($file, PATHINFO_EXTENSION)\r\n\r\n&nbsp;\r\n\r\n写的一个遍历获取文件夹下所有csv结尾文件的函数\r\n\r\nfunction get_file_from_dir($folder,$dir = \"\"){\r\n$folder_dir = $dir.$folder;\r\n$files = scandir($folder_dir);\r\nforeach($files as $file){\r\n$file_path = $folder_dir.\"/\".$file;\r\nif(is_dir($file_path)){\r\nif($file==\".\" || $file==\"..\"){\r\ncontinue;\r\n}else{\r\n//echo \"---------------$file_path is dir--------------------\\n\";\r\necho get_file_from_dir($file,$folder_dir.\"/\");\r\n}\r\n}else{\r\nif(pathinfo($file_path, PATHINFO_EXTENSION)==\"csv\"){\r\necho $file_path.\"\\n\";\r\n}\r\n}\r\n}\r\n}','PHP文件操作','','publish','open','open','','php%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c','','','2015-08-31 08:33:53','2015-08-31 08:33:53','',0,'http://blog.raymond.com/?p=81',0,'post','',0),(82,1,'2015-08-31 07:06:30','2015-08-31 07:06:30','获取文件夹下所有文件scandir($dir)\r\n\r\n判断是否文件夹is_dir($dir)\r\n\r\n打开文件夹opendir($dir)\r\n\r\n获取文件名称 <span class=\"pln\"> basename</span><span class=\"pun\">($file</span><span class=\"pun\">)</span>\r\n\r\n获取文件扩展名称pathinfo($file, PATHINFO_EXTENSION)\r\n\r\n&nbsp;\r\n\r\n写的一个遍历获取文件夹下所有csv结尾文件的函数\r\n\r\nfunction get_file_from_dir($folder,$dir = \"\"){\r\n$folder_dir = $dir.$folder;\r\n$files = scandir($folder_dir);\r\nforeach($files as $file){\r\n$file_path = $folder_dir.\"/\".$file;\r\nif(is_dir($file_path)){\r\nif($file==\".\" || $file==\"..\"){\r\ncontinue;\r\n}else{\r\n//echo \"---------------$file_path is dir--------------------\\n\";\r\necho get_file_from_dir($file,$folder_dir.\"/\");\r\n}\r\n}else{\r\nif(pathinfo($file_path, PATHINFO_EXTENSION)==\"csv\"){\r\necho $file_path.\"\\n\";\r\n}\r\n}\r\n}\r\n}','PHP文件操作','','inherit','open','open','','81-revision-v1','','','2015-08-31 07:06:30','2015-08-31 07:06:30','',81,'http://blog.raymond.com/?p=82',0,'revision','',0),(83,1,'2015-09-01 07:00:29','2015-09-01 07:00:29','Analytics.js 是一个要加到Website的代码，能够弹性地集成开发。\r\n实际上谷歌分析有一个更完整的代码库叫 ga.js。\r\n\r\nAnalytics.js使用方法也很简单：\r\n<pre>&lt;!-- Google Analytics --&gt;\r\n&lt;script&gt;\r\n(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\r\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');ga(\'create\', \'UA-XXXX-Y\', \'auto\');\r\nga(\'send\', \'pageview\');&lt;/script&gt;\r\n&lt;!-- End Google Analytics --&gt;</pre>\r\n把代码里面的 UA-XXXX-Y 修改成在 Google Analytics 生成用以追踪的Property ID\r\n这样的话，可以统计到impression数据，如果想要追踪更多的数据，需要自定义添加参数\r\n\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/','Google Analytics','','publish','open','open','','google-analytics','','','2015-09-01 07:00:29','2015-09-01 07:00:29','',0,'http://blog.raymond.com/?p=83',0,'post','',0),(84,1,'2015-09-01 07:00:29','2015-09-01 07:00:29','Analytics.js 是一个要加到Website的代码，能够弹性地集成开发。\r\n实际上谷歌分析有一个更完整的代码库叫 ga.js。\r\n\r\nAnalytics.js使用方法也很简单：\r\n<pre>&lt;!-- Google Analytics --&gt;\r\n&lt;script&gt;\r\n(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\r\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');ga(\'create\', \'UA-XXXX-Y\', \'auto\');\r\nga(\'send\', \'pageview\');&lt;/script&gt;\r\n&lt;!-- End Google Analytics --&gt;</pre>\r\n把代码里面的 UA-XXXX-Y 修改成在 Google Analytics 生成用以追踪的Property ID\r\n这样的话，可以统计到impression数据，如果想要追踪更多的数据，需要自定义添加参数\r\n\r\nhttps://developers.google.com/analytics/devguides/collection/analyticsjs/','Google Analytics','','inherit','open','open','','83-revision-v1','','','2015-09-01 07:00:29','2015-09-01 07:00:29','',83,'http://blog.raymond.com/?p=84',0,'revision','',0),(85,1,'2015-09-01 11:00:25','2015-09-01 11:00:25','<table>\n<tbody>\n<tr>\n<td></td>\n<td style=\"text-align: center;\">Myisam</td>\n<td style=\"text-align: center;\">InnoDB</td>\n</tr>\n<tr>\n<td>事务</td>\n<td>不支持事务，但是执行速度更快，性能更好</td>\n<td>支持事务功能，外部键等高级数据库功能</td>\n</tr>\n<tr>\n<td>构成</td>\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。</td>\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\n</tr>\n<tr>\n<td>SELECT UPDATE,INSERT，Delete操作</td>\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\n</tr>\n<tr>\n<td>AUTO_INCREMENT</td>\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引更好和更快的auto_increment处理</td>\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\n</tr>\n<tr>\n<td>锁</td>\n<td>表锁</td>\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\n</tr>\n<tr>\n<td>表的具体行数</td>\n<td>会保存表行数</td>\n<td>不保存表行数</td>\n</tr>\n<tr>\n<td>select 操作</td>\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次\n1）MYISAM只缓存索引块\n2）MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快</td>\n<td>innodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\n1）INNODB要缓存数据块\n2）innodb寻址要映射到块，再到行\n3）INNODB还需要维护MVCC一致，每一次查询需要去检查和维护</td>\n</tr>\n</tbody>\n</table>\n&nbsp;\n\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\n\nMyIASM是IASM表的新版本，有如下扩展：\n<ul>\n	<li>二进制层次的可移植性。</li>\n	<li>NULL列索引。</li>\n	<li>对变长行比ISAM表有更少的碎片。</li>\n	<li>支持大文件。</li>\n	<li>更好的索引压缩。</li>\n	<li>更好的键吗统计分布。</li>\n	<li>更好和更快的auto_increment处理。</li>\n</ul>\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\n\n&nbsp;\n\n以下是一些细节和具体实现的差别：\n<ol>\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\n</ol>\n&nbsp;','MyISM和InnoDB','','inherit','open','open','','79-autosave-v1','','','2015-09-01 11:00:25','2015-09-01 11:00:25','',79,'http://blog.raymond.com/?p=85',0,'revision','',0),(86,1,'2015-09-01 09:59:41','2015-09-01 09:59:41','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。\r\n\r\n.frm文件存储表定义。\r\n\r\n数据文件的扩展名为.MYD (MYData)。\r\n\r\n索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表\r\n\r\n2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。\r\n\r\n3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。\r\n\r\nAUTO_INCREMENT值可用ALTER TABLE或myisamch来重置\r\n\r\n对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引\r\n\r\n更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。\r\n\r\n自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，提供与 Oracle 类型一致的不加锁读取(non-locking read in\r\nSELECTs)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>select count(*) from table,MyISAM只要简单的读出保存好的行数，注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的</td>\r\n<td>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行</td>\r\n</tr>\r\n</tbody>\r\n</table>','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 09:59:41','2015-09-01 09:59:41','',79,'http://blog.raymond.com/?p=86',0,'revision','',0),(87,1,'2015-09-01 10:13:25','2015-09-01 10:13:25','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。\r\n\r\n数据文件的扩展名为.MYD (MYData)。\r\n\r\n索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。\r\n\r\n3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置\r\n\r\n对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引\r\n\r\n更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，提供与 Oracle 类型一致的不加锁读取(non-locking read in\r\nSELECTs)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>select count(*) from table,MyISAM只要简单的读出保存好的行数，注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的</td>\r\n<td>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n综上所述，任何一种表都不是万能的，只有恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 10:13:25','2015-09-01 10:13:25','',79,'http://blog.raymond.com/?p=87',0,'revision','',0),(89,1,'2015-09-01 10:28:40','2015-09-01 10:28:40','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。\r\n\r\n索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引\r\n\r\n更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>会保存表行数</td>\r\n<td>不保存表行数</td>\r\n</tr>\r\n<tr>\r\n<td>select 操作</td>\r\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次\r\n1）MYISAM只缓存索引块\r\n2）MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快</td>\r\n<td>innodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\r\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\r\n1）INNODB要缓存数据块\r\n2）innodb寻址要映射到块，再到行\r\n3）INNODB还需要维护MVCC一致，每一次查询需要去检查和维护</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n综上所述，任何一种表都不是万能的，只有恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 10:28:40','2015-09-01 10:28:40','',79,'http://blog.raymond.com/?p=89',0,'revision','',0),(88,1,'2015-09-01 10:26:26','2015-09-01 10:26:26','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。\r\n\r\n索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引\r\n\r\n更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>会保存表行数</td>\r\n<td>不保存表行数</td>\r\n</tr>\r\n<tr>\r\n<td>select 操作</td>\r\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次</td>\r\n<td>\r\ninnodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\r\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\r\n1）数据块，INNODB要缓存，MYISAM只缓存索引块，  这中间还有换进换出的减少； \r\n2）innodb寻址要映射到块，再到行，MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快\r\n3）INNODB还需要维护MVCC一致；虽然你的场景没有，但他还是需要去检查和维护</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n综上所述，任何一种表都不是万能的，只有恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 10:26:26','2015-09-01 10:26:26','',79,'http://blog.raymond.com/?p=88',0,'revision','',0),(90,1,'2015-09-01 10:52:18','2015-09-01 10:52:18','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>会保存表行数</td>\r\n<td>不保存表行数</td>\r\n</tr>\r\n<tr>\r\n<td>select 操作</td>\r\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次\r\n1）MYISAM只缓存索引块\r\n2）MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快</td>\r\n<td>innodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\r\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\r\n1）INNODB要缓存数据块\r\n2）innodb寻址要映射到块，再到行\r\n3）INNODB还需要维护MVCC一致，每一次查询需要去检查和维护</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n综上所述，任何一种表都不是万能的，只有恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 10:52:18','2015-09-01 10:52:18','',79,'http://blog.raymond.com/?p=90',0,'revision','',0),(91,1,'2015-09-01 11:00:53','2015-09-01 11:00:53','<table>\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td style=\"text-align: center;\">Myisam</td>\r\n<td style=\"text-align: center;\">InnoDB</td>\r\n</tr>\r\n<tr>\r\n<td>事务</td>\r\n<td>不支持事务，但是执行速度更快，性能更好</td>\r\n<td>支持事务功能，外部键等高级数据库功能</td>\r\n</tr>\r\n<tr>\r\n<td>构成</td>\r\n<td>每个MyISAM在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。.frm文件存储表定义。数据文件的扩展名为.MYD (MYData)。索引文件的扩展名是.MYI (MYIndex)。</td>\r\n<td>基于磁盘的资源是InnoDB表空间数据文件和它的日志文件，InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB</td>\r\n</tr>\r\n<tr>\r\n<td>SELECT UPDATE,INSERT，Delete操作</td>\r\n<td>如果执行大量的SELECT，MyISAM是更好的选择，MyISAM引擎的表在大量高并发的读写下会经常出现表损坏的情况</td>\r\n<td>1.如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表2.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。3.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用</td>\r\n</tr>\r\n<tr>\r\n<td>AUTO_INCREMENT</td>\r\n<td>每表一个AUTO_INCREMEN列的内部处理。 MyISAM为INSERT和UPDATE操作自动更新这一列。这使得AUTO_INCREMENT列更快（至少10%）。在序列顶的值被删除之后就不能再利用。(当AUTO_INCREMENT列被定义为多列索引的最后一列，可以出现重使用从序列顶部删除的值的情况）。AUTO_INCREMENT值可用ALTER TABLE或myisamch来重置对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引更好和更快的auto_increment处理</td>\r\n<td>如果你为一个表指定AUTO_INCREMENT列，在数据词典里的InnoDB表句柄包含一个名为自动增长计数器的计数器，它被用在为该列赋新值。自动增长计数器仅被存储在主内存中，而不是存在磁盘上</td>\r\n</tr>\r\n<tr>\r\n<td>锁</td>\r\n<td>表锁</td>\r\n<td>提供行锁(locking on row level)，另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%”</td>\r\n</tr>\r\n<tr>\r\n<td>表的具体行数</td>\r\n<td>会保存表行数</td>\r\n<td>不保存表行数</td>\r\n</tr>\r\n<tr>\r\n<td>select 操作</td>\r\n<td>myisam的索引存的是索引的key值，要取非索引值，还需要回表再扫描一次\r\n1）MYISAM只缓存索引块\r\n2）MYISAM 记录的直接是文件的OFFSET，定位比INNODB要快</td>\r\n<td>innodb是聚集索引，表和数据在一起，找到索引就同时拿到数据了\r\n但是INNODB在做SELECT的时候，要维护的东西比MYISAM引擎多很多；\r\n1）INNODB要缓存数据块\r\n2）innodb寻址要映射到块，再到行\r\n3）INNODB还需要维护MVCC一致，每一次查询需要去检查和维护</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;\r\n\r\nMyISAM：这个是默认类型，它是基于传统的ISAM类型，ISAM是Indexed Sequential Access Method (有索引的顺序访问方法) 的缩写，它是存储记录和文件的标准方法。与其他存储引擎比较，MyISAM具有检查和修复表格的大多数工具。 <a href=\"http://www.nowamagic.net/librarys/veda/tag/MyISAM\" target=\"_blank\">MyISAM</a>表格可以被压缩，而且它们支持全文搜索。它们不是事务安全的，而且也不支持外键。如果事物回滚将造成不完全回滚，不具有原子性。如果执行大量的SELECT，MyISAM是更好的选择。\r\n\r\nMyIASM是IASM表的新版本，有如下扩展：\r\n<ul>\r\n	<li>二进制层次的可移植性。</li>\r\n	<li>NULL列索引。</li>\r\n	<li>对变长行比ISAM表有更少的碎片。</li>\r\n	<li>支持大文件。</li>\r\n	<li>更好的索引压缩。</li>\r\n	<li>更好的键吗统计分布。</li>\r\n	<li>更好和更快的auto_increment处理。</li>\r\n</ul>\r\nInnoDB：这种类型是事务安全的。它与BDB类型具有相同的特性，它们还支持外键。InnoDB表格速度很快，具有比BDB还丰富的特性， 因此如果需要一个事务安全的存储引擎，建议使用它。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。对于支持事物的InnoDB类型的表，影响速度的主要原因是AUTOCOMMIT默认设置是打开的，而且程序没有显式调用BEGIN 开始事务，导致每插入一条都自动Commit，严重影响了速度。可以在执行sql前调用begin，多条sql形成一个事物(即使autocommit打开也可以)，将大大提高性能。\r\n\r\n&nbsp;\r\n\r\n以下是一些细节和具体实现的差别：\r\n<ol>\r\n	<li>InnoDB不支持FULLTEXT类型的索引。</li>\r\n	<li>InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，<a href=\"http://www.nowamagic.net/librarys/veda/tag/InnoDB\" target=\"_blank\">InnoDB</a>要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count(*)语句包含 where条件时，两种表的操作是一样的。</li>\r\n	<li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。</li>\r\n	<li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。</li>\r\n	<li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。</li>\r\n</ol>\r\n&nbsp;\r\n\r\nInnoDB 实现 mvvc\r\n\r\ninnodb会为每一行添加两个字段，分别表示该行<strong>创建的版本</strong>和<strong>删除的版本</strong>，填入的是事务的版本号，这个版本号随着事务的创建不断递增。在repeated read的隔离级别（<a href=\"http://blog.csdn.net/chosen0ne/article/details/10036775\" target=\"_blank\">事务的隔离级别请看这篇文章</a>）下，具体各种数据库操作的实现：\r\n\r\nselect：满足以下两个条件innodb会返回该行数据：（1）该行的创建版本号小于等于当前版本号，用于保证在select操作之前所有的操作已经执行落地。（2）该行的删除版本号大于当前版本或者为空。删除版本号大于当前版本意味着有一个并发事务将该行删除了。\r\n\r\ninsert：将新插入的行的创建版本号设置为当前系统的版本号。\r\n\r\ndelete：将要删除的行的删除版本号设置为当前系统的版本号。\r\n\r\nupdate：不执行原地update，而是转换成insert + delete。将旧行的删除版本号设置为当前版本号，并将新行insert同时设置创建版本号为当前版本号。\r\n\r\n其中，写操作（insert、delete和update）执行时，需要将系统版本号递增。\r\n\r\n由于旧数据并不真正的删除，所以必须对这些数据进行清理，innodb会开启一个后台线程执行清理工作，具体的规则是将删除版本号小于当前系统版本的行删除，这个过程叫做purge。\r\n\r\n通过MVCC很好的实现了事务的隔离性，可以达到repeated read级别，要实现serializable还必须加锁。','MyISM和InnoDB','','inherit','open','open','','79-revision-v1','','','2015-09-01 11:00:53','2015-09-01 11:00:53','',79,'http://blog.raymond.com/?p=91',0,'revision','',0),(92,1,'2015-09-07 10:19:30','2015-09-07 10:19:30','<h3>第一方和第三方Cookie的区别</h3>\r\n第一方Cookie和第三方Cookie，都是网站在客户端上存放的一小块数据。他们都由某个域存放，只能被这个域访问。他们的区别其实并不是技术上的区别，而是使用方式上的区别。比如，访问www.a.com这个网站，这个网站设置了一个Cookie，这个Cookie也只能被www.a.com这个域下的网页读取，这就是第一方Cookie。如果还是访问www.a.com这个网站，网页里有用到www.b.com网站的一张图片，浏览器在www.b.com请求图片的时候，www.b.com设置了一个Cookie，那这个Cookie只能被www.b.com这个域访问，反而不能被www.a.com这个域访问，因为对我们来说，我们实际是在访问www.a.com这个网站被设置了一个www.b.com这个域下的Cookie，所以叫第三方Cookie。\r\n\r\n上面这么多看完还没有绕晕的请继续。\r\n<h3><a name=\"t6\"></a>第一方Cookie的优势和应用</h3>\r\n第一方Cookie的最大优势是接受率高。一般主流的浏览器的都会有隐私的设置，可以让用户设置是否接受Cookie，接受哪些Cookie。除了完全不接受Cookie这个设置以外，其他情况下，第一方Cookie都是会被用户接受的（不接受的话，是没办法把那小块数据保存下来的）。所以，如果没有特殊要求，使用第一方Cookie会比第三方Cookie，我们通过分析工具得到的数据会更准确。\r\n<h3><a name=\"t7\"></a>第三方Cookie的优势和应用</h3>\r\n第三方Cookie的接受率不如第一方Cookie（不过主流的浏览器默认的设置下也接受带P3P协议的第三方Cookie，我的经验是接受率能达到90％，甚至95％以上），但在某些特定情况下可以实现第一方Cookie无法实现的功能。比如，当我们有多个域名的网站需要跟踪，我们希望了解到用户点击某个广告到达域名A下的网页，然后可能浏览了不论那个域名下的页面，最后在域名B下的网页完成注册的情况。广告可以在域名A下的网页被跟踪到，而注册可以在域名B下的网页跟踪到。如果我们使用第一方Cookie，会为域名A建立一个Cookie，为域名B再建立一个Cookie，他们可以关联各自域名下网页上的行为，但是无法关联起来。而使用第三方Cookie，那么无论多少个域，都只有一个Cookie，一个属于第三方域的Cookie，网站下所有域都能共享这个Cookie，那么所有的行为都能被关联起来分析。\r\n<h3><a name=\"t8\"></a>结论</h3>\r\n对于通过脚本型的网站分析工具来获取数据\r\n<ol>\r\n	<li>Cookie是必须的，离开Cookie我们什么也分析不了。</li>\r\n	<li>第一方Cookie接受率高，更准确，没有特殊需要就用他。</li>\r\n	<li>第三方Cookie可以跨域跟踪，特别需求可以应用。</li>\r\n</ol>','第一方和第三方Cookie的区别','','publish','open','open','','%e7%ac%ac%e4%b8%80%e6%96%b9%e5%92%8c%e7%ac%ac%e4%b8%89%e6%96%b9cookie%e7%9a%84%e5%8c%ba%e5%88%ab','','','2015-09-07 10:19:30','2015-09-07 10:19:30','',0,'http://blog.raymond.com/?p=92',0,'post','',0),(93,1,'2015-09-07 10:19:30','2015-09-07 10:19:30','<h3>第一方和第三方Cookie的区别</h3>\r\n第一方Cookie和第三方Cookie，都是网站在客户端上存放的一小块数据。他们都由某个域存放，只能被这个域访问。他们的区别其实并不是技术上的区别，而是使用方式上的区别。比如，访问www.a.com这个网站，这个网站设置了一个Cookie，这个Cookie也只能被www.a.com这个域下的网页读取，这就是第一方Cookie。如果还是访问www.a.com这个网站，网页里有用到www.b.com网站的一张图片，浏览器在www.b.com请求图片的时候，www.b.com设置了一个Cookie，那这个Cookie只能被www.b.com这个域访问，反而不能被www.a.com这个域访问，因为对我们来说，我们实际是在访问www.a.com这个网站被设置了一个www.b.com这个域下的Cookie，所以叫第三方Cookie。\r\n\r\n上面这么多看完还没有绕晕的请继续。\r\n<h3><a name=\"t6\"></a>第一方Cookie的优势和应用</h3>\r\n第一方Cookie的最大优势是接受率高。一般主流的浏览器的都会有隐私的设置，可以让用户设置是否接受Cookie，接受哪些Cookie。除了完全不接受Cookie这个设置以外，其他情况下，第一方Cookie都是会被用户接受的（不接受的话，是没办法把那小块数据保存下来的）。所以，如果没有特殊要求，使用第一方Cookie会比第三方Cookie，我们通过分析工具得到的数据会更准确。\r\n<h3><a name=\"t7\"></a>第三方Cookie的优势和应用</h3>\r\n第三方Cookie的接受率不如第一方Cookie（不过主流的浏览器默认的设置下也接受带P3P协议的第三方Cookie，我的经验是接受率能达到90％，甚至95％以上），但在某些特定情况下可以实现第一方Cookie无法实现的功能。比如，当我们有多个域名的网站需要跟踪，我们希望了解到用户点击某个广告到达域名A下的网页，然后可能浏览了不论那个域名下的页面，最后在域名B下的网页完成注册的情况。广告可以在域名A下的网页被跟踪到，而注册可以在域名B下的网页跟踪到。如果我们使用第一方Cookie，会为域名A建立一个Cookie，为域名B再建立一个Cookie，他们可以关联各自域名下网页上的行为，但是无法关联起来。而使用第三方Cookie，那么无论多少个域，都只有一个Cookie，一个属于第三方域的Cookie，网站下所有域都能共享这个Cookie，那么所有的行为都能被关联起来分析。\r\n<h3><a name=\"t8\"></a>结论</h3>\r\n对于通过脚本型的网站分析工具来获取数据\r\n<ol>\r\n	<li>Cookie是必须的，离开Cookie我们什么也分析不了。</li>\r\n	<li>第一方Cookie接受率高，更准确，没有特殊需要就用他。</li>\r\n	<li>第三方Cookie可以跨域跟踪，特别需求可以应用。</li>\r\n</ol>','第一方和第三方Cookie的区别','','inherit','open','open','','92-revision-v1','','','2015-09-07 10:19:30','2015-09-07 10:19:30','',92,'http://blog.raymond.com/?p=93',0,'revision','',0),(94,1,'2015-09-20 08:30:18','2015-09-20 08:30:18','<h2><strong>基础规范</strong></h2>\r\n<ul>\r\n	<li>类文件的命名必须以大写字母开头，多个单词之间使用下划线分割，不要使用驼峰命名法。其他文件（配置文件，视图，一般的脚本文件等）的命名是全小写。</li>\r\n	<li>类的方法应该使用全小写，并且应该明确指出该方法的功能，最好包含一个动词。 避免使用冗长的名称，多个单词之间使用下划线分割。</li>\r\n	<li>变量的命名规则和类方法的命名规则非常接近，使用全小写，使用下划线分割， 并且应该明确指出该变量的用途。非常短的无意义的变量只应该在 for 循环中作为迭代器使用。</li>\r\n	<li>单行注释应该和代码合在一起，大块的注释和代码之间应该留一个空行。</li>\r\n	<li>常量遵循和变量一样的命名规则，除了它需要全部大写。尽量使用 CodeIgniter 已经定义好的常量， 如：SLASH、LD、RD、PATH_CACHE 等。</li>\r\n	<li>TRUE 、 FALSE 和 NULL 这几个关键字全部使用大写。</li>\r\n	<li>不要使用 || 操作符，它在一些设备上看不清（可能看起来像是数字 11）， 使用 &amp;&amp; 操作符比使用 AND 要好一点，但是两者都可以接受。 另外，在 ! 操作符的前后都应该加一个空格。</li>\r\n</ul>\r\n<h3><strong>创建类库：</strong></h3>\r\n&nbsp;','CI代码规范','','publish','open','open','','ci%e4%bb%a3%e7%a0%81%e8%a7%84%e8%8c%83','','','2015-09-20 10:21:26','2015-09-20 10:21:26','',0,'http://blog.raymond.com/?p=94',0,'post','',0),(95,1,'2015-09-20 08:30:18','2015-09-20 08:30:18','<ul>\r\n	<li>类文件的命名必须以大写字母开头，多个单词之间使用下划线分割，不要使用驼峰命名法。其他文件（配置文件，视图，一般的脚本文件等）的命名是全小写。</li>\r\n	<li>类的方法应该使用全小写，并且应该明确指出该方法的功能，最好包含一个动词。 避免使用冗长的名称，多个单词之间使用下划线分割。</li>\r\n	<li>变量的命名规则和类方法的命名规则非常接近，使用全小写，使用下划线分割， 并且应该明确指出该变量的用途。非常短的无意义的变量只应该在 for 循环中作为迭代器使用。</li>\r\n	<li>单行注释应该和代码合在一起，大块的注释和代码之间应该留一个空行。</li>\r\n	<li>常量遵循和变量一样的命名规则，除了它需要全部大写。尽量使用 CodeIgniter 已经定义好的常量， 如：SLASH、LD、RD、PATH_CACHE 等。</li>\r\n	<li>TRUE 、 FALSE 和 NULL 这几个关键字全部使用大写。</li>\r\n	<li>不要使用 || 操作符，它在一些设备上看不清（可能看起来像是数字 11）， 使用 &amp;&amp; 操作符比使用 AND 要好一点，但是两者都可以接受。 另外，在 ! 操作符的前后都应该加一个空格。</li>\r\n</ul>','CI代码规范','','inherit','open','open','','94-revision-v1','','','2015-09-20 08:30:18','2015-09-20 08:30:18','',94,'http://blog.raymond.com/?p=95',0,'revision','',0),(96,1,'2015-09-20 08:37:30','2015-09-20 08:37:30','<h2><strong>基础规范</strong></h2>\n<ul>\n	<li>类文件的命名必须以大写字母开头，多个单词之间使用下划线分割，不要使用驼峰命名法。其他文件（配置文件，视图，一般的脚本文件等）的命名是全小写。</li>\n	<li>类的方法应该使用全小写，并且应该明确指出该方法的功能，最好包含一个动词。 避免使用冗长的名称，多个单词之间使用下划线分割。</li>\n	<li>变量的命名规则和类方法的命名规则非常接近，使用全小写，使用下划线分割， 并且应该明确指出该变量的用途。非常短的无意义的变量只应该在 for 循环中作为迭代器使用。</li>\n	<li>单行注释应该和代码合在一起，大块的注释和代码之间应该留一个空行。</li>\n	<li>常量遵循和变量一样的命名规则，除了它需要全部大写。尽量使用 CodeIgniter 已经定义好的常量， 如：SLASH、LD、RD、PATH_CACHE 等。</li>\n	<li>TRUE 、 FALSE 和 NULL 这几个关键字全部使用大写。</li>\n	<li>不要使用 || 操作符，它在一些设备上看不清（可能看起来像是数字 11）， 使用 &amp;&amp; 操作符比使用 AND 要好一点，但是两者都可以接受。 另外，在 ! 操作符的前后都应该加一个空格。</li>\n</ul>\n<h3><strong>创建类库：</strong></h3>\n&nbsp;','CI代码规范','','inherit','open','open','','94-autosave-v1','','','2015-09-20 08:37:30','2015-09-20 08:37:30','',94,'http://blog.raymond.com/?p=96',0,'revision','',0),(97,1,'2015-09-20 10:21:26','2015-09-20 10:21:26','<h2><strong>基础规范</strong></h2>\r\n<ul>\r\n	<li>类文件的命名必须以大写字母开头，多个单词之间使用下划线分割，不要使用驼峰命名法。其他文件（配置文件，视图，一般的脚本文件等）的命名是全小写。</li>\r\n	<li>类的方法应该使用全小写，并且应该明确指出该方法的功能，最好包含一个动词。 避免使用冗长的名称，多个单词之间使用下划线分割。</li>\r\n	<li>变量的命名规则和类方法的命名规则非常接近，使用全小写，使用下划线分割， 并且应该明确指出该变量的用途。非常短的无意义的变量只应该在 for 循环中作为迭代器使用。</li>\r\n	<li>单行注释应该和代码合在一起，大块的注释和代码之间应该留一个空行。</li>\r\n	<li>常量遵循和变量一样的命名规则，除了它需要全部大写。尽量使用 CodeIgniter 已经定义好的常量， 如：SLASH、LD、RD、PATH_CACHE 等。</li>\r\n	<li>TRUE 、 FALSE 和 NULL 这几个关键字全部使用大写。</li>\r\n	<li>不要使用 || 操作符，它在一些设备上看不清（可能看起来像是数字 11）， 使用 &amp;&amp; 操作符比使用 AND 要好一点，但是两者都可以接受。 另外，在 ! 操作符的前后都应该加一个空格。</li>\r\n</ul>\r\n<h3><strong>创建类库：</strong></h3>\r\n&nbsp;','CI代码规范','','inherit','open','open','','94-revision-v1','','','2015-09-20 10:21:26','2015-09-20 10:21:26','',94,'http://blog.raymond.com/?p=97',0,'revision','',0),(99,1,'2015-09-21 09:39:18','2015-09-21 09:39:18','Linux下几种文件传输命令 sz rz sftp scp\r\n\r\n1.sftp\r\nSecure Ftp 是一个基于SSH安全协议的文件传输管理工具。由于它是基于SSH的，会在传输过程中对用户的密码、数据等敏感信息进行加密，因此可以有效的防止用户信息在传输的过程中被窃取，比FTP有更高的安全性。在功能方面与FTP很类似，不仅可以传输文件数据，而且可以进行远程的文件管理（如建立，删除，查看文件列表等操作）。Sftp与ftp虽然只有一字之差，但基于的传输协议却是不同的。因此不能用sftp client去连接ftp server 也不能用 ftp client 去连接 sftp server。\r\n使用方法：\r\n先用 sftp user@host 连接上主机，然后 put localpath remotepath 上传文件或者 get remotepath localpath下载文件\r\n\r\n如将 info.php 拉回本地\r\n\r\nget /home/web/info.php /home/lorcon/info.php\r\n\r\n在ftp命令行中 ，在命令前加 l 可以操作本地，如 lpwd,lls,lcd\r\n\r\n2.sz/rz\r\nsz/rz 是Linux/Unix同Windows进行ZModem文件传输的命令行工具，基于ZModem传输协议的命令。对传输的数据会进行核查，并且有很好的传输性能(10kb/s)\r\nsz：将选定的文件发送（send）到本地机器\r\nrz：运行该命令会弹出一个文件选择窗口，从本地选择文件上传到服务器(receive)\r\n\r\n需要先安装程序\r\nsudo apt-get install lrzsz\r\nsz filename 可以将 linux 目录下的file拷贝到 windows 中\r\n\r\n3.scp\r\nSecurity的文件copy，基于ssh登录。','linux 文件传输','','publish','open','open','','linux-%e6%96%87%e4%bb%b6%e4%bc%a0%e8%be%93','','','2015-09-21 09:39:18','2015-09-21 09:39:18','',0,'http://blog.raymond.com/?p=99',0,'post','',0),(100,1,'2015-09-21 09:39:18','2015-09-21 09:39:18','Linux下几种文件传输命令 sz rz sftp scp\r\n\r\n1.sftp\r\nSecure Ftp 是一个基于SSH安全协议的文件传输管理工具。由于它是基于SSH的，会在传输过程中对用户的密码、数据等敏感信息进行加密，因此可以有效的防止用户信息在传输的过程中被窃取，比FTP有更高的安全性。在功能方面与FTP很类似，不仅可以传输文件数据，而且可以进行远程的文件管理（如建立，删除，查看文件列表等操作）。Sftp与ftp虽然只有一字之差，但基于的传输协议却是不同的。因此不能用sftp client去连接ftp server 也不能用 ftp client 去连接 sftp server。\r\n使用方法：\r\n先用 sftp user@host 连接上主机，然后 put localpath remotepath 上传文件或者 get remotepath localpath下载文件\r\n\r\n如将 info.php 拉回本地\r\n\r\nget /home/web/info.php /home/lorcon/info.php\r\n\r\n在ftp命令行中 ，在命令前加 l 可以操作本地，如 lpwd,lls,lcd\r\n\r\n2.sz/rz\r\nsz/rz 是Linux/Unix同Windows进行ZModem文件传输的命令行工具，基于ZModem传输协议的命令。对传输的数据会进行核查，并且有很好的传输性能(10kb/s)\r\nsz：将选定的文件发送（send）到本地机器\r\nrz：运行该命令会弹出一个文件选择窗口，从本地选择文件上传到服务器(receive)\r\n\r\n需要先安装程序\r\nsudo apt-get install lrzsz\r\nsz filename 可以将 linux 目录下的file拷贝到 windows 中\r\n\r\n3.scp\r\nSecurity的文件copy，基于ssh登录。','linux 文件传输','','inherit','open','open','','99-revision-v1','','','2015-09-21 09:39:18','2015-09-21 09:39:18','',99,'http://blog.raymond.com/?p=100',0,'revision','',0),(101,1,'2015-10-12 07:33:16','2015-10-12 07:33:16','Shell本身是一个用C语言编写的程序，Shell既是一种命令语言，又是一种程序设计语言。它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。\r\n\r\nShell有两种执行命令的方式：\r\n交互式（Interactive）：解释执行用户的命令，用户输入一条命令，Shell就解释执行一条。\r\n批处理（Batch）：用户事先写一个Shell脚本(Script)，其中有很多条命令，让Shell一次把这些命令执行完，而不必一条一条地敲命令。\r\n\r\nUnix/Linux上常见的Shell脚本解释器有bash、sh、csh、ksh等，习惯上把它们称作一种Shell。我们常说有多少种Shell，其实说的是Shell脚本解释器。\r\nbash是Linux标准默认的shell，是BourneAgain Shell的缩写，内部命令一共有40个。\r\nLinux使用它作为默认的shell是因为它有诸如以下的特色：\r\n可以使用类似DOS下面的doskey的功能，用方向键查阅和快速输入并修改命令。\r\n自动通过查找匹配的方式给出以某字符串开头的命令。\r\n包含了自身的帮助功能，你只要在提示符下面键入help就可以得到相关的帮助。','shell 脚本1——基础概念','','publish','open','open','','shell-%e8%84%9a%e6%9c%ac1-%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5','','','2015-10-12 07:33:16','2015-10-12 07:33:16','',0,'http://blog.raymond.com/?p=101',0,'post','',0),(102,1,'2015-10-12 07:33:16','2015-10-12 07:33:16','Shell本身是一个用C语言编写的程序，Shell既是一种命令语言，又是一种程序设计语言。它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。\r\n\r\nShell有两种执行命令的方式：\r\n交互式（Interactive）：解释执行用户的命令，用户输入一条命令，Shell就解释执行一条。\r\n批处理（Batch）：用户事先写一个Shell脚本(Script)，其中有很多条命令，让Shell一次把这些命令执行完，而不必一条一条地敲命令。\r\n\r\nUnix/Linux上常见的Shell脚本解释器有bash、sh、csh、ksh等，习惯上把它们称作一种Shell。我们常说有多少种Shell，其实说的是Shell脚本解释器。\r\nbash是Linux标准默认的shell，是BourneAgain Shell的缩写，内部命令一共有40个。\r\nLinux使用它作为默认的shell是因为它有诸如以下的特色：\r\n可以使用类似DOS下面的doskey的功能，用方向键查阅和快速输入并修改命令。\r\n自动通过查找匹配的方式给出以某字符串开头的命令。\r\n包含了自身的帮助功能，你只要在提示符下面键入help就可以得到相关的帮助。','shell 脚本1——基础概念','','inherit','open','open','','101-revision-v1','','','2015-10-12 07:33:16','2015-10-12 07:33:16','',101,'http://blog.raymond.com/?p=102',0,'revision','',0),(103,1,'2015-10-14 03:58:32','0000-00-00 00:00:00','aapt即Android Asset Packaging Tool','aapt','','draft','open','open','','','','','2015-10-14 03:58:32','2015-10-14 03:58:32','',0,'http://blog.raymond.com/?p=103',0,'post','',0),(105,1,'2015-10-15 04:05:23','2015-10-15 04:05:23','aapt即Android Asset Packaging Tool，用以查看、 创建、 更新ZIP格式的文档附件(zip, jar, apk)。 也可将资源文件编译成二进制文件。\r\n\r\n下面的这个参数列表基本向我们展示了如何使用aapt以及aapt的基本功能了。\r\n<pre>aapt l[ist]:列出资源压缩包里的内容。\r\naapt d[ump]：查看APK包内指定的内容。\r\naapt p[ackage]：打包生成资源压缩包。\r\naapt r[emove]：从压缩包中删除指定文件。\r\naapt a[dd]：向压缩包中添加指定文件。\r\naapt v[ersion]:打印aapt的版本。</pre>\r\n安装方法，只需要将 aapt 命令安装到 /usr/local/bin 就能直接使用，aapt名令工具可以上http://code.google.com/p/android-apktool/下载\r\n\r\n以下是一个利用aapt工具获取apk包packagename的shell脚本\r\n<pre style=\"text-align: justify;\">#!/bin/bash\r\nfor i in `cat apk.list`\r\ndo\r\npackage=$(aapt dump badging $i | awk \'/package/{gsub(\"name=|\'\"\'\"\'\",\"\"); print $2}\')\r\necho $package\r\necho $i $package\r\ndone</pre>\r\n安装在手机上的apk程序的报名不能重复，所以包名会有一定的命名规则，便于区分，例如\r\ncom.公司名.具体程序名 import xxx.xxx.xxx.User之后，代码里只要简写User，程序就知道它的全名了，从import里找。 如果一段代码里出现了两个不同的User，那就不能靠import了，就得写完整名称来 new xxx.xxx.xxx.User() 通俗一点讲Package为了防止同名的class产生冲突。','aapt简单使用','','publish','open','open','','aapt%e7%ae%80%e5%8d%95%e4%bd%bf%e7%94%a8','','','2015-10-15 04:05:23','2015-10-15 04:05:23','',0,'http://blog.raymond.com/?p=105',0,'post','',0),(106,1,'2015-10-15 04:05:23','2015-10-15 04:05:23','aapt即Android Asset Packaging Tool，用以查看、 创建、 更新ZIP格式的文档附件(zip, jar, apk)。 也可将资源文件编译成二进制文件。\r\n\r\n下面的这个参数列表基本向我们展示了如何使用aapt以及aapt的基本功能了。\r\n<pre>aapt l[ist]:列出资源压缩包里的内容。\r\naapt d[ump]：查看APK包内指定的内容。\r\naapt p[ackage]：打包生成资源压缩包。\r\naapt r[emove]：从压缩包中删除指定文件。\r\naapt a[dd]：向压缩包中添加指定文件。\r\naapt v[ersion]:打印aapt的版本。</pre>\r\n安装方法，只需要将 aapt 命令安装到 /usr/local/bin 就能直接使用，aapt名令工具可以上http://code.google.com/p/android-apktool/下载\r\n\r\n以下是一个利用aapt工具获取apk包packagename的shell脚本\r\n<pre style=\"text-align: justify;\">#!/bin/bash\r\nfor i in `cat apk.list`\r\ndo\r\npackage=$(aapt dump badging $i | awk \'/package/{gsub(\"name=|\'\"\'\"\'\",\"\"); print $2}\')\r\necho $package\r\necho $i $package\r\ndone</pre>\r\n安装在手机上的apk程序的报名不能重复，所以包名会有一定的命名规则，便于区分，例如\r\ncom.公司名.具体程序名 import xxx.xxx.xxx.User之后，代码里只要简写User，程序就知道它的全名了，从import里找。 如果一段代码里出现了两个不同的User，那就不能靠import了，就得写完整名称来 new xxx.xxx.xxx.User() 通俗一点讲Package为了防止同名的class产生冲突。','aapt简单使用','','inherit','open','open','','105-revision-v1','','','2015-10-15 04:05:23','2015-10-15 04:05:23','',105,'http://blog.raymond.com/?p=106',0,'revision','',0),(107,1,'2015-11-09 13:26:32','2015-11-09 13:26:32','某个用户的定时任务可以在 /var/spool/cron/用户名 中看到，不过该文件不能直接编辑，只能通过crontab -e修改\r\n定时任务的log存储在 /var/log/cron 中\r\n\r\n排查问题，第一步肯定是判断脚本有没有加对\r\n查看某用户的执行脚本\r\n<pre>crontab -u 执行用户 -l</pre>\r\n检查定时任务有没有启动\r\n<pre>service crond status</pre>\r\n如果没有启动可以\r\n<pre> service crond start/stop/restart</pre>\r\n然后查看任务log，看看任务有没有进行\r\n\r\n如果没有运行就根据log的错误修改，一般问题就是：\r\n1.没有运行权限\r\n<pre>chmod a+x 脚本</pre>\r\n2.shell下直接执行用的是应用账户，需要对应环境变量，可以在脚本的最开始位置加载运行必须的环境变量\r\n<pre>if [ -f ~/.bash_profile ];\r\nthen\r\n . ~/.bash_profile\r\nfi</pre>\r\n3.脚本写错的就自己修改\r\n\r\n另外：\r\n如果cron的时间冲突，比如\r\n* * 12 * 3\r\n如果12日不是周三，12日也会执行该脚本。同理，周三不是12号，也会执行脚本','crontab 不执行','','publish','open','open','','crontab-%e4%b8%8d%e6%89%a7%e8%a1%8c','','','2015-11-09 13:26:32','2015-11-09 13:26:32','',0,'http://blog.raymond.com/?p=107',0,'post','',0),(108,1,'2015-11-09 13:26:32','2015-11-09 13:26:32','某个用户的定时任务可以在 /var/spool/cron/用户名 中看到，不过该文件不能直接编辑，只能通过crontab -e修改\r\n定时任务的log存储在 /var/log/cron 中\r\n\r\n排查问题，第一步肯定是判断脚本有没有加对\r\n查看某用户的执行脚本\r\n<pre>crontab -u 执行用户 -l</pre>\r\n检查定时任务有没有启动\r\n<pre>service crond status</pre>\r\n如果没有启动可以\r\n<pre> service crond start/stop/restart</pre>\r\n然后查看任务log，看看任务有没有进行\r\n\r\n如果没有运行就根据log的错误修改，一般问题就是：\r\n1.没有运行权限\r\n<pre>chmod a+x 脚本</pre>\r\n2.shell下直接执行用的是应用账户，需要对应环境变量，可以在脚本的最开始位置加载运行必须的环境变量\r\n<pre>if [ -f ~/.bash_profile ];\r\nthen\r\n . ~/.bash_profile\r\nfi</pre>\r\n3.脚本写错的就自己修改\r\n\r\n另外：\r\n如果cron的时间冲突，比如\r\n* * 12 * 3\r\n如果12日不是周三，12日也会执行该脚本。同理，周三不是12号，也会执行脚本','crontab 不执行','','inherit','open','open','','107-revision-v1','','','2015-11-09 13:26:32','2015-11-09 13:26:32','',107,'http://blog.raymond.com/?p=108',0,'revision','',0),(109,1,'2015-11-14 07:24:46','2015-11-14 07:24:46','<strong>rc.d的内容如下：</strong>\r\n<strong>init.d/ :</strong>各种服务器和程序的二进制文件存放目录。\r\n<strong>rcx.d/:</strong> 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\r\n还有三个脚本:<strong>rc.sysinit,  rc,  rc.local</strong>\r\n\r\n<strong>redhat的启动方式和执行次序是：</strong>\r\n加载内核\r\n执行init程序\r\n/etc/rc.d/rc.sysinit <span style=\"color: #99cc00;\"><em># 由init执行的第一个脚本</em></span>\r\n/etc/rc.d/rc $RUNLEVEL <em><span style=\"color: #99cc00;\"># $RUNLEVEL为缺省的运行模式</span></em>\r\n/etc/rc.d/rc.local\r\n/sbin/mingetty <span style=\"color: #99cc00;\"><em># 等待用户登录</em></span>\r\n\r\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\r\n调入keymap以及系统字体\r\n启动swapping\r\n设置主机名\r\n设置NIS域名\r\n检查（fsck）并mount文件系统\r\n打开quota\r\n装载声卡模块\r\n设置系统时钟\r\n等等。\r\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\r\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\r\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\r\n/etc/rc.d/rc3.d/下的脚本。\r\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\r\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\r\n\r\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\r\n至此，LINUX的启动结束。\r\n\r\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\r\n如果所做的修改只在引导开机的时候起作用，并且改动不大的话，可以考虑简单地编辑一下/etc/rc.d/rc.local脚本。这个命令脚本程序是在引导过程的最后一步被执行的。如果所做的修改比较细致，或者还要求关闭进程使之明确地停止运行，则需要在/etc/rc.d/init.d子目录中添加一个命令脚本程序。这个命令脚本程序必须可以接受Start和Stop参数并完成相应的操作。','rc.d 目录','','publish','open','open','','rc-d-%e7%9b%ae%e5%bd%95','','','2015-11-14 08:29:27','2015-11-14 08:29:27','',0,'http://blog.raymond.com/?p=109',0,'post','',0),(110,1,'2015-11-14 07:24:46','2015-11-14 07:24:46','rc.d的内容如下：\r\ninit.d/ :各种服务器和程序的二进制文件存放目录。\r\nrcx.d/: 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\r\n还有三个脚本:rc.sysinit, rc, rc.local\r\n\r\nredhat的启动方式和执行次序是：\r\n加载内核\r\n执行init程序\r\n/etc/rc.d/rc.sysinit # 由init执行的第一个脚本\r\n/etc/rc.d/rc $RUNLEVEL # $RUNLEVEL为缺省的运行模式\r\n/etc/rc.d/rc.local\r\n/sbin/mingetty # 等待用户登录\r\n\r\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\r\n调入keymap以及系统字体\r\n启动swapping\r\n设置主机名\r\n设置NIS域名\r\n检查（fsck）并mount文件系统\r\n打开quota\r\n装载声卡模块\r\n设置系统时钟\r\n等等。\r\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\r\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\r\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\r\n/etc/rc.d/rc3.d/下的脚本。\r\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\r\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\r\n\r\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\r\n至此，LINUX的启动结束。\r\n\r\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\r\n在完成 run level 3 的服务启动后，如果我还有其他的动作想要完成时，，直接将他写入 /etc/rc.d/rc.local ， 那么该工作就会在开机的时候自动被载入','rc.d 目录','','inherit','open','open','','109-revision-v1','','','2015-11-14 07:24:46','2015-11-14 07:24:46','',109,'http://blog.raymond.com/?p=110',0,'revision','',0),(111,1,'2015-11-14 07:54:48','2015-11-14 07:54:48','<strong>rc.d的内容如下：</strong>\n<strong>init.d/ :</strong>各种服务器和程序的二进制文件存放目录。\n<strong>rcx.d/:</strong> 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\n还有三个脚本:<strong>rc.sysinit,  rc,  rc.local</strong>\n\n<strong>redhat的启动方式和执行次序是：</strong>\n加载内核\n执行init程序\n/etc/rc.d/rc.sysinit <span style=\"color: #99cc00;\"><em># 由init执行的第一个脚本</em></span>\n/etc/rc.d/rc $RUNLEVEL <em><span style=\"color: #99cc00;\"># $RUNLEVEL为缺省的运行模式</span></em>\n/etc/rc.d/rc.local\n/sbin/mingetty <span style=\"color: #99cc00;\"><em># 等待用户登录</em></span>\n\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\n调入keymap以及系统字体\n启动swapping\n设置主机名\n设置NIS域名\n检查（fsck）并mount文件系统\n打开quota\n装载声卡模块\n设置系统时钟\n等等。\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\n/etc/rc.d/rc3.d/下的脚本。\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\n\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\n至此，LINUX的启动结束。\n\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\n如果所做的修改只在引导开机的时候起作用，并且改动不大的话，可以考虑简单地编辑一下/etc/rc.d/rc.local脚本。这个命令脚本程序是在引导过程的最后一步被执行的。如果所做的修改比较细致，或者还要求关闭进程使之明确地停止运行，则需要在/etc/rc.d/init.d子目录中添加一个命令脚本程序。这个命令脚本程序必须可以接受Start和Stop参数并完成相应的操作。','rc.d 目录','','inherit','open','open','','109-autosave-v1','','','2015-11-14 07:54:48','2015-11-14 07:54:48','',109,'http://blog.raymond.com/?p=111',0,'revision','',0),(112,1,'2015-11-14 07:38:13','2015-11-14 07:38:13','<strong>rc.d的内容如下：</strong>\r\n<strong>init.d/ :</strong>各种服务器和程序的二进制文件存放目录。\r\n<strong>rcx.d/:</strong> 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\r\n还有三个脚本:<strong>rc.sysinit,  rc,  rc.local</strong>\r\n\r\nredhat的启动方式和执行次序是：\r\n加载内核\r\n执行init程序\r\n/etc/rc.d/rc.sysinit # 由init执行的第一个脚本\r\n/etc/rc.d/rc $RUNLEVEL # $RUNLEVEL为缺省的运行模式\r\n/etc/rc.d/rc.local\r\n/sbin/mingetty # 等待用户登录\r\n\r\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\r\n调入keymap以及系统字体\r\n启动swapping\r\n设置主机名\r\n设置NIS域名\r\n检查（fsck）并mount文件系统\r\n打开quota\r\n装载声卡模块\r\n设置系统时钟\r\n等等。\r\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\r\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\r\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\r\n/etc/rc.d/rc3.d/下的脚本。\r\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\r\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\r\n\r\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\r\n至此，LINUX的启动结束。\r\n\r\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\r\n在完成 run level 3 的服务启动后，如果我还有其他的动作想要完成时，，直接将他写入 /etc/rc.d/rc.local ， 那么该工作就会在开机的时候自动被载入','rc.d 目录','','inherit','open','open','','109-revision-v1','','','2015-11-14 07:38:13','2015-11-14 07:38:13','',109,'http://blog.raymond.com/?p=112',0,'revision','',0),(113,1,'2015-11-14 07:44:41','2015-11-14 07:44:41','<strong>rc.d的内容如下：</strong>\r\n<strong>init.d/ :</strong>各种服务器和程序的二进制文件存放目录。\r\n<strong>rcx.d/:</strong> 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\r\n还有三个脚本:<strong>rc.sysinit,  rc,  rc.local</strong>\r\n\r\n<strong>redhat的启动方式和执行次序是：</strong>\r\n加载内核\r\n执行init程序\r\n/etc/rc.d/rc.sysinit <span style=\"color: #99cc00;\"><em># 由init执行的第一个脚本</em></span>\r\n/etc/rc.d/rc $RUNLEVEL <em><span style=\"color: #99cc00;\"># $RUNLEVEL为缺省的运行模式</span></em>\r\n/etc/rc.d/rc.local\r\n/sbin/mingetty <span style=\"color: #99cc00;\"><em># 等待用户登录</em></span>\r\n\r\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\r\n调入keymap以及系统字体\r\n启动swapping\r\n设置主机名\r\n设置NIS域名\r\n检查（fsck）并mount文件系统\r\n打开quota\r\n装载声卡模块\r\n设置系统时钟\r\n等等。\r\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\r\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\r\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\r\n/etc/rc.d/rc3.d/下的脚本。\r\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\r\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\r\n\r\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\r\n至此，LINUX的启动结束。\r\n\r\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\r\n在完成 run level 3 的服务启动后，如果我还有其他的动作想要完成时，，直接将他写入 /etc/rc.d/rc.local ， 那么该工作就会在开机的时候自动被载入','rc.d 目录','','inherit','open','open','','109-revision-v1','','','2015-11-14 07:44:41','2015-11-14 07:44:41','',109,'http://blog.raymond.com/?p=113',0,'revision','',0),(114,1,'2015-11-14 08:29:27','2015-11-14 08:29:27','<strong>rc.d的内容如下：</strong>\r\n<strong>init.d/ :</strong>各种服务器和程序的二进制文件存放目录。\r\n<strong>rcx.d/:</strong> 各个启动级别的执行程序连接目录。里头的东西都是指向init.d/的一些软连接。具体的后边叙述。\r\n还有三个脚本:<strong>rc.sysinit,  rc,  rc.local</strong>\r\n\r\n<strong>redhat的启动方式和执行次序是：</strong>\r\n加载内核\r\n执行init程序\r\n/etc/rc.d/rc.sysinit <span style=\"color: #99cc00;\"><em># 由init执行的第一个脚本</em></span>\r\n/etc/rc.d/rc $RUNLEVEL <em><span style=\"color: #99cc00;\"># $RUNLEVEL为缺省的运行模式</span></em>\r\n/etc/rc.d/rc.local\r\n/sbin/mingetty <span style=\"color: #99cc00;\"><em># 等待用户登录</em></span>\r\n\r\n在Redhat中，/etc/rc.d/rc.sysinit主要做在各个运行模式中相同的初始化工作，包括：\r\n调入keymap以及系统字体\r\n启动swapping\r\n设置主机名\r\n设置NIS域名\r\n检查（fsck）并mount文件系统\r\n打开quota\r\n装载声卡模块\r\n设置系统时钟\r\n等等。\r\n/etc/rc.d/rc则根据其参数指定的运行模式(运行级别，你在/etc/inittab文件中可以设置)来执行相应目录下的脚本。凡是以Kxx开头的\r\n，都以stop为参数来调用；凡是以Sxx开头的，都以start为参数来调用。调用的顺序按xx\r\n从小到大来执行。例如，假设缺省的运行模式是3，/etc/rc.d/rc就会按上述方式调用\r\n/etc/rc.d/rc3.d/下的脚本。\r\n值得一提的是，Redhat中的运行模式2、3、5都把/etc/rc.d/rc.local做为初始化脚本中\r\n的最后一个，所以用户可以自己在这个文件中添加一些需要在其他初始化工作之后，登录之前执行的命令。\r\n\r\ninit在等待/etc/rc.d/rc执行完毕之后（因为在/etc/inittab中/etc/rc.d/rc的 action是wait），将在指定的各个虚拟终端上运行/sbin/mingetty，等待用户的登录。\r\n至此，LINUX的启动结束。\r\n\r\n使用者自订开机启动程序 (/etc/rc.d/rc.local)\r\n如果所做的修改只在引导开机的时候起作用，并且改动不大的话，可以考虑简单地编辑一下/etc/rc.d/rc.local脚本。这个命令脚本程序是在引导过程的最后一步被执行的。如果所做的修改比较细致，或者还要求关闭进程使之明确地停止运行，则需要在/etc/rc.d/init.d子目录中添加一个命令脚本程序。这个命令脚本程序必须可以接受Start和Stop参数并完成相应的操作。','rc.d 目录','','inherit','open','open','','109-revision-v1','','','2015-11-14 08:29:27','2015-11-14 08:29:27','',109,'http://blog.raymond.com/?p=114',0,'revision','',0),(115,1,'2015-12-07 13:39:12','2015-12-07 13:39:12','<p style=\"text-align: left;\">使用 git 一般有一个 origin分支 作为 “中心仓库”（由于Git是DVCS [分布式版本控制系统]，在技术层面没有中心库这一东西）。\r\n中心仓库包含了两个主要分支，这两个分支的寿命是无限的：\r\n<strong>master</strong>\r\n<strong>develop</strong></p>\r\n我们认为origin/develop分支上的HEAD源码反映了开发过程中最新的提交变更。有人会称之为“集成分支”。该分支是自动化每日构建的代码源。\r\n当develop分支上的源码到达一个稳定的状态时，就可以发布版本。所有develop上的变更都应该以某种方式合并回master分支，并且使用发布版本号打上标签。\r\n\r\n因此，每次有变化被合并到master分支时，根据定义这就是一次新的产品版本发布。我们趋向于严格遵守该规范，所以理论上来说，每次master有提交时，我们都可以使用一个Git钩子（hook）脚本来自动构建并部署软件至产品环境服务器。\r\n<strong>支持性分支</strong>\r\n\r\n紧接着主要分支master和develop，我们的开发模型使用多种支持性分支来帮助团队成员间实现并行开发、追踪产品特性、准备产品版本发布、以及快速修复产品问题。与主要分支不同的是，这些分支的寿命是有限的，它们最终都会被删除。\r\n\r\n我们会用到的分支有这几类：\r\n特性分支（feature branch）\r\n发布分支（release branch）\r\n热补丁分支（hotfix branch）\r\n\r\n<strong>特性分支</strong>\r\n\r\n可能的分支来源：develop\r\n必须合并回：develop\r\n分支命令约定：任何除master, develop, release-*, 或 hotfix-*以外的名称\r\n特性分支（有时也被称作topic分支）是用来为下一发布版本开发新特性。当开始开发一个特性的时候，该特性会成为哪个发布版本的一部分，往往还不知道。特性分支的重点是，只要特性还在开发，该分支就会一直存在，不过它最终会被合并回develop分支（将该特性加入到发布版本中），或者被丢弃（如果试验的结果令人失望）。\r\n<pre>git checkout -b myfeature develop\r\nmyfeature开发完毕之后。。。\r\ngit checkout develop\r\ngit merge –no-ff myfeature\r\ngit branch -d myfeature\r\ngit push origin develop</pre>\r\n<strong>发布分支</strong>\r\n\r\n可能的分支来源：develop\r\n必须合并回：develop和master\r\n分支命名约定：release-*\r\n发布分支为准备新的产品版本发布做支持。它允许你在最后时刻检查所有的细节。此外，它还允许你修复小bug以及准备版本发布的元数据（例如版本号，构建日期等等）。在发布分支做这些事情之后，develop分支就会显得比较干净，也方便为下一大版本发布接受特性。\r\n从develop分支创建发布分支的时间通常是develop分支（差不多）能反映新版本所期望状态的时候。至少说，这是时候版本发布所计划的特性都已经合并回了develop分支。而未来其它版本发布计划的特性则不应该合并，它们必须等到当前的版本分支创建好之后才能合并。\r\n正是在发布分支创建的时候，对应的版本发布才获得一个版本号——不能更早。在该时刻之前，develop分支反映的是“下一版本”的相关变更，但不知道这“下一版本”到底会成为0.3还是1.0，直到发布分支被创建。版本号是在发布分支创建时，基于项目版本号规则确定的。\r\n<pre>git checkout -b releases-1.2 develop\r\n./bump-version.sh 1.2\r\ngit commit -a -m “Bumped version number to 1.2”\r\n发布分支达到一个可以正式发布的状态时。。。\r\ngit checkout master\r\ngit merge –no-ff release-1.2\r\ngit tag -a 1.2\r\ngit checkout develop\r\ngit merge –no-ff release-1.2（这一操作可能会导致合并冲突，可能性还很大，因为我们改变了版本号。如果发现，则修复之并提交。）\r\ngit branch -d release-1.2</pre>\r\n<strong>热补丁分支</strong>\r\n\r\n可能的分支来源：master\r\n必须合并回：develop和master\r\n分支命名约定：hotfix-*\r\n热补丁分支和发布分支十分类似，它的目的也是发布一个新的产品版本，尽管是不在计划中的版本发布。当产品版本发现未预期的问题的时候，就需要理解着手处理，这个时候就要用到热补丁分支。当产品版本的重大bug需要立即解决的时候，我们从对应版本的标签创建出一个热补丁分支。\r\n使用热补丁分支的主要作用是（develop分支上的）团队成员可以继续工作，而另外的人可以在热补丁分支上进行快速的产品bug修复。\r\n<pre>git checkout -b hotfix-1.2.1 master\r\n./bump-version.sh 1.2.1\r\ngit commit -a -m “Bumped version number to 1.2.1″\r\n修复bug并使用一个或者多个单独的commit提交\r\ngit commit -m “Fixed severe production problem”\r\n修复完成后，热补丁分支需要合并回master，但同时它还需要被合并回develop</pre>\r\n<pre>git checkout master\r\ngit merge –no-ff hotfix-1.2.1\r\ngit tag -a 1.2.1\r\ngit checkout develop\r\ngit merge –no-ff hotfix-1.2.1\r\ngit branch -d hotfix-1.2.1</pre>','Git分支模型','','publish','open','open','','git%e5%88%86%e6%94%af%e6%a8%a1%e5%9e%8b','','','2015-12-07 13:39:12','2015-12-07 13:39:12','',0,'http://blog.raymond.com/?p=115',0,'post','',0),(116,1,'2015-12-07 13:39:12','2015-12-07 13:39:12','<p style=\"text-align: left;\">使用 git 一般有一个 origin分支 作为 “中心仓库”（由于Git是DVCS [分布式版本控制系统]，在技术层面没有中心库这一东西）。\r\n中心仓库包含了两个主要分支，这两个分支的寿命是无限的：\r\n<strong>master</strong>\r\n<strong>develop</strong></p>\r\n我们认为origin/develop分支上的HEAD源码反映了开发过程中最新的提交变更。有人会称之为“集成分支”。该分支是自动化每日构建的代码源。\r\n当develop分支上的源码到达一个稳定的状态时，就可以发布版本。所有develop上的变更都应该以某种方式合并回master分支，并且使用发布版本号打上标签。\r\n\r\n因此，每次有变化被合并到master分支时，根据定义这就是一次新的产品版本发布。我们趋向于严格遵守该规范，所以理论上来说，每次master有提交时，我们都可以使用一个Git钩子（hook）脚本来自动构建并部署软件至产品环境服务器。\r\n<strong>支持性分支</strong>\r\n\r\n紧接着主要分支master和develop，我们的开发模型使用多种支持性分支来帮助团队成员间实现并行开发、追踪产品特性、准备产品版本发布、以及快速修复产品问题。与主要分支不同的是，这些分支的寿命是有限的，它们最终都会被删除。\r\n\r\n我们会用到的分支有这几类：\r\n特性分支（feature branch）\r\n发布分支（release branch）\r\n热补丁分支（hotfix branch）\r\n\r\n<strong>特性分支</strong>\r\n\r\n可能的分支来源：develop\r\n必须合并回：develop\r\n分支命令约定：任何除master, develop, release-*, 或 hotfix-*以外的名称\r\n特性分支（有时也被称作topic分支）是用来为下一发布版本开发新特性。当开始开发一个特性的时候，该特性会成为哪个发布版本的一部分，往往还不知道。特性分支的重点是，只要特性还在开发，该分支就会一直存在，不过它最终会被合并回develop分支（将该特性加入到发布版本中），或者被丢弃（如果试验的结果令人失望）。\r\n<pre>git checkout -b myfeature develop\r\nmyfeature开发完毕之后。。。\r\ngit checkout develop\r\ngit merge –no-ff myfeature\r\ngit branch -d myfeature\r\ngit push origin develop</pre>\r\n<strong>发布分支</strong>\r\n\r\n可能的分支来源：develop\r\n必须合并回：develop和master\r\n分支命名约定：release-*\r\n发布分支为准备新的产品版本发布做支持。它允许你在最后时刻检查所有的细节。此外，它还允许你修复小bug以及准备版本发布的元数据（例如版本号，构建日期等等）。在发布分支做这些事情之后，develop分支就会显得比较干净，也方便为下一大版本发布接受特性。\r\n从develop分支创建发布分支的时间通常是develop分支（差不多）能反映新版本所期望状态的时候。至少说，这是时候版本发布所计划的特性都已经合并回了develop分支。而未来其它版本发布计划的特性则不应该合并，它们必须等到当前的版本分支创建好之后才能合并。\r\n正是在发布分支创建的时候，对应的版本发布才获得一个版本号——不能更早。在该时刻之前，develop分支反映的是“下一版本”的相关变更，但不知道这“下一版本”到底会成为0.3还是1.0，直到发布分支被创建。版本号是在发布分支创建时，基于项目版本号规则确定的。\r\n<pre>git checkout -b releases-1.2 develop\r\n./bump-version.sh 1.2\r\ngit commit -a -m “Bumped version number to 1.2”\r\n发布分支达到一个可以正式发布的状态时。。。\r\ngit checkout master\r\ngit merge –no-ff release-1.2\r\ngit tag -a 1.2\r\ngit checkout develop\r\ngit merge –no-ff release-1.2（这一操作可能会导致合并冲突，可能性还很大，因为我们改变了版本号。如果发现，则修复之并提交。）\r\ngit branch -d release-1.2</pre>\r\n<strong>热补丁分支</strong>\r\n\r\n可能的分支来源：master\r\n必须合并回：develop和master\r\n分支命名约定：hotfix-*\r\n热补丁分支和发布分支十分类似，它的目的也是发布一个新的产品版本，尽管是不在计划中的版本发布。当产品版本发现未预期的问题的时候，就需要理解着手处理，这个时候就要用到热补丁分支。当产品版本的重大bug需要立即解决的时候，我们从对应版本的标签创建出一个热补丁分支。\r\n使用热补丁分支的主要作用是（develop分支上的）团队成员可以继续工作，而另外的人可以在热补丁分支上进行快速的产品bug修复。\r\n<pre>git checkout -b hotfix-1.2.1 master\r\n./bump-version.sh 1.2.1\r\ngit commit -a -m “Bumped version number to 1.2.1″\r\n修复bug并使用一个或者多个单独的commit提交\r\ngit commit -m “Fixed severe production problem”\r\n修复完成后，热补丁分支需要合并回master，但同时它还需要被合并回develop</pre>\r\n<pre>git checkout master\r\ngit merge –no-ff hotfix-1.2.1\r\ngit tag -a 1.2.1\r\ngit checkout develop\r\ngit merge –no-ff hotfix-1.2.1\r\ngit branch -d hotfix-1.2.1</pre>','Git分支模型','','inherit','open','open','','115-revision-v1','','','2015-12-07 13:39:12','2015-12-07 13:39:12','',115,'http://blog.raymond.com/?p=116',0,'revision','',0),(117,1,'2015-12-11 10:00:43','2015-12-11 10:00:43','1、应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。\r\n\r\n2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。\r\n\r\n3、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：\r\n\r\nselect id from t where num is null\r\n\r\n可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：\r\n\r\nselect id from t where num=0\r\n\r\n4、尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：\r\n\r\nselect id from t where num=10 or num=20\r\n\r\n可以这样查询：\r\n\r\nselect id from t where num=10\r\n\r\nunion all\r\n\r\nselect id from t where num=20\r\n\r\n5、下面的查询也将导致全表扫描：(不能前置百分号)\r\n\r\nselect id from t where name like ‘?c%’\r\n\r\n若要提高效率，可以考虑全文检索。\r\n\r\n6、in 和 not in 也要慎用，否则会导致全表扫描，如：\r\n\r\nselect id from t where num in(1,2,3)\r\n\r\n对于连续的数值，能用 between 就不要用 in 了：\r\n\r\nselect id from t where num between 1 and 3\r\n\r\n7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：\r\n\r\nselect id from t where num=@num\r\n\r\n可以改为强制查询使用索引：\r\n\r\nselect id from t with(index(索引名)) where num=@num\r\n\r\n8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：\r\n\r\nselect id from t where num/2=100\r\n\r\n应改为:\r\n\r\nselect id from t where num=100*2\r\n\r\n9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：\r\n\r\nselect id from t where substring(name,1,3)=’abc’–name以abc开头的id\r\n\r\nselect id from t where datediff(day,createdate,’2005-11-30′)=0–’2005-11-30′生成的id\r\n\r\n应改为:\r\n\r\nselect id from t where name like ‘abc%’\r\n\r\nselect id from t where createdate&gt;=’2005-11-30′ andcreatedate&lt;’2005-12-1′\r\n\r\n10、不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\r\n\r\n11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\r\n\r\n12、不要写一些没有意义的查询，如需要生成一个空表结构：\r\n\r\nselect col1,col2 into #t from t where 1=0\r\n\r\n这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：\r\n\r\ncreate table #t(…)\r\n\r\n13、很多时候用 exists 代替 in 是一个好的选择：\r\n\r\nselect num from a where num in(select num from b)\r\n\r\n用下面的语句替换：\r\n\r\nselect num from a where exists(select 1 from b where num=a.num)\r\n\r\n14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段 sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。\r\n\r\n15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。\r\n\r\n16.应尽可能的避免更新 clustered 索引数据列，因为clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。\r\n\r\n17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。\r\n\r\n18、尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。\r\n\r\n19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。\r\n\r\n20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。\r\n\r\n21、避免频繁创建和删除临时表，以减少系统表资源的消耗。\r\n\r\n22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。\r\n\r\n23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。\r\n\r\n24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。\r\n\r\n25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。\r\n\r\n26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\r\n\r\n27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\r\n\r\n28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SETNOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。\r\n\r\n29、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。\r\n\r\n30、尽量避免大事务操作，提高系统并发能力。','30种SQL查询语句优化方法','','publish','open','open','','30%e7%a7%8dsql%e6%9f%a5%e8%af%a2%e8%af%ad%e5%8f%a5%e4%bc%98%e5%8c%96%e6%96%b9%e6%b3%95','','','2015-12-11 10:00:43','2015-12-11 10:00:43','',0,'http://blog.raymond.com/?p=117',0,'post','',0),(118,1,'2015-12-11 10:00:43','2015-12-11 10:00:43','1、应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。\r\n\r\n2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。\r\n\r\n3、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：\r\n\r\nselect id from t where num is null\r\n\r\n可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：\r\n\r\nselect id from t where num=0\r\n\r\n4、尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：\r\n\r\nselect id from t where num=10 or num=20\r\n\r\n可以这样查询：\r\n\r\nselect id from t where num=10\r\n\r\nunion all\r\n\r\nselect id from t where num=20\r\n\r\n5、下面的查询也将导致全表扫描：(不能前置百分号)\r\n\r\nselect id from t where name like ‘?c%’\r\n\r\n若要提高效率，可以考虑全文检索。\r\n\r\n6、in 和 not in 也要慎用，否则会导致全表扫描，如：\r\n\r\nselect id from t where num in(1,2,3)\r\n\r\n对于连续的数值，能用 between 就不要用 in 了：\r\n\r\nselect id from t where num between 1 and 3\r\n\r\n7、如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：\r\n\r\nselect id from t where num=@num\r\n\r\n可以改为强制查询使用索引：\r\n\r\nselect id from t with(index(索引名)) where num=@num\r\n\r\n8、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：\r\n\r\nselect id from t where num/2=100\r\n\r\n应改为:\r\n\r\nselect id from t where num=100*2\r\n\r\n9、应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：\r\n\r\nselect id from t where substring(name,1,3)=’abc’–name以abc开头的id\r\n\r\nselect id from t where datediff(day,createdate,’2005-11-30′)=0–’2005-11-30′生成的id\r\n\r\n应改为:\r\n\r\nselect id from t where name like ‘abc%’\r\n\r\nselect id from t where createdate&gt;=’2005-11-30′ andcreatedate&lt;’2005-12-1′\r\n\r\n10、不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\r\n\r\n11、在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\r\n\r\n12、不要写一些没有意义的查询，如需要生成一个空表结构：\r\n\r\nselect col1,col2 into #t from t where 1=0\r\n\r\n这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：\r\n\r\ncreate table #t(…)\r\n\r\n13、很多时候用 exists 代替 in 是一个好的选择：\r\n\r\nselect num from a where num in(select num from b)\r\n\r\n用下面的语句替换：\r\n\r\nselect num from a where exists(select 1 from b where num=a.num)\r\n\r\n14、并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段 sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。\r\n\r\n15、索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。\r\n\r\n16.应尽可能的避免更新 clustered 索引数据列，因为clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。\r\n\r\n17、尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。\r\n\r\n18、尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。\r\n\r\n19、任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。\r\n\r\n20、尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。\r\n\r\n21、避免频繁创建和删除临时表，以减少系统表资源的消耗。\r\n\r\n22、临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。\r\n\r\n23、在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。\r\n\r\n24、如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。\r\n\r\n25、尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。\r\n\r\n26、使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\r\n\r\n27、与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\r\n\r\n28、在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SETNOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。\r\n\r\n29、尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。\r\n\r\n30、尽量避免大事务操作，提高系统并发能力。','30种SQL查询语句优化方法','','inherit','open','open','','117-revision-v1','','','2015-12-11 10:00:43','2015-12-11 10:00:43','',117,'http://blog.raymond.com/?p=118',0,'revision','',0),(119,1,'2015-12-17 13:05:34','2015-12-17 13:05:34','首先，理解一个概念，callback hell。\r\ncallback hell，地狱般的回调，这里的地狱指的是代码的格式。一般来说，回调是作为一层函数内部的嵌套（或者作为函数参数）存在，而回调肯定是函数，如果函数里面还存在 if else,for,while...这些代码，那么画面就是这样的\r\n<pre>\r\ncallback_test(arg, function(err, data) {\r\n if (err) {\r\n //log\r\n } else {\r\n for(da in data) {//read data\r\n //do sth.\r\n anotherfun(da).do(\r\n function(err, values) {\r\n if (err) {\r\n //log error\r\n } else {\r\n //do sth.\r\n values.forEach(function(arg1, arg2) {\r\n //do sth.\r\n }.bind(this)\r\n )\r\n }\r\n })\r\n }\r\n }\r\n})</pre>\r\n以上只是伪代码，当然有些夸张，但是我们只是多嵌套了几层循环和回调，很明显你已经疯掉了\r\n\r\n在js规范里面，避免这种 callback hell 的方式主要有几个：\r\nName your functions\r\nKeep your code shallow\r\nModularize\r\n这里不细致展开，但是有一点就是，对于简单回调，这种方法可能够了，但是对于需要嵌N层回调的需求，因为回调是异步的，回调代码执行的时候之前函数的控制流早已不存在，如果你需要在回调里面获得之前的信息，需要不停地重新判断、定义函数，不断传值，代码很容易变得破碎而且冗余。\r\n\r\n这时候，如果有一种异步代码，能像同步代码那样保持着控制流，函数语义这些东西，那就完美了。\r\n我在一个世界里面定义了回调，如果回调执行的时候，世界还是那个世界。\r\n这种带有延续性功能的函数叫 ———— promises。\r\n\r\n从高比格的角度解释，一般我们说：Promises是一个抽象。如果让我从低比格来定义，我会说：promise一种可同步的异步函数。\r\n\r\npromise 是怎么保证同步的呢？主要依靠then方法。\r\nthen方法是promise对象的核心部件，我们可以用这个方法从异步操作中得到返回值，或抛出的异常，该方法返回的结果还是promise（也就是，他的返回结果又能执行then了），因此promise可以形成调用链。\r\n\r\n我们用promise 一个“最强”的功能来作为例子——错误处理\r\n<pre>doAsync()\r\n .then(doAsync2)\r\n .then(null, console.error)</pre>\r\nthen方法有两个可选的参数，都是callback函数，分别是 onFulfilled 和 onRejected\r\n<pre>var promise2 = promise.then(onFulfilled, onRejected)</pre>\r\npromise被解决时（异步处理已经完成）会调用onFulfilled 和 onRejected 。因为只会有一种结果，所以这两个函数中仅有一个会被触发。\r\n\r\n在上面的例子中：\r\n如果 doAsync()成功了，接下来就是继续执行 doAsync2\r\n如果 doAsync()没有成功，它的promise会被拒，像 try catch一样，接下来的代码doAsync2()不会被执行，处理链的下一个onRejected会被调用。在上例中就是函数console.error。\r\n\r\n一般我们会在promise处理链的最后加一个.then(null, onRejected)用以处理被屏蔽的错误\r\n\r\nthen方法成功执行，会返回promise，它在异步操作完成后发信号给下一个then。如果在方法中有return，return的值会传给下一个onFulfilled做参数\r\n<pre>\r\nreadFile()\r\n .then(function (buf) {\r\n return JSON.parse(buf.toString())\r\n })\r\n .then(function (data) {\r\n // do something with `data`\r\n })</pre>\r\n在上面例子的第二个then中，接收的data 参数就是 第一个then中返回的缓存信息。','promises','','publish','open','open','','promises','','','2015-12-17 14:09:05','2015-12-17 14:09:05','',0,'http://blog.raymond.com/?p=119',0,'post','',0),(120,1,'2015-12-17 13:05:34','2015-12-17 13:05:34','首先，理解一个概念，callback hell。 callback hell，地狱般的回调，这里的地狱指的是代码的格式。一般来说，回调是作为一层函数内部的嵌套（或者作为函数参数）存在，而回调肯定是函数，如果函数里面还存在 if else,for,while...这些代码，那么画面就是这样的 callback_test(arg, function(err, data) { if (err) { //log } else { for(da in data) {//read data //do sth. anotherfun(da).do( function(err, values) { if (err) { //log error } else { //do sth. values.forEach(function(arg1, arg2) { //do sth. }.bind(this) ) } }) } } }) 以上只是伪代码，当然有些夸张，但是我们只是多嵌套了几层循环和回调，很明显你已经疯掉了 在js规范里面，避免这种 callback hell 的方式主要有几个： Name your functions Keep your code shallow Modularize 这里不细致展开，但是有一点就是，对于简单回调，这种方法可能够了，但是对于需要嵌N层回调的需求，因为回调是异步的，回调代码执行的时候之前函数的控制流早已不存在，如果你需要在回调里面获得之前的信息，需要不停地重新判断、定义函数，不断传值，代码很容易变得破碎而且冗余。 这时候，如果有一种异步代码，能像同步代码那样保持着控制流，函数语义这些东西，那就完美了。 我在一个世界里面定义了回调，如果回调执行的时候，世界还是那个世界。 这种带有延续性功能的函数叫 ———— promises。 从高比格的角度解释，一般我们说：Promises是一个抽象。如果让我从低比格来定义，我会说：promise一种可同步的异步函数。 promise对象的核心部件是它的then方法。我们可以用这个方法从异步操作中得到返回值，或抛出的异常。then方法有两个可选的参数，都是callback函数，分别是onFulfilled 和 onRejected','promises','','inherit','open','open','','119-revision-v1','','','2015-12-17 13:05:34','2015-12-17 13:05:34','',119,'http://blog.raymond.com/?p=120',0,'revision','',0),(121,1,'2015-12-17 14:08:53','2015-12-17 14:08:53','首先，理解一个概念，callback hell。\ncallback hell，地狱般的回调，这里的地狱指的是代码的格式。一般来说，回调是作为一层函数内部的嵌套（或者作为函数参数）存在，而回调肯定是函数，如果函数里面还存在 if else,for,while...这些代码，那么画面就是这样的\n<pre>\ncallback_test(arg, function(err, data) {\n if (err) {\n //log\n } else {\n for(da in data) {//read data\n //do sth.\n anotherfun(da).do(\n function(err, values) {\n if (err) {\n //log error\n } else {\n //do sth.\n values.forEach(function(arg1, arg2) {\n //do sth.\n }.bind(this)\n )\n }\n })\n }\n }\n})</pre>\n以上只是伪代码，当然有些夸张，但是我们只是多嵌套了几层循环和回调，很明显你已经疯掉了\n\n在js规范里面，避免这种 callback hell 的方式主要有几个：\nName your functions\nKeep your code shallow\nModularize\n这里不细致展开，但是有一点就是，对于简单回调，这种方法可能够了，但是对于需要嵌N层回调的需求，因为回调是异步的，回调代码执行的时候之前函数的控制流早已不存在，如果你需要在回调里面获得之前的信息，需要不停地重新判断、定义函数，不断传值，代码很容易变得破碎而且冗余。\n\n这时候，如果有一种异步代码，能像同步代码那样保持着控制流，函数语义这些东西，那就完美了。\n我在一个世界里面定义了回调，如果回调执行的时候，世界还是那个世界。\n这种带有延续性功能的函数叫 ———— promises。\n\n从高比格的角度解释，一般我们说：Promises是一个抽象。如果让我从低比格来定义，我会说：promise一种可同步的异步函数。\n\npromise 是怎么保证同步的呢？主要依靠then方法。\nthen方法是promise对象的核心部件，我们可以用这个方法从异步操作中得到返回值，或抛出的异常，该方法返回的结果还是promise（也就是，他的返回结果又能执行then了），因此promise可以形成调用链。\n\n我们用promise 一个“最强”的功能来作为例子——错误处理\n<pre>doAsync()\n .then(doAsync2)\n .then(null, console.error)</pre>\nthen方法有两个可选的参数，都是callback函数，分别是 onFulfilled 和 onRejected\n<pre>var promise2 = promise.then(onFulfilled, onRejected)</pre>\npromise被解决时（异步处理已经完成）会调用onFulfilled 和 onRejected 。因为只会有一种结果，所以这两个函数中仅有一个会被触发。\n\n在上面的例子中：\n如果 doAsync()成功了，接下来就是继续执行 doAsync2\n如果 doAsync()没有成功，它的promise会被拒，像 try catch一样，接下来的代码doAsync2()不会被执行，处理链的下一个onRejected会被调用。在上例中就是函数console.error。\n\n一般我们会在promise处理链的最后加一个.then(null, onRejected)用以处理被屏蔽的错误\n\nthen方法成功执行，会返回promise，它在异步操作完成后发信号给下一个then。如果在方法中有return，return的值会传给下一个onFulfilled做参数\n<pre>\nreadFile()\n .then(function (buf) {\n return JSON.parse(buf.toString())\n })\n .then(function (data) {\n // do something with `data`\n })</pre>\n在上面例子的第二个then中，接收的data 参数就是 第一个then中返回的缓存信息。','promises','','inherit','open','open','','119-autosave-v1','','','2015-12-17 14:08:53','2015-12-17 14:08:53','',119,'http://blog.raymond.com/?p=121',0,'revision','',0),(122,1,'2015-12-17 14:09:05','2015-12-17 14:09:05','首先，理解一个概念，callback hell。\r\ncallback hell，地狱般的回调，这里的地狱指的是代码的格式。一般来说，回调是作为一层函数内部的嵌套（或者作为函数参数）存在，而回调肯定是函数，如果函数里面还存在 if else,for,while...这些代码，那么画面就是这样的\r\n<pre>\r\ncallback_test(arg, function(err, data) {\r\n if (err) {\r\n //log\r\n } else {\r\n for(da in data) {//read data\r\n //do sth.\r\n anotherfun(da).do(\r\n function(err, values) {\r\n if (err) {\r\n //log error\r\n } else {\r\n //do sth.\r\n values.forEach(function(arg1, arg2) {\r\n //do sth.\r\n }.bind(this)\r\n )\r\n }\r\n })\r\n }\r\n }\r\n})</pre>\r\n以上只是伪代码，当然有些夸张，但是我们只是多嵌套了几层循环和回调，很明显你已经疯掉了\r\n\r\n在js规范里面，避免这种 callback hell 的方式主要有几个：\r\nName your functions\r\nKeep your code shallow\r\nModularize\r\n这里不细致展开，但是有一点就是，对于简单回调，这种方法可能够了，但是对于需要嵌N层回调的需求，因为回调是异步的，回调代码执行的时候之前函数的控制流早已不存在，如果你需要在回调里面获得之前的信息，需要不停地重新判断、定义函数，不断传值，代码很容易变得破碎而且冗余。\r\n\r\n这时候，如果有一种异步代码，能像同步代码那样保持着控制流，函数语义这些东西，那就完美了。\r\n我在一个世界里面定义了回调，如果回调执行的时候，世界还是那个世界。\r\n这种带有延续性功能的函数叫 ———— promises。\r\n\r\n从高比格的角度解释，一般我们说：Promises是一个抽象。如果让我从低比格来定义，我会说：promise一种可同步的异步函数。\r\n\r\npromise 是怎么保证同步的呢？主要依靠then方法。\r\nthen方法是promise对象的核心部件，我们可以用这个方法从异步操作中得到返回值，或抛出的异常，该方法返回的结果还是promise（也就是，他的返回结果又能执行then了），因此promise可以形成调用链。\r\n\r\n我们用promise 一个“最强”的功能来作为例子——错误处理\r\n<pre>doAsync()\r\n .then(doAsync2)\r\n .then(null, console.error)</pre>\r\nthen方法有两个可选的参数，都是callback函数，分别是 onFulfilled 和 onRejected\r\n<pre>var promise2 = promise.then(onFulfilled, onRejected)</pre>\r\npromise被解决时（异步处理已经完成）会调用onFulfilled 和 onRejected 。因为只会有一种结果，所以这两个函数中仅有一个会被触发。\r\n\r\n在上面的例子中：\r\n如果 doAsync()成功了，接下来就是继续执行 doAsync2\r\n如果 doAsync()没有成功，它的promise会被拒，像 try catch一样，接下来的代码doAsync2()不会被执行，处理链的下一个onRejected会被调用。在上例中就是函数console.error。\r\n\r\n一般我们会在promise处理链的最后加一个.then(null, onRejected)用以处理被屏蔽的错误\r\n\r\nthen方法成功执行，会返回promise，它在异步操作完成后发信号给下一个then。如果在方法中有return，return的值会传给下一个onFulfilled做参数\r\n<pre>\r\nreadFile()\r\n .then(function (buf) {\r\n return JSON.parse(buf.toString())\r\n })\r\n .then(function (data) {\r\n // do something with `data`\r\n })</pre>\r\n在上面例子的第二个then中，接收的data 参数就是 第一个then中返回的缓存信息。','promises','','inherit','open','open','','119-revision-v1','','','2015-12-17 14:09:05','2015-12-17 14:09:05','',119,'http://blog.raymond.com/?p=122',0,'revision','',0),(123,1,'2016-01-04 10:17:05','2016-01-04 10:17:05','<strong>vsftpd——“very secure FTP daemon(非常安全的FTP进程)”</strong>，是一个基于GPL发布的类UNIX类操作系统上运行的服务器的名字（是一种守护进程），可以运行在诸如Linux、BSD、Solaris、HP-UX以及Irix等系统上面。vsftpd支持很多其他传统的FTP服务器不支持的良好特性。\r\n\r\n比如：\r\n\r\n非常高的安全性需求\r\n带宽限制\r\n良好的可伸缩性\r\n创建虚拟用户的可能性\r\nIPv6支持\r\n中等偏上的性能\r\n分配虚拟 IP 的可能性\r\n高速\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<strong>安装</strong>\r\n<pre><span style=\"color: #99cc00;\"># 安装vsftpd</span>\r\nyum -y install vsftpd</pre>\r\n&nbsp;\r\n\r\n<strong>配置服务</strong>\r\n<pre><span style=\"color: #99cc00;\">#启动ftp服务</span>\r\nservice vsftpd start\r\n<span style=\"color: #99cc00;\"># 查看ftp服务状态</span>\r\nservice vsftpd status \r\n<span style=\"color: #99cc00;\"># 重启ftp服务</span>\r\nservice vsftpd restart\r\n<span style=\"color: #99cc00;\"># 关闭ftp服务</span>\r\nservice vsftpd stop\r\n<span style=\"color: #99cc00;\"># ftp服务开启启动</span>\r\nchkconfig vsftpd on</pre>\r\n<strong>修改vsftpd配置文件 /etc/vsftpd/vsftpd.conf</strong>\r\n<pre><span style=\"color: #99cc00;\"># 禁止匿名用户anonymous登录</span>\r\nanonymous_enable=NO\r\n\r\n<span style=\"color: #99cc00;\"># 允许本地用户登录</span>\r\nlocal_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 让登录的用户有写权限(上传，删除)</span>\r\nwrite_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 默认umask</span>\r\nlocal_umask=022\r\n\r\n<span style=\"color: #99cc00;\"># 把传输记录的日志保存到/var/log/vsftpd.log</span>\r\nxferlog_enable=YES\r\nxferlog_file=/var/log/vsftpd.log\r\nxferlog_std_format=NO\r\n\r\n<span style=\"color: #99cc00;\"># 允许ASCII模式上传下载</span>\r\nascii_upload_enable=YES \r\nascii_download_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 使用20号端口传输数据</span>\r\nconnect_from_port_20=YES\r\n\r\n<span style=\"color: #99cc00;\"># 欢迎标语</span>\r\nftpd_banner=Welcome to use my test ftp server.\r\n\r\n<span style=\"color: #99cc00;\"># chroot_local_user 是默认配置，如果设置为 YES，则新建用户默认chroot，设置 NO 则相反</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_enable 和 chroot_list_file 配合使用，设置 chroot_local_user 的特例，系统会读取 chroot_list_file 里面的内容，并设置为 chroot_list_enable，覆盖 chroot_local_user</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_file 设置 用户名（一行一个）</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_enable 是设置 chroot_list_file 的效果，YES 为chroot（只能访问自己的根目录），NO 为不限制</span>\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n<span style=\"color: #99cc00;\"># 以standalone模式在ipv4上运行</span>\r\nlisten=YES\r\n\r\n<span style=\"color: #99cc00;\"># PAM认证服务名，这里默认是vsftpd，在安装vsftpd的时候已经创建了这个pam文件， 在/etc/pam.d/vsftpd，根据这个pam文件里的设置，/etc/vsftpd/ftpusers文件里的用户将禁止登录ftp服务器，比如root这样敏感的用户，所以你要禁止别的用户 登录的时候，也可以把该用户追加到/etc/vsftpd/ftpusers里。</span>\r\npam_service_name=vsftpd</pre>\r\n<strong>防火墙规则</strong>\r\n<pre>/sbin/iptables -I INPUT -p tcp --dport 21 -j ACCEPT\r\n/etc/rc.d/init.d/iptables save\r\n/etc/init.d/iptables restart</pre>\r\n&nbsp;\r\n\r\n<strong>用户</strong>\r\n<pre><span style=\"color: #99cc00;\"># 创建用户</span>\r\nuseradd -d /home/3s-support/ -s /sbin/nologin -m 3s-support\r\n<span style=\"color: #99cc00;\"># 设置用户到文件夹</span>\r\nchown -R 3s-support /home/3s-support\r\n<span style=\"color: #99cc00;\"># 设置权限</span>\r\nchmod -R 777 /home/3s-support/\r\n<span style=\"color: #99cc00;\"># 添加密码</span>\r\npasswd 3s-support</pre>','linux 设置 ftp 服务器','','publish','open','open','','linux-%e8%ae%be%e7%bd%ae-ftp-%e6%9c%8d%e5%8a%a1%e5%99%a8','','','2016-01-04 10:17:05','2016-01-04 10:17:05','',0,'http://blog.raymond.com/?p=123',0,'post','',0),(124,1,'2016-01-04 10:17:05','2016-01-04 10:17:05','<strong>vsftpd——“very secure FTP daemon(非常安全的FTP进程)”</strong>，是一个基于GPL发布的类UNIX类操作系统上运行的服务器的名字（是一种守护进程），可以运行在诸如Linux、BSD、Solaris、HP-UX以及Irix等系统上面。vsftpd支持很多其他传统的FTP服务器不支持的良好特性。\r\n\r\n比如：\r\n\r\n非常高的安全性需求\r\n带宽限制\r\n良好的可伸缩性\r\n创建虚拟用户的可能性\r\nIPv6支持\r\n中等偏上的性能\r\n分配虚拟 IP 的可能性\r\n高速\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<strong>安装</strong>\r\n<pre><span style=\"color: #99cc00;\"># 安装vsftpd</span>\r\nyum -y install vsftpd</pre>\r\n&nbsp;\r\n\r\n<strong>配置服务</strong>\r\n<pre><span style=\"color: #99cc00;\">#启动ftp服务</span>\r\nservice vsftpd start\r\n<span style=\"color: #99cc00;\"># 查看ftp服务状态</span>\r\nservice vsftpd status \r\n<span style=\"color: #99cc00;\"># 重启ftp服务</span>\r\nservice vsftpd restart\r\n<span style=\"color: #99cc00;\"># 关闭ftp服务</span>\r\nservice vsftpd stop\r\n<span style=\"color: #99cc00;\"># ftp服务开启启动</span>\r\nchkconfig vsftpd on</pre>\r\n<strong>修改vsftpd配置文件 /etc/vsftpd/vsftpd.conf</strong>\r\n<pre><span style=\"color: #99cc00;\"># 禁止匿名用户anonymous登录</span>\r\nanonymous_enable=NO\r\n\r\n<span style=\"color: #99cc00;\"># 允许本地用户登录</span>\r\nlocal_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 让登录的用户有写权限(上传，删除)</span>\r\nwrite_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 默认umask</span>\r\nlocal_umask=022\r\n\r\n<span style=\"color: #99cc00;\"># 把传输记录的日志保存到/var/log/vsftpd.log</span>\r\nxferlog_enable=YES\r\nxferlog_file=/var/log/vsftpd.log\r\nxferlog_std_format=NO\r\n\r\n<span style=\"color: #99cc00;\"># 允许ASCII模式上传下载</span>\r\nascii_upload_enable=YES \r\nascii_download_enable=YES\r\n\r\n<span style=\"color: #99cc00;\"># 使用20号端口传输数据</span>\r\nconnect_from_port_20=YES\r\n\r\n<span style=\"color: #99cc00;\"># 欢迎标语</span>\r\nftpd_banner=Welcome to use my test ftp server.\r\n\r\n<span style=\"color: #99cc00;\"># chroot_local_user 是默认配置，如果设置为 YES，则新建用户默认chroot，设置 NO 则相反</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_enable 和 chroot_list_file 配合使用，设置 chroot_local_user 的特例，系统会读取 chroot_list_file 里面的内容，并设置为 chroot_list_enable，覆盖 chroot_local_user</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_file 设置 用户名（一行一个）</span>\r\n<span style=\"color: #99cc00;\"># chroot_list_enable 是设置 chroot_list_file 的效果，YES 为chroot（只能访问自己的根目录），NO 为不限制</span>\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n<span style=\"color: #99cc00;\"># 以standalone模式在ipv4上运行</span>\r\nlisten=YES\r\n\r\n<span style=\"color: #99cc00;\"># PAM认证服务名，这里默认是vsftpd，在安装vsftpd的时候已经创建了这个pam文件， 在/etc/pam.d/vsftpd，根据这个pam文件里的设置，/etc/vsftpd/ftpusers文件里的用户将禁止登录ftp服务器，比如root这样敏感的用户，所以你要禁止别的用户 登录的时候，也可以把该用户追加到/etc/vsftpd/ftpusers里。</span>\r\npam_service_name=vsftpd</pre>\r\n<strong>防火墙规则</strong>\r\n<pre>/sbin/iptables -I INPUT -p tcp --dport 21 -j ACCEPT\r\n/etc/rc.d/init.d/iptables save\r\n/etc/init.d/iptables restart</pre>\r\n&nbsp;\r\n\r\n<strong>用户</strong>\r\n<pre><span style=\"color: #99cc00;\"># 创建用户</span>\r\nuseradd -d /home/3s-support/ -s /sbin/nologin -m 3s-support\r\n<span style=\"color: #99cc00;\"># 设置用户到文件夹</span>\r\nchown -R 3s-support /home/3s-support\r\n<span style=\"color: #99cc00;\"># 设置权限</span>\r\nchmod -R 777 /home/3s-support/\r\n<span style=\"color: #99cc00;\"># 添加密码</span>\r\npasswd 3s-support</pre>','linux 设置 ftp 服务器','','inherit','open','open','','123-revision-v1','','','2016-01-04 10:17:05','2016-01-04 10:17:05','',123,'http://blog.raymond.com/?p=124',0,'revision','',0),(125,1,'2016-01-26 02:47:10','2016-01-26 02:47:10','mysql:121.40.153.237\r\n\r\ndev_db_user    #^(devmysql369','account','','publish','open','open','','account','','','2016-01-26 02:47:10','2016-01-26 02:47:10','',0,'http://blog.raymond.com/?p=125',0,'post','',0),(126,1,'2016-01-26 02:47:10','2016-01-26 02:47:10','mysql:121.40.153.237\r\n\r\ndev_db_user    #^(devmysql369','account','','inherit','open','open','','125-revision-v1','','','2016-01-26 02:47:10','2016-01-26 02:47:10','',125,'http://blog.raymond.com/?p=126',0,'revision','',0),(127,1,'2016-02-29 09:09:49','2016-02-29 09:09:49','安装 phpunit\r\n<pre>sudo apt-get install phpunit</pre>\r\n一个简单的测试用例\r\n<pre>class stacktest extends PHPUnit_Framework_TestCase {\r\n /**\r\n * @test\r\n */\r\n public function indexEquals(){\r\n $stack = array(1,2,3,4);\r\n $this-&gt;assertEquals(0,$stack[2]);\r\n }\r\npublic function testPushAndPop(){\r\n $stack = array();\r\n $this-&gt;assertEquals(0,count($stack));\r\n }\r\n}</pre>\r\n进行测试\r\n<pre>phpunit stacktest.php</pre>\r\n结果为\r\n<pre><em>PHPUnit 3.7.28 by Sebastian Bergmann.\r\n</em><em>F.\r\n</em><em>Time: 25 ms, Memory: 2.75Mb\r\n</em><em>There was 1 failure:\r\n</em><em>1) stacktest::indexEquals</em>\r\n<em>Failed asserting that 3 matches expected 0.\r\n</em><em>/home/lorcon/code/test/phpunit/stacktest.php:16\r\n</em><em>FAILURES!</em>\r\n<em>Tests: 2, Assertions: 2, Failures: 1.</em></pre>\r\nF. 表示测试出现了错误，\r\nTime和Memory 表示测试使用的时间和内存\r\n出现错误的话还会显示错误的位置\r\n最后统计测试的方法数，执行的断言数量和方法错误数量（一个方法一旦出错则不再检测接下来的代码）','使用phpunit实现自动化测试-1','','publish','open','open','','%e4%bd%bf%e7%94%a8phpunit%e5%ae%9e%e7%8e%b0%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95-1','','','2016-02-29 09:09:49','2016-02-29 09:09:49','',0,'http://blog.raymond.com/?p=127',0,'post','',0),(128,1,'2016-02-29 09:09:49','2016-02-29 09:09:49','安装 phpunit\r\n<pre>sudo apt-get install phpunit</pre>\r\n一个简单的测试用例\r\n<pre>class stacktest extends PHPUnit_Framework_TestCase {\r\n /**\r\n * @test\r\n */\r\n public function indexEquals(){\r\n $stack = array(1,2,3,4);\r\n $this-&gt;assertEquals(0,$stack[2]);\r\n }\r\npublic function testPushAndPop(){\r\n $stack = array();\r\n $this-&gt;assertEquals(0,count($stack));\r\n }\r\n}</pre>\r\n进行测试\r\n<pre>phpunit stacktest.php</pre>\r\n结果为\r\n<pre><em>PHPUnit 3.7.28 by Sebastian Bergmann.\r\n</em><em>F.\r\n</em><em>Time: 25 ms, Memory: 2.75Mb\r\n</em><em>There was 1 failure:\r\n</em><em>1) stacktest::indexEquals</em>\r\n<em>Failed asserting that 3 matches expected 0.\r\n</em><em>/home/lorcon/code/test/phpunit/stacktest.php:16\r\n</em><em>FAILURES!</em>\r\n<em>Tests: 2, Assertions: 2, Failures: 1.</em></pre>\r\nF. 表示测试出现了错误，\r\nTime和Memory 表示测试使用的时间和内存\r\n出现错误的话还会显示错误的位置\r\n最后统计测试的方法数，执行的断言数量和方法错误数量（一个方法一旦出错则不再检测接下来的代码）','使用phpunit实现自动化测试-1','','inherit','open','open','','127-revision-v1','','','2016-02-29 09:09:49','2016-02-29 09:09:49','',127,'http://blog.raymond.com/?p=128',0,'revision','',0),(129,1,'2016-02-29 09:44:14','2016-02-29 09:44:14','依赖关系\r\n\r\n生产者(producer)返回一个测试基境(fixture)的实例，并将此实例传递给依赖于它的消费者(consumer)\r\n<pre>/**\r\n * @depends 所依赖的生产者\r\n */</pre>\r\n数据供给器\r\n返回一个二位数组或者Iterator接口的对象并在迭代中的每一步产生数组，作为其他测试方法的调用参数\r\n<pre>\r\n/**\r\n * @dataProvider 所使用的数据供给器\r\n */</pre>\r\n数据供给器的参数先于来自所依赖的测试\r\n异常\r\n测试被测代码中是否抛出了异常\r\n<pre>/**\r\n * @expectedException InvalidArgumentException\r\n */</pre>','使用phpunit实现自动化测试-2代码标注规范','','publish','open','open','','%e4%bd%bf%e7%94%a8phpunit%e5%ae%9e%e7%8e%b0%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95-2%e4%bb%a3%e7%a0%81%e6%a0%87%e6%b3%a8%e8%a7%84%e8%8c%83','','','2016-02-29 09:44:14','2016-02-29 09:44:14','',0,'http://blog.raymond.com/?p=129',0,'post','',0),(130,1,'2016-02-29 09:44:14','2016-02-29 09:44:14','依赖关系\r\n\r\n生产者(producer)返回一个测试基境(fixture)的实例，并将此实例传递给依赖于它的消费者(consumer)\r\n<pre>/**\r\n * @depends 所依赖的生产者\r\n */</pre>\r\n数据供给器\r\n返回一个二位数组或者Iterator接口的对象并在迭代中的每一步产生数组，作为其他测试方法的调用参数\r\n<pre>\r\n/**\r\n * @dataProvider 所使用的数据供给器\r\n */</pre>\r\n数据供给器的参数先于来自所依赖的测试\r\n异常\r\n测试被测代码中是否抛出了异常\r\n<pre>/**\r\n * @expectedException InvalidArgumentException\r\n */</pre>','使用phpunit实现自动化测试-2代码标注规范','','inherit','open','open','','129-revision-v1','','','2016-02-29 09:44:14','2016-02-29 09:44:14','',129,'http://blog.raymond.com/?p=130',0,'revision','',0),(131,1,'2016-03-17 09:03:53','2016-03-17 09:03:53','<strong>1.改表</strong>\r\n\r\nmysql&gt; select host,user from user;\r\n+------------+------------------+\r\n| host | user |\r\n+------------+------------------+\r\n| 127.0.0.1 | root |\r\n| ::1 | root |\r\n| localhost | debian-sys-maint |\r\n| localhost | root |\r\n| raymond-pc | root |\r\n+------------+------------------+\r\n\r\nmysql&gt; update user set host=\'%\' where user=\'root\' and host=\'localhost\';\r\n\r\n<strong>2.授权</strong>\r\nmysql&gt; grant all privileges on *.* to \'root\'@\'%\' identified by \'root\' with grant option;\r\nmysql&gt; flush privileges;\r\n\r\n&nbsp;\r\n\r\n无论采用上方哪种方法，都需要确保防火墙3306端口是开着的\r\n\r\n&nbsp;\r\n\r\n<strong>如果上面方法还是不能启动mysql远程访问权限，有可能是mysql 配置中绑定了固定ip。</strong>\r\n<pre>netstat -an|grep 3306 查看 mysql 监听地址</pre>\r\n<pre>tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN \r\nunix 3 [ ] 流 已连接 13306 @/tmp/dbus-UzdoH1yjzm</pre>\r\n以上说明只监听了本地(127.0.0.1)\r\n这时候需要进入mysql配置文件，修改绑定配置 /etc/mysql/my.conf\r\n注释掉或者修改为其他网址\r\n<pre>bind 127.0.0.1</pre>','设置mysql可以远程访问','','publish','open','open','','%e8%ae%be%e7%bd%aemysql%e5%8f%af%e4%bb%a5%e8%bf%9c%e7%a8%8b%e8%ae%bf%e9%97%ae','','','2016-03-17 09:32:32','2016-03-17 09:32:32','',0,'http://blog.raymond.com/?p=131',0,'post','',0),(132,1,'2016-03-17 09:03:53','2016-03-17 09:03:53','<strong>1.改表</strong>\r\n\r\nmysql&gt; select host,user from user;\r\n+------------+------------------+\r\n| host | user |\r\n+------------+------------------+\r\n| 127.0.0.1 | root |\r\n| ::1 | root |\r\n| localhost | debian-sys-maint |\r\n| localhost | root |\r\n| raymond-pc | root |\r\n+------------+------------------+\r\n\r\nmysql&gt; update user set host=\'%\' where user=\'root\' and host=\'localhost\';\r\n\r\n<strong>2.授权</strong>\r\nmysql&gt; grant all privileges on *.* to \'root\'@\'%\' identified by \'root\' with grant option;\r\nmysql&gt; flush privileges;\r\n\r\n&nbsp;\r\n\r\n无论采用上方哪种方法，都需要确保防火墙3306端口是开着的','设置mysql可以远程访问','','inherit','open','open','','131-revision-v1','','','2016-03-17 09:03:53','2016-03-17 09:03:53','',131,'http://blog.raymond.com/?p=132',0,'revision','',0),(133,1,'2016-03-17 09:30:00','2016-03-17 09:30:00','<strong>1.改表</strong>\n\nmysql&gt; select host,user from user;\n+------------+------------------+\n| host | user |\n+------------+------------------+\n| 127.0.0.1 | root |\n| ::1 | root |\n| localhost | debian-sys-maint |\n| localhost | root |\n| raymond-pc | root |\n+------------+------------------+\n\nmysql&gt; update user set host=\'%\' where user=\'root\' and host=\'localhost\';\n\n<strong>2.授权</strong>\nmysql&gt; grant all privileges on *.* to \'root\'@\'%\' identified by \'root\' with grant option;\nmysql&gt; flush privileges;\n\n&nbsp;\n\n无论采用上方哪种方法，都需要确保防火墙3306端口是开着的\n\n&nbsp;\n\n如果上面方法还是不能启动mysql远程访问权限，有可能是mysql 配置中绑定了固定ip。\n\nne','设置mysql可以远程访问','','inherit','open','open','','131-autosave-v1','','','2016-03-17 09:30:00','2016-03-17 09:30:00','',131,'http://blog.raymond.com/?p=133',0,'revision','',0),(134,1,'2016-03-17 09:32:32','2016-03-17 09:32:32','<strong>1.改表</strong>\r\n\r\nmysql&gt; select host,user from user;\r\n+------------+------------------+\r\n| host | user |\r\n+------------+------------------+\r\n| 127.0.0.1 | root |\r\n| ::1 | root |\r\n| localhost | debian-sys-maint |\r\n| localhost | root |\r\n| raymond-pc | root |\r\n+------------+------------------+\r\n\r\nmysql&gt; update user set host=\'%\' where user=\'root\' and host=\'localhost\';\r\n\r\n<strong>2.授权</strong>\r\nmysql&gt; grant all privileges on *.* to \'root\'@\'%\' identified by \'root\' with grant option;\r\nmysql&gt; flush privileges;\r\n\r\n&nbsp;\r\n\r\n无论采用上方哪种方法，都需要确保防火墙3306端口是开着的\r\n\r\n&nbsp;\r\n\r\n<strong>如果上面方法还是不能启动mysql远程访问权限，有可能是mysql 配置中绑定了固定ip。</strong>\r\n<pre>netstat -an|grep 3306 查看 mysql 监听地址</pre>\r\n<pre>tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN \r\nunix 3 [ ] 流 已连接 13306 @/tmp/dbus-UzdoH1yjzm</pre>\r\n以上说明只监听了本地(127.0.0.1)\r\n这时候需要进入mysql配置文件，修改绑定配置 /etc/mysql/my.conf\r\n注释掉或者修改为其他网址\r\n<pre>bind 127.0.0.1</pre>','设置mysql可以远程访问','','inherit','open','open','','131-revision-v1','','','2016-03-17 09:32:32','2016-03-17 09:32:32','',131,'http://blog.raymond.com/?p=134',0,'revision','',0),(135,1,'2016-06-01 02:27:30','2016-06-01 02:27:30','常见命令参数：\r\n\r\n-a 显示本终端下的所有程序\r\n-A/-e 显示所有进程\r\n-N 显示出了本终端外的所有进程\r\nx 显示无控制终端的进程\r\nr 显示进行中的进程\r\n\r\n-f 显示程序间的关系\r\n-H 显示树状结构的程序关系\r\n-r 显示当前终端的进程\r\n-T 显示当前终端的所有程序\r\n\r\n-p 指定pid的进程时间\r\n\r\nU/-u 指定用户的所有进程\r\n-g 指定组的所有进程\r\n-t 指定终端机编号\r\n\r\n-x 显示没有控制终端的进程，同时显示各个命令的具体路径。dx不可合用\r\n-C&lt;命令&gt; 列出指定命令的状况\r\n\r\n-ww 输出结果自动换行\r\n-f 按作业格式显示程序情况\r\n-l 按长格式显示程序完整信息\r\nh 不显示头部字段名\r\ne 命令后显示使用环境\r\nS 显示该命令已中断的子程序资料\r\ns 按程序信号的格式显示程序状况\r\n\r\n&nbsp;\r\n\r\n输出结果head字段对应信息\r\n<table width=\"821\">\r\n<tbody>\r\n<tr class=\"firstRow\">\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\">用户名</td>\r\n<td valign=\"top\" width=\"25\">用户id</td>\r\n<td valign=\"top\" width=\"25\">进程id</td>\r\n<td valign=\"top\" width=\"25\">父进程id</td>\r\n<td valign=\"top\" width=\"25\">会\r\n\r\n话\r\n\r\nid\r\n\r\n(session\r\n\r\nID)</td>\r\n<td valign=\"top\" width=\"25\">​CPU占用率</td>\r\n<td valign=\"top\" width=\"25\">内存占用率</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的虚拟内存大小</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的实际内存大小</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的终端</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">状态</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">启动时间和日期</td>\r\n<td valign=\"top\" width=\"25\">使用的总\r\n\r\nC\r\n\r\nP\r\n\r\nU时间</td>\r\n<td valign=\"top\" width=\"25\">正在执行的命令</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">优先级</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">进程优先级编号</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">进程正在睡眠的内核函数</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">与进程相关的数字标志</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\">US\r\n\r\n​ER</td>\r\n<td valign=\"top\" width=\"25\">U\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">P\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">P\r\n\r\nP\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">S\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">%CPU</td>\r\n<td valign=\"top\" width=\"25\">%MEM</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">V\r\n\r\nS\r\n\r\nZ</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">RS\r\n\r\nS</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">T\r\n\r\nT\r\n\r\nY</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">S\r\n\r\nT\r\n\r\nA\r\n\r\nT</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">S\r\n\r\nT\r\n\r\nA\r\n\r\nR\r\n\r\nT</td>\r\n<td valign=\"top\" width=\"25\">T\r\n\r\nI\r\n\r\nME</td>\r\n<td valign=\"top\" width=\"25\">C\r\n\r\nO\r\n\r\nM\r\n\r\nM\r\n\r\nA\r\n\r\nND</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">N\r\n\r\nI</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">P\r\n\r\nR\r\n\r\nI</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">W\r\n\r\nC\r\n\r\nH\r\n\r\nA\r\n\r\nN</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">F\r\n\r\nL\r\n\r\nA\r\n\r\nG\r\n\r\nS</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;','ps命令','','publish','open','open','','ps%e5%91%bd%e4%bb%a4','','','2016-06-01 02:27:30','2016-06-01 02:27:30','',0,'http://blog.raymond.com/?p=135',0,'post','',0),(136,1,'2016-06-01 02:27:30','2016-06-01 02:27:30','常见命令参数：\r\n\r\n-a 显示本终端下的所有程序\r\n-A/-e 显示所有进程\r\n-N 显示出了本终端外的所有进程\r\nx 显示无控制终端的进程\r\nr 显示进行中的进程\r\n\r\n-f 显示程序间的关系\r\n-H 显示树状结构的程序关系\r\n-r 显示当前终端的进程\r\n-T 显示当前终端的所有程序\r\n\r\n-p 指定pid的进程时间\r\n\r\nU/-u 指定用户的所有进程\r\n-g 指定组的所有进程\r\n-t 指定终端机编号\r\n\r\n-x 显示没有控制终端的进程，同时显示各个命令的具体路径。dx不可合用\r\n-C&lt;命令&gt; 列出指定命令的状况\r\n\r\n-ww 输出结果自动换行\r\n-f 按作业格式显示程序情况\r\n-l 按长格式显示程序完整信息\r\nh 不显示头部字段名\r\ne 命令后显示使用环境\r\nS 显示该命令已中断的子程序资料\r\ns 按程序信号的格式显示程序状况\r\n\r\n&nbsp;\r\n\r\n输出结果head字段对应信息\r\n<table width=\"821\">\r\n<tbody>\r\n<tr class=\"firstRow\">\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\">用户名</td>\r\n<td valign=\"top\" width=\"25\">用户id</td>\r\n<td valign=\"top\" width=\"25\">进程id</td>\r\n<td valign=\"top\" width=\"25\">父进程id</td>\r\n<td valign=\"top\" width=\"25\">会\r\n\r\n话\r\n\r\nid\r\n\r\n(session\r\n\r\nID)</td>\r\n<td valign=\"top\" width=\"25\">​CPU占用率</td>\r\n<td valign=\"top\" width=\"25\">内存占用率</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的虚拟内存大小</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的实际内存大小</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">使用的终端</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">状态</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">启动时间和日期</td>\r\n<td valign=\"top\" width=\"25\">使用的总\r\n\r\nC\r\n\r\nP\r\n\r\nU时间</td>\r\n<td valign=\"top\" width=\"25\">正在执行的命令</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">优先级</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">进程优先级编号</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">进程正在睡眠的内核函数</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">与进程相关的数字标志</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\">US\r\n\r\n​ER</td>\r\n<td valign=\"top\" width=\"25\">U\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">P\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">P\r\n\r\nP\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">S\r\n\r\nI\r\n\r\nD</td>\r\n<td valign=\"top\" width=\"25\">%CPU</td>\r\n<td valign=\"top\" width=\"25\">%MEM</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">V\r\n\r\nS\r\n\r\nZ</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">RS\r\n\r\nS</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">T\r\n\r\nT\r\n\r\nY</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">S\r\n\r\nT\r\n\r\nA\r\n\r\nT</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">S\r\n\r\nT\r\n\r\nA\r\n\r\nR\r\n\r\nT</td>\r\n<td valign=\"top\" width=\"25\">T\r\n\r\nI\r\n\r\nME</td>\r\n<td valign=\"top\" width=\"25\">C\r\n\r\nO\r\n\r\nM\r\n\r\nM\r\n\r\nA\r\n\r\nND</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">N\r\n\r\nI</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">P\r\n\r\nR\r\n\r\nI</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">W\r\n\r\nC\r\n\r\nH\r\n\r\nA\r\n\r\nN</td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\">F\r\n\r\nL\r\n\r\nA\r\n\r\nG\r\n\r\nS</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n<td colspan=\"1\" rowspan=\"1\" valign=\"top\" width=\"25\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n&nbsp;','ps命令','','inherit','open','open','','135-revision-v1','','','2016-06-01 02:27:30','2016-06-01 02:27:30','',135,'http://blog.raymond.com/?p=136',0,'revision','',0),(137,1,'2016-07-13 03:28:23','2016-07-13 03:28:23','<pre><strong>1. 用 netstat 命令查看网口和端口的连接情况</strong>\r\n<span style=\"color: #808080;\"> 常用参数：</span>\r\n<span style=\"color: #808080;\"> -a 显示所有连线中的socket</span>\r\n<span style=\"color: #808080;\"> -A 列出连线地址</span>\r\n<span style=\"color: #808080;\"> -e 显示网络扩展信息</span>\r\n<span style=\"color: #808080;\"> -i 显示网络界面信息表单</span>\r\n<span style=\"color: #808080;\"> -p 显示正在使用socket的程序识别码和程序名称</span>\r\n<span style=\"color: #808080;\"> -s 显示网络工作信息统计表</span>\r\n<span style=\"color: #808080;\"> -t 显示TCP传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -u 显示UDP传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -w 显示raw传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -n 显示直接用IP地址而不是域名服务器的连接</span></pre>\r\n输出结果：\r\nnetstat结果会分为两部分：\r\nActive Internet connections ———— 有源TCP连接\r\n<table style=\"width: 600px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td>Proto</td>\r\n<td>Recv-Q</td>\r\n<td>Send-Q</td>\r\n<td>Local Address</td>\r\n<td>Foreign Address</td>\r\n<td>State</td>\r\n</tr>\r\n<tr>\r\n<td>传输协议</td>\r\n<td>接收队列</td>\r\n<td>发送队列</td>\r\n<td>本地地址：端口</td>\r\n<td>远程地址：端口</td>\r\n<td>状态</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nActice UNIX domain sockets ———— 有源Unix域套接接口（和网络套接字一样，只能用于本机通信）\r\n<table style=\"width: 600px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td>Proto</td>\r\n<td>RefCnt</td>\r\n<td>Flags</td>\r\n<td>Type</td>\r\n<td>State</td>\r\n<td>I-Node</td>\r\n<td>Path</td>\r\n</tr>\r\n<tr>\r\n<td>连接协议</td>\r\n<td>连接到本套接口上的进程号</td>\r\n<td>句柄标识符</td>\r\n<td>套接口类型</td>\r\n<td>状态</td>\r\n<td>socket句柄的inode号</td>\r\n<td>正在使用的进程的路径名</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<pre><span style=\"color: #808080;\">状态说明：</span>\r\n<span style=\"color: #808080;\"> LISTEN：侦听来自远方的TCP端口的连接请求</span>\r\n<span style=\"color: #808080;\"> SYN-SENT：再发送连接请求后等待匹配的连接请求（如果有大量这样的状态包，检查是否中招了）</span>\r\n<span style=\"color: #808080;\"> SYN-RECEIVED：再收到和发送一个连接请求后等待对方对连接请求的确认（如有大量此状态，估计被flood攻击了）</span>\r\n<span style=\"color: #808080;\"> ESTABLISHED：代表一个打开的连接</span>\r\n<span style=\"color: #808080;\"> FIN-WAIT-1：等待远程TCP连接中断请求，或先前的连接中断请求的确认</span>\r\n<span style=\"color: #808080;\"> FIN-WAIT-2：从远程TCP等待连接中断请求</span>\r\n<span style=\"color: #808080;\"> CLOSE-WAIT：等待从本地用户发来的连接中断请求</span>\r\n<span style=\"color: #808080;\"> CLOSING：等待远程TCP对连接中断的确认</span>\r\n<span style=\"color: #808080;\"> LAST-ACK：等待原来的发向远程TCP的连接中断请求的确认（不是什么好东西，此项出现，检查是否被攻击）</span>\r\n<span style=\"color: #808080;\"> TIME-WAIT：等待足够的时间以确保远程TCP接收到连接中断请求的确认</span>\r\n<span style=\"color: #808080;\"> CLOSED：没有任何连接状态</span>\r\n<span style=\"color: #808080;\">  </span></pre>\r\n<pre><strong>用iotop查看IO的使用情况</strong>\r\n <span style=\"color: #808080;\">设置参数：</span>\r\n<span style=\"color: #808080;\"> -o 只显示正在占用IO的进程</span>\r\n<span style=\"color: #808080;\"> -d 设置显示时间间隔</span>\r\n<span style=\"color: #808080;\"> -p 只显示指定pid的信息</span>\r\n<span style=\"color: #808080;\"> -u 只显示指定用户的信息</span>\r\n<span style=\"color: #808080;\"> -a 显示从iotop启动后每个进程完成的总IO数</span>\r\n<span style=\"color: #808080;\"> -k 以千字节展示</span></pre>','服务器IO和网络流量查询','','publish','open','open','','%e6%9c%8d%e5%8a%a1%e5%99%a8io%e5%92%8c%e7%bd%91%e7%bb%9c%e6%b5%81%e9%87%8f%e6%9f%a5%e8%af%a2','','','2016-07-13 03:28:23','2016-07-13 03:28:23','',0,'http://blog.raymond.com/?p=137',0,'post','',0),(139,1,'2016-07-13 03:28:23','2016-07-13 03:28:23','<pre><strong>1. 用 netstat 命令查看网口和端口的连接情况</strong>\r\n<span style=\"color: #808080;\"> 常用参数：</span>\r\n<span style=\"color: #808080;\"> -a 显示所有连线中的socket</span>\r\n<span style=\"color: #808080;\"> -A 列出连线地址</span>\r\n<span style=\"color: #808080;\"> -e 显示网络扩展信息</span>\r\n<span style=\"color: #808080;\"> -i 显示网络界面信息表单</span>\r\n<span style=\"color: #808080;\"> -p 显示正在使用socket的程序识别码和程序名称</span>\r\n<span style=\"color: #808080;\"> -s 显示网络工作信息统计表</span>\r\n<span style=\"color: #808080;\"> -t 显示TCP传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -u 显示UDP传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -w 显示raw传输协议的连接情况</span>\r\n<span style=\"color: #808080;\"> -n 显示直接用IP地址而不是域名服务器的连接</span></pre>\r\n输出结果：\r\nnetstat结果会分为两部分：\r\nActive Internet connections ———— 有源TCP连接\r\n<table style=\"width: 600px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td>Proto</td>\r\n<td>Recv-Q</td>\r\n<td>Send-Q</td>\r\n<td>Local Address</td>\r\n<td>Foreign Address</td>\r\n<td>State</td>\r\n</tr>\r\n<tr>\r\n<td>传输协议</td>\r\n<td>接收队列</td>\r\n<td>发送队列</td>\r\n<td>本地地址：端口</td>\r\n<td>远程地址：端口</td>\r\n<td>状态</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\nActice UNIX domain sockets ———— 有源Unix域套接接口（和网络套接字一样，只能用于本机通信）\r\n<table style=\"width: 600px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td>Proto</td>\r\n<td>RefCnt</td>\r\n<td>Flags</td>\r\n<td>Type</td>\r\n<td>State</td>\r\n<td>I-Node</td>\r\n<td>Path</td>\r\n</tr>\r\n<tr>\r\n<td>连接协议</td>\r\n<td>连接到本套接口上的进程号</td>\r\n<td>句柄标识符</td>\r\n<td>套接口类型</td>\r\n<td>状态</td>\r\n<td>socket句柄的inode号</td>\r\n<td>正在使用的进程的路径名</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<pre><span style=\"color: #808080;\">状态说明：</span>\r\n<span style=\"color: #808080;\"> LISTEN：侦听来自远方的TCP端口的连接请求</span>\r\n<span style=\"color: #808080;\"> SYN-SENT：再发送连接请求后等待匹配的连接请求（如果有大量这样的状态包，检查是否中招了）</span>\r\n<span style=\"color: #808080;\"> SYN-RECEIVED：再收到和发送一个连接请求后等待对方对连接请求的确认（如有大量此状态，估计被flood攻击了）</span>\r\n<span style=\"color: #808080;\"> ESTABLISHED：代表一个打开的连接</span>\r\n<span style=\"color: #808080;\"> FIN-WAIT-1：等待远程TCP连接中断请求，或先前的连接中断请求的确认</span>\r\n<span style=\"color: #808080;\"> FIN-WAIT-2：从远程TCP等待连接中断请求</span>\r\n<span style=\"color: #808080;\"> CLOSE-WAIT：等待从本地用户发来的连接中断请求</span>\r\n<span style=\"color: #808080;\"> CLOSING：等待远程TCP对连接中断的确认</span>\r\n<span style=\"color: #808080;\"> LAST-ACK：等待原来的发向远程TCP的连接中断请求的确认（不是什么好东西，此项出现，检查是否被攻击）</span>\r\n<span style=\"color: #808080;\"> TIME-WAIT：等待足够的时间以确保远程TCP接收到连接中断请求的确认</span>\r\n<span style=\"color: #808080;\"> CLOSED：没有任何连接状态</span>\r\n<span style=\"color: #808080;\">  </span></pre>\r\n<pre><strong>用iotop查看IO的使用情况</strong>\r\n <span style=\"color: #808080;\">设置参数：</span>\r\n<span style=\"color: #808080;\"> -o 只显示正在占用IO的进程</span>\r\n<span style=\"color: #808080;\"> -d 设置显示时间间隔</span>\r\n<span style=\"color: #808080;\"> -p 只显示指定pid的信息</span>\r\n<span style=\"color: #808080;\"> -u 只显示指定用户的信息</span>\r\n<span style=\"color: #808080;\"> -a 显示从iotop启动后每个进程完成的总IO数</span>\r\n<span style=\"color: #808080;\"> -k 以千字节展示</span></pre>','服务器IO和网络流量查询','','inherit','open','open','','137-revision-v1','','','2016-07-13 03:28:23','2016-07-13 03:28:23','',137,'http://blog.raymond.com/?p=139',0,'revision','',0),(140,1,'2016-07-28 08:41:11','2016-07-28 08:41:11','Docker 镜像(Docker images) 就是一个模板，Docker 使用 UnionFS 串起了一系列历史版本来实现镜像的迭代。\r\nDocker 仓库(Docker registeries) 是镜像保存的位置，分为共有和私有，私有仓库只有自己能够操作，公有仓库(Docker Hub)是一个公共的镜像仓库。\r\nDocker 容器(Docker containers)包含了某个应用运行的所有环境，从镜像创立。是一个独立安全，易修改的应用允许平台。\r\n\r\n总的来说，Docker 就是一个git那样的云管理平台，只是上面托管的不是代码，而是服务。\r\nDocker使用 C/S 架构，Docker客户端是用户与Docker交互的模块，通过接收用户指令并与Docker守护进程通信赖实现服务。Docker守护进程是Docker的核心处理模块，Docker容器的建立运行和发布都在守护进程中进行。\r\n客户端 与 守护进程 通过 socket或 RESETful API 与 Docker守护进程通信。\r\nDocker充分利用了一项称为namespaces的技术来提供隔离的工作空间，我们称之为 container(容器)。当你运行一个容器的时候，Docker为该容器创建了一个命名空间集合。\r\n这样提供了一个隔离层，每一个应用在它们自己的命名空间中运行而且不会访问到命名空间之外。\r\n一些Docker使用到的命名空间有：\r\npid命名空间: 使用在进程隔离(PID: Process ID)。\r\nnet命名空间: 使用在管理网络接口(NET: Networking)。\r\nipc命名空间: 使用在管理进程间通信资源 (IPC: InterProcess Communication)。\r\nmnt命名空间: 使用在管理挂载点 (MNT: Mount)。\r\nuts命名空间: 使用在隔离内核和版本标识 (UTS: Unix Timesharing System)。','Docker简介','','publish','open','open','','docker%e7%ae%80%e4%bb%8b','','','2016-07-28 08:41:11','2016-07-28 08:41:11','',0,'http://blog.raymond.com/?p=140',0,'post','',0),(141,1,'2016-07-28 08:41:11','2016-07-28 08:41:11','Docker 镜像(Docker images) 就是一个模板，Docker 使用 UnionFS 串起了一系列历史版本来实现镜像的迭代。\r\nDocker 仓库(Docker registeries) 是镜像保存的位置，分为共有和私有，私有仓库只有自己能够操作，公有仓库(Docker Hub)是一个公共的镜像仓库。\r\nDocker 容器(Docker containers)包含了某个应用运行的所有环境，从镜像创立。是一个独立安全，易修改的应用允许平台。\r\n\r\n总的来说，Docker 就是一个git那样的云管理平台，只是上面托管的不是代码，而是服务。\r\nDocker使用 C/S 架构，Docker客户端是用户与Docker交互的模块，通过接收用户指令并与Docker守护进程通信赖实现服务。Docker守护进程是Docker的核心处理模块，Docker容器的建立运行和发布都在守护进程中进行。\r\n客户端 与 守护进程 通过 socket或 RESETful API 与 Docker守护进程通信。\r\nDocker充分利用了一项称为namespaces的技术来提供隔离的工作空间，我们称之为 container(容器)。当你运行一个容器的时候，Docker为该容器创建了一个命名空间集合。\r\n这样提供了一个隔离层，每一个应用在它们自己的命名空间中运行而且不会访问到命名空间之外。\r\n一些Docker使用到的命名空间有：\r\npid命名空间: 使用在进程隔离(PID: Process ID)。\r\nnet命名空间: 使用在管理网络接口(NET: Networking)。\r\nipc命名空间: 使用在管理进程间通信资源 (IPC: InterProcess Communication)。\r\nmnt命名空间: 使用在管理挂载点 (MNT: Mount)。\r\nuts命名空间: 使用在隔离内核和版本标识 (UTS: Unix Timesharing System)。','Docker简介','','inherit','open','open','','140-revision-v1','','','2016-07-28 08:41:11','2016-07-28 08:41:11','',140,'http://blog.raymond.com/?p=141',0,'revision','',0),(142,1,'2016-07-29 17:53:07','2016-07-29 17:53:07','<strong>1.在服务端配置，对所有客户连接生效</strong>\r\n\r\n服务器中/etc/ssh/sshd_config文件是ssh服务的配置信息，找到ClientAliveInterval项，该项表示服务器端向客户端请求消息的时间间隔, 默认是0, 不发送。如果要服务器和客户端之间保持长链接，则需设置服务端和客户端定时通信，确认响应。另外还有参数ClientAliveCountMax，表示服务器尝试和客户端通信超过该次数则自动断开连接。\r\n\r\n服务端和客户端之间的通信是加密的。\r\n<pre>ClientAliveInterval 1800\r\nClientAliveCountMax 3</pre>\r\n以上配置表示服务器每隔 1800s 和客户端进行通信，如果客户端出现三次通信失败，则服务端会自动断开连接。所以一旦客户机连上服务器，则最快也要5400s后，服务器才会断开与客户机的连接\r\n\r\n配置完成后，记得要重启sshd服务\r\n<pre>service sshd restart</pre>\r\n&nbsp;\r\n\r\n<strong>2.客户机本地也可以配置这个参数</strong>\r\n<pre>#vi /etc/ssh/ssh_config</pre>\r\n然后找到里面的ServerAliveInterval参数，如果没有，你同样自己加一个就好了，参数意义相同。\r\n\r\n如果要指定服务端， 使用-o的参数ServerAliveInterval来设置一个防止超时的时间\r\n<pre>     ssh -o ServerAliveInterval=30 <strong><em>IP地址 </em></strong></pre>\r\n&nbsp;','设置ssh连接不超时','','publish','open','open','','%e8%ae%be%e7%bd%aessh%e8%bf%9e%e6%8e%a5%e4%b8%8d%e8%b6%85%e6%97%b6','','','2016-07-29 17:53:07','2016-07-29 17:53:07','',0,'http://blog.raymond.com/?p=142',0,'post','',0),(143,1,'2016-07-29 17:53:07','2016-07-29 17:53:07','<strong>1.在服务端配置，对所有客户连接生效</strong>\r\n\r\n服务器中/etc/ssh/sshd_config文件是ssh服务的配置信息，找到ClientAliveInterval项，该项表示服务器端向客户端请求消息的时间间隔, 默认是0, 不发送。如果要服务器和客户端之间保持长链接，则需设置服务端和客户端定时通信，确认响应。另外还有参数ClientAliveCountMax，表示服务器尝试和客户端通信超过该次数则自动断开连接。\r\n\r\n服务端和客户端之间的通信是加密的。\r\n<pre>ClientAliveInterval 1800\r\nClientAliveCountMax 3</pre>\r\n以上配置表示服务器每隔 1800s 和客户端进行通信，如果客户端出现三次通信失败，则服务端会自动断开连接。所以一旦客户机连上服务器，则最快也要5400s后，服务器才会断开与客户机的连接\r\n\r\n配置完成后，记得要重启sshd服务\r\n<pre>service sshd restart</pre>\r\n&nbsp;\r\n\r\n<strong>2.客户机本地也可以配置这个参数</strong>\r\n<pre>#vi /etc/ssh/ssh_config</pre>\r\n然后找到里面的ServerAliveInterval参数，如果没有，你同样自己加一个就好了，参数意义相同。\r\n\r\n如果要指定服务端， 使用-o的参数ServerAliveInterval来设置一个防止超时的时间\r\n<pre>     ssh -o ServerAliveInterval=30 <strong><em>IP地址 </em></strong></pre>\r\n&nbsp;','设置ssh连接不超时','','inherit','open','open','','142-revision-v1','','','2016-07-29 17:53:07','2016-07-29 17:53:07','',142,'http://blog.raymond.com/?p=143',0,'revision','',0),(144,1,'2016-08-08 07:10:30','2016-08-08 07:10:30','采用源码安装\r\n\r\n先从git上面下载项目源码\r\n<pre>wget \'https://github.com/zeromq/zeromq4-1/releases/download/v4.1.4/zeromq-4.1.4.tar.gz\'</pre>\r\n解压，配置，安装\r\n<pre>sudo apt-get install gcc #需要先添加 gcc 扩展 \r\ntar -zxvf zeromq-4.1.4.tar.gz\r\ncd zeromq-4.1.4\r\n./configure</pre>\r\n出现了以下错误\r\n<pre>checking for sodium... no\r\nconfigure: error: Package requirements (libsodium) were not met:\r\n\r\nNo package \'libsodium\' found</pre>\r\n这个问题在 github 上面可以查到\r\n<span style=\"color: #0000ff;\">https://github.com/zeromq/libzmq/issues/1274</span><em><span style=\"color: #808080;\">（Problem: libzmq is built without security, by default #1274）</span></em>\r\n简单地说，libzmq 是加密用的，完整的处理方案是手动添加 libsodium，然后在configure 上面添加。\r\n<strong><span style=\"color: #808080;\">pmienk 对于该问题给出了三个处理步骤</span></strong>\r\n<span style=\"color: #808080;\">1.如果找到了libsodium，则不允许跳过该项</span>\r\n<span style=\"color: #808080;\">2.如果找不到libsodium，允许用户跳过该配置项来躲避错误 --without-libsodium</span>\r\n<span style=\"color: #808080;\">3.默认是 --with-libsodium，所以如果没有特殊定义 without ，安装程序会报错并中</span>断\r\n\r\n我选择了跳过该配置\r\n<pre>./configure --without-libsodium\r\nsudo make &amp;&amp; make install</pre>\r\n至此，安装完成','ZeroMQ 安装','','publish','open','open','','zeromq-%e5%ae%89%e8%a3%85','','','2016-08-08 07:10:30','2016-08-08 07:10:30','',0,'http://blog.raymond.com/?p=144',0,'post','',0),(145,1,'2016-08-08 07:10:30','2016-08-08 07:10:30','采用源码安装\r\n\r\n先从git上面下载项目源码\r\n<pre>wget \'https://github.com/zeromq/zeromq4-1/releases/download/v4.1.4/zeromq-4.1.4.tar.gz\'</pre>\r\n解压，配置，安装\r\n<pre>sudo apt-get install gcc #需要先添加 gcc 扩展 \r\ntar -zxvf zeromq-4.1.4.tar.gz\r\ncd zeromq-4.1.4\r\n./configure</pre>\r\n出现了以下错误\r\n<pre>checking for sodium... no\r\nconfigure: error: Package requirements (libsodium) were not met:\r\n\r\nNo package \'libsodium\' found</pre>\r\n这个问题在 github 上面可以查到\r\n<span style=\"color: #0000ff;\">https://github.com/zeromq/libzmq/issues/1274</span><em><span style=\"color: #808080;\">（Problem: libzmq is built without security, by default #1274）</span></em>\r\n简单地说，libzmq 是加密用的，完整的处理方案是手动添加 libsodium，然后在configure 上面添加。\r\n<strong><span style=\"color: #808080;\">pmienk 对于该问题给出了三个处理步骤</span></strong>\r\n<span style=\"color: #808080;\">1.如果找到了libsodium，则不允许跳过该项</span>\r\n<span style=\"color: #808080;\">2.如果找不到libsodium，允许用户跳过该配置项来躲避错误 --without-libsodium</span>\r\n<span style=\"color: #808080;\">3.默认是 --with-libsodium，所以如果没有特殊定义 without ，安装程序会报错并中</span>断\r\n\r\n我选择了跳过该配置\r\n<pre>./configure --without-libsodium\r\nsudo make &amp;&amp; make install</pre>\r\n至此，安装完成','ZeroMQ 安装','','inherit','open','open','','144-revision-v1','','','2016-08-08 07:10:30','2016-08-08 07:10:30','',144,'http://blog.raymond.com/?p=145',0,'revision','',0),(146,1,'2016-08-08 07:59:14','2016-08-08 07:59:14','从git上面下载php扩展源码安装\r\n<pre>git clone http://github.com/mkoppanen/php-zmq\r\ncd php-zmq/\r\nsudo phpize &amp;&amp; ./configure\r\nsudo make &amp;&amp; sudo make install</pre>\r\n然后在php.ini文件中添加扩展\r\n<pre>sudo vi /etc/php5/cli/php.ini\r\n<span style=\"color: #339966;\">#在最后加入</span> \r\nextension=zmq.so</pre>\r\n<pre><span style=\"color: #339966;\">#重启</span> \r\nsudo service php5-fpm restart\r\nphp --info |grep zmq <span style=\"color: #339966;\">#可以看到zqm的版本</span>\r\nlibzmq version =&gt; 4.1.4</pre>\r\n在php-zmq 文件中包含了一些使用例子，试运行一下\r\n<pre>cd examples/\r\n<span style=\"color: #339966;\">#开启Request-Reply服务端</span>\r\nphp poll-server.php \r\nAdded object with id o:000000001181633a00007fca71c6924d</pre>\r\n<pre>lsof -i:5555<span style=\"color: #339966;\"> #可以看到 5555 端口正在被监听</span>\r\nCOMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\r\nphp 28877 raymond 9u IPv4 233100 0t0 TCP localhost:5555 (LISTEN)</pre>\r\n发送Request-Reply客户端请求\r\n<pre>php non-blocking-client.php \r\nTrying to send message\r\nMessage sent\r\nTrying to receive message\r\nReceived message: Got it!</pre>\r\n此时看到\r\nserver端也多了一个行\r\n<pre>Received message: This is a message</pre>\r\nZMQ注意点：\r\n1) 服务端和客户端无论谁先启动，效果是相同的，这点不同于Socket。\r\n2) 在服务端收到信息以前，程序是阻塞的，会一直等待客户端连接上来。\r\n3) 服务端收到信息以后，会send一个“World”给客户端。值得注意的是一定是client连接上来以后，send消息给Server，然后Server再rev然后响应client，这种一问一答式的。如果Server先send，client先rev是会报错的。\r\n4) ZMQ通信通信单元是消息，他除了知道Bytes的大小，他并不关心的消息格式。因此，你可以使用任何你觉得好用的数据格式。Xml、Protocol Buffers、Thrift、json等等。\r\n5) 虽然可以使用ZMQ实现HTTP协议，但是，这绝不是他所擅长的。','OMQ php简单体验','','publish','open','open','','omq-php%e7%ae%80%e5%8d%95%e4%bd%93%e9%aa%8c','','','2016-08-08 07:59:14','2016-08-08 07:59:14','',0,'http://blog.raymond.com/?p=146',0,'post','',0),(147,1,'2016-08-08 07:59:14','2016-08-08 07:59:14','从git上面下载php扩展源码安装\r\n<pre>git clone http://github.com/mkoppanen/php-zmq\r\ncd php-zmq/\r\nsudo phpize &amp;&amp; ./configure\r\nsudo make &amp;&amp; sudo make install</pre>\r\n然后在php.ini文件中添加扩展\r\n<pre>sudo vi /etc/php5/cli/php.ini\r\n<span style=\"color: #339966;\">#在最后加入</span> \r\nextension=zmq.so</pre>\r\n<pre><span style=\"color: #339966;\">#重启</span> \r\nsudo service php5-fpm restart\r\nphp --info |grep zmq <span style=\"color: #339966;\">#可以看到zqm的版本</span>\r\nlibzmq version =&gt; 4.1.4</pre>\r\n在php-zmq 文件中包含了一些使用例子，试运行一下\r\n<pre>cd examples/\r\n<span style=\"color: #339966;\">#开启Request-Reply服务端</span>\r\nphp poll-server.php \r\nAdded object with id o:000000001181633a00007fca71c6924d</pre>\r\n<pre>lsof -i:5555<span style=\"color: #339966;\"> #可以看到 5555 端口正在被监听</span>\r\nCOMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\r\nphp 28877 raymond 9u IPv4 233100 0t0 TCP localhost:5555 (LISTEN)</pre>\r\n发送Request-Reply客户端请求\r\n<pre>php non-blocking-client.php \r\nTrying to send message\r\nMessage sent\r\nTrying to receive message\r\nReceived message: Got it!</pre>\r\n此时看到\r\nserver端也多了一个行\r\n<pre>Received message: This is a message</pre>\r\nZMQ注意点：\r\n1) 服务端和客户端无论谁先启动，效果是相同的，这点不同于Socket。\r\n2) 在服务端收到信息以前，程序是阻塞的，会一直等待客户端连接上来。\r\n3) 服务端收到信息以后，会send一个“World”给客户端。值得注意的是一定是client连接上来以后，send消息给Server，然后Server再rev然后响应client，这种一问一答式的。如果Server先send，client先rev是会报错的。\r\n4) ZMQ通信通信单元是消息，他除了知道Bytes的大小，他并不关心的消息格式。因此，你可以使用任何你觉得好用的数据格式。Xml、Protocol Buffers、Thrift、json等等。\r\n5) 虽然可以使用ZMQ实现HTTP协议，但是，这绝不是他所擅长的。','OMQ php简单体验','','inherit','open','open','','146-revision-v1','','','2016-08-08 07:59:14','2016-08-08 07:59:14','',146,'http://blog.raymond.com/?p=147',0,'revision','',0),(150,1,'2016-08-30 14:12:41','2016-08-30 14:12:41','上了外卖功能后，发现系统响应有时会出现响应不过来的情况，所以觉得需要把服务器负载优化提上工作日程;\r\n\r\n今天主要完成了\r\n\r\n1.数据库索引优化\r\n本来在设计的时候，我的观点是在明确数据表的使用场景和频率时，索引先不要加太多，以免不必要的索引修改导致太多的内存消耗\r\n整个下订单的逻辑，涉及到十多张表，需要多次查询数据库，这时候，如果mysql耗时过长则影响很严重。\r\n所以先进行下单测试，压测数据，2s内1000个下单请求，所有订单能够正常处理，但是最长的下单到处理完成回复时长达到2.7min，很明显有问题。\r\n接着进行代码分析，将涉及到的查询全部进行索引优化，新增了十多个索引。再进行同样的测试，最长回复为 2.4min。减去网络延迟和nginx缓存时间。\r\n效果明显（之前没有先记录优化前数据，优化后的处理时间为单个下单请求0.93s左右，在目前的服务器配置下暂时可以接受）\r\n\r\n2.nginx配置优化\r\n在ngxin配置中新增处理时长字段 \'upstream_response_time $upstream_response_time request_time $request_time \'\r\n监控请求的处理时间，记录数据作为后面优化依据','1.数据准备','','publish','open','open','','1-%e6%95%b0%e6%8d%ae%e5%87%86%e5%a4%87','','','2016-08-30 14:12:41','2016-08-30 14:12:41','',0,'http://blog.raymond.com/?p=150',0,'post','',0),(151,1,'2016-08-30 14:12:41','2016-08-30 14:12:41','上了外卖功能后，发现系统响应有时会出现响应不过来的情况，所以觉得需要把服务器负载优化提上工作日程;\r\n\r\n今天主要完成了\r\n\r\n1.数据库索引优化\r\n本来在设计的时候，我的观点是在明确数据表的使用场景和频率时，索引先不要加太多，以免不必要的索引修改导致太多的内存消耗\r\n整个下订单的逻辑，涉及到十多张表，需要多次查询数据库，这时候，如果mysql耗时过长则影响很严重。\r\n所以先进行下单测试，压测数据，2s内1000个下单请求，所有订单能够正常处理，但是最长的下单到处理完成回复时长达到2.7min，很明显有问题。\r\n接着进行代码分析，将涉及到的查询全部进行索引优化，新增了十多个索引。再进行同样的测试，最长回复为 2.4min。减去网络延迟和nginx缓存时间。\r\n效果明显（之前没有先记录优化前数据，优化后的处理时间为单个下单请求0.93s左右，在目前的服务器配置下暂时可以接受）\r\n\r\n2.nginx配置优化\r\n在ngxin配置中新增处理时长字段 \'upstream_response_time $upstream_response_time request_time $request_time \'\r\n监控请求的处理时间，记录数据作为后面优化依据','1.数据准备','','inherit','open','open','','150-revision-v1','','','2016-08-30 14:12:41','2016-08-30 14:12:41','',150,'http://blog.raymond.com/?p=151',0,'revision','',0),(152,1,'2016-08-31 07:52:33','2016-08-31 07:52:33','今天开发环境发现了一个问题，客户端的同步信息一直无法刷新，由于这个同步信息是保存在 redis 里面的。所以就猜测是 redis 出了问题。进入服务器，发现redis服务正常在运行。直接进入redis-cli，有四千多条记录。\r\n\r\n我试图写入一个测试数据，发现报了以下错误：\r\n<pre>(error) MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.</pre>\r\n意思说是内存不足，但是服务器内存还剩19%。虽然开发环境的配置较低，但是也是有几百兆的剩余。\r\n上网查了一下，才知道 redis保存数据数据到硬盘时，会把主进程fork一下，那这时就是主进程被double了，那就很容易出现内存不足的问题。查了一下服务器内redis占用的内存，21%，很明显19%的剩余是不够的。\r\n关于fork主进程，主要是redis是内存数据，肯定要保存到硬盘才能做持久化的，而保存有两种方式，SAVE和BGSAVE，即同步和异步写。同步写就是实时写，这样需要冻结住进程，对于大数据写入时间过长可能就会导致主进程假死；而异步写就是先将主进程fork出一个镜像，利用子进程写入数据，保证主进程还是可操作状态。\r\n\r\n解决方法：\r\n\r\n网上普遍是说设置 vm.overcommit_memory = 1\r\nLinux内核会根据参数vm.overcommit_memory参数的设置决定是否放行。\r\nvm.overcommit_memory = 1，直接放行\r\nvm.overcommit_memory = 0：则比较 此次请求分配的虚拟内存大小和系统当前空闲的物理内存加上swap，决定是否放行。\r\nvm.overcommit_memory = 2：则会比较 进程所有已分配的虚拟内存加上此次请求分配的虚拟内存和系统当前的空闲物理内存加上swap，决定是否放行。\r\n操作方式有三种\r\n（1）编辑/etc/sysctl.conf ，改vm.overcommit_memory=1，然后sysctl -p 使配置文件生效\r\n（2）sysctl vm.overcommit_memory=1\r\n（3）echo 1 &gt; /proc/sys/vm/overcommit_memory\r\n\r\n试了一下，然后再试着写 redis 数据\r\n<pre>127.0.0.1:6379&gt; set test 1\r\nOK</pre>\r\n成功了，说明方法可行。\r\n那vm.overcommit_memory=1 之后，如果内存还不足怎么办？\r\nLinux对大部分申请内存的请求都回复\"yes\"，以便能跑更多更大的程序。因为申请内存后，并不会马上使用内存。这种技术叫做Overcommit。当linux发现内存不足时，会发生OOM killer(OOM=out-of-memory)。它会选择杀死一些进程(用户态进程，不是内核线程)，以便释放内存。\r\n当oom-killer发生时，linux会选择杀死哪些进程？选择进程的函数是oom_badness函数(在mm/oom_kill.c中)，该函数会计算每个进程的点数(0~1000)。点数越高，这个进程越有可能被杀死。每个进程的点数跟oom_score_adj有关，而且oom_score_adj可以被设置(-1000最低，1000最高)。\r\n所以，这个终究只是暂时的处理方式，只是让 fork 能成功而已，如果一直这样，有可能 redis数据 本身太大，现在是21%，又能成功写入 到31%，甚至41%那就杯具了，所以还是有必要再进一步处理。\r\n\r\n再回头看看已写入的 reids 数据。很多是很久以前数据，也就是 redis 的缓存超时时间比较混乱。\r\n所以，接下来需要整理 redis 每个字段的合理缓存时间','发现redis内存不足','','publish','open','open','','%e5%8f%91%e7%8e%b0redis%e5%86%85%e5%ad%98%e4%b8%8d%e8%b6%b3','','','2016-08-31 07:52:33','2016-08-31 07:52:33','',0,'http://blog.raymond.com/?p=152',0,'post','',0),(153,1,'2016-08-31 07:52:33','2016-08-31 07:52:33','今天开发环境发现了一个问题，客户端的同步信息一直无法刷新，由于这个同步信息是保存在 redis 里面的。所以就猜测是 redis 出了问题。进入服务器，发现redis服务正常在运行。直接进入redis-cli，有四千多条记录。\r\n\r\n我试图写入一个测试数据，发现报了以下错误：\r\n<pre>(error) MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.</pre>\r\n意思说是内存不足，但是服务器内存还剩19%。虽然开发环境的配置较低，但是也是有几百兆的剩余。\r\n上网查了一下，才知道 redis保存数据数据到硬盘时，会把主进程fork一下，那这时就是主进程被double了，那就很容易出现内存不足的问题。查了一下服务器内redis占用的内存，21%，很明显19%的剩余是不够的。\r\n关于fork主进程，主要是redis是内存数据，肯定要保存到硬盘才能做持久化的，而保存有两种方式，SAVE和BGSAVE，即同步和异步写。同步写就是实时写，这样需要冻结住进程，对于大数据写入时间过长可能就会导致主进程假死；而异步写就是先将主进程fork出一个镜像，利用子进程写入数据，保证主进程还是可操作状态。\r\n\r\n解决方法：\r\n\r\n网上普遍是说设置 vm.overcommit_memory = 1\r\nLinux内核会根据参数vm.overcommit_memory参数的设置决定是否放行。\r\nvm.overcommit_memory = 1，直接放行\r\nvm.overcommit_memory = 0：则比较 此次请求分配的虚拟内存大小和系统当前空闲的物理内存加上swap，决定是否放行。\r\nvm.overcommit_memory = 2：则会比较 进程所有已分配的虚拟内存加上此次请求分配的虚拟内存和系统当前的空闲物理内存加上swap，决定是否放行。\r\n操作方式有三种\r\n（1）编辑/etc/sysctl.conf ，改vm.overcommit_memory=1，然后sysctl -p 使配置文件生效\r\n（2）sysctl vm.overcommit_memory=1\r\n（3）echo 1 &gt; /proc/sys/vm/overcommit_memory\r\n\r\n试了一下，然后再试着写 redis 数据\r\n<pre>127.0.0.1:6379&gt; set test 1\r\nOK</pre>\r\n成功了，说明方法可行。\r\n那vm.overcommit_memory=1 之后，如果内存还不足怎么办？\r\nLinux对大部分申请内存的请求都回复\"yes\"，以便能跑更多更大的程序。因为申请内存后，并不会马上使用内存。这种技术叫做Overcommit。当linux发现内存不足时，会发生OOM killer(OOM=out-of-memory)。它会选择杀死一些进程(用户态进程，不是内核线程)，以便释放内存。\r\n当oom-killer发生时，linux会选择杀死哪些进程？选择进程的函数是oom_badness函数(在mm/oom_kill.c中)，该函数会计算每个进程的点数(0~1000)。点数越高，这个进程越有可能被杀死。每个进程的点数跟oom_score_adj有关，而且oom_score_adj可以被设置(-1000最低，1000最高)。\r\n所以，这个终究只是暂时的处理方式，只是让 fork 能成功而已，如果一直这样，有可能 redis数据 本身太大，现在是21%，又能成功写入 到31%，甚至41%那就杯具了，所以还是有必要再进一步处理。\r\n\r\n再回头看看已写入的 reids 数据。很多是很久以前数据，也就是 redis 的缓存超时时间比较混乱。\r\n所以，接下来需要整理 redis 每个字段的合理缓存时间','发现redis内存不足','','inherit','open','open','','152-revision-v1','','','2016-08-31 07:52:33','2016-08-31 07:52:33','',152,'http://blog.raymond.com/?p=153',0,'revision','',0),(154,1,'2016-09-04 13:25:03','2016-09-04 13:25:03','今天系统跪了两次，中午11点多和晚上22点\r\n\r\n登入服务器看到mysql停了，service mysql status显示：\r\nMySQL is not running, but lock file (/var/lock/subsys/mysql[FAILED]\r\n\r\n中午的时候直接就重启，\r\nservice mysql restart\r\n一切很顺利，由于刚刚上线了新功能版本，再加上加班连续工作了22小时，实在没有精力再做事情，就想着先留着，晚点再查。没想到过了10个钟头就又出问题了。\r\n\r\n这次发现比较晚，系统服务停了半个小时，照例重启后彻查问题。\r\n\r\n首先查看mysql的错误日志\r\n在出问题的时间段发现了一些问题\r\n首先是从9-1 18:00开始就报错，一分钟一次\r\nSlave I/O: error reconnecting to master \'repli_2@120.55.182.145:3306\' - retry-time: 60 retries: 887, Error_code: 2003\r\n中间还夹着了一些其他错误，比如\r\n\r\nUnsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it accesses a non-transactional table after accessing a transactional table within the same transaction. Statement: INSERT INTO `bbalance_record` (`bid`, `before`, `charge`, `after`, `type`, `type_oid`, `create_time`) VALUES (97, 76760, 8141, 84901, 1, 631, 1472745723)\r\n2016-09-02 00:02:17 17735 [ERROR] Slave I/O: error reconnecting to master \'repli_2@120.55.182.145:3306\' - retry-time: 60 retries: 356, Error_code: 2003\r\n然后在 9-2 18：53，9-3 得11：18，的时候出现了一下错误\r\n160903 13:14:15 mysqld_safe Number of processes running now: 0\r\n//可能是内存不足 或 磁盘空间不足，导致创建mysql.sock文件创建不成功引起的\r\n\r\n160903 13:14:15 mysqld_safe mysqld restarted\r\n\r\n2016-09-03 13:14:16 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).\r\n//从 5.6开始，timestamp 的默认行为已经是 deprecated 了。\r\n//在MySQL 5.6.6之前，TIMESTAMP的默认行为：\r\n//TIMESTAMP列如果没有明确声明NULL属性，默认为NOT NULL。（而其他数据类型，如果没有显示声明为NOT NULL，则允许NULL值。）设置TIMESTAMP的列值为NULL，会自动存储为当前timestamp。\r\n//表中的第一个TIMESTAMP列，如果没有声明NULL属性、DEFAULT或者 ON UPDATE，会自动分配 DEFAULT CURRENT_TIMESTAMP和ON UPDATE CURRENT_TIMESTAMP 属性。\r\n//表中第二个TIMESTAMP列，如果没有声明为NULL或者DEFAULT子句，默认自动分配\'0000-00-00 00:00:00′。插入行时没有指明改列的值，该列默认分配\'0000-00-00 00:00:00′，且没有警告。\r\n\r\n2016-09-03 13:14:16 6750 [Note] Plugin \'FEDERATED\' is disabled.\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Using atomics to ref count buffer pool pages\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: The InnoDB memory heap is disabled\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Compressed tables use zlib 1.2.3\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Using CPU crc32 instructions\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Initializing buffer pool, size = 128.0M\r\nInnoDB: mmap(137363456 bytes) failed; errno 12\r\n2016-09-03 13:14:16 6750 [ERROR] InnoDB: Cannot allocate memory for the buffer pool\r\n2016-09-03 13:14:16 6750 [ERROR] Plugin \'InnoDB\' init function returned error.\r\n2016-09-03 13:14:16 6750 [ERROR] Plugin \'InnoDB\' registration as a STORAGE ENGINE failed.\r\n2016-09-03 13:14:16 6750 [ERROR] Unknown/unsupported storage engine: InnoDB\r\n2016-09-03 13:14:16 6750 [ERROR] Aborting\r\n//内存不足，innodb_buffer_pool_size是 mysql 启动时初始化需要的内存，如果机器内存不够这个数值则会启动不起来\r\n//先kill掉了机器上其他的一些无用的进程，接着去修改了my.cnf配置文件，找到了如下两个字段分别将前者由2G改为200M，后者改为了120M。\r\n//innodb_buffer_pool_size=200M\r\n//key_buffer=120M\r\n\r\n//设置一下swap分区，，通过fdisk -l 和 1mount 看swap的信息\r\n//2.1) dd if=/dev/zero of=/swapfile bs=1M count=1024\r\n//2.2) mkswap /swapfile\r\n//2.3) swapon /swapfile\r\n//2.4) 添加这行： /swapfile swap swap defaults 0 0 到 /etc/fstab\r\n//master/slave的配置文件 有错误\r\n\r\n2016-09-03 22:19:39 30146 [Warning] Neither --relay-log nor --relay-log-index were used; so replication may break when this MySQL server acts as a slave and has his hostname changed!! Please use \'--relay-log=iZ237i6xumiZ-relay-bin\' to avoid this problem.\r\n2016-09-03 22:19:39 30146 [ERROR] Failed to open the relay log \'./mysqld-relay-bin.000003\' (relay_log_pos 4).\r\n2016-09-03 22:19:39 30146 [ERROR] Could not find target log file mentioned in relay log info in the index file \'./iZ237i6xumiZ-relay-bin.index\' during relay log initialization.\r\n2016-09-03 22:19:39 30146 [ERROR] Failed to initialize the master info structure\r\n2016-09-03 22:19:39 30146 [Note] Check error log for additional messages. You will not be able to start replication until the issue is resolved and the server restarted.\r\n2016-09-03 22:19:39 30146 [Note] Event Scheduler: Loaded 0 events\r\n2016-09-03 22:19:39 30146 [Note] /usr/local/mysql/bin/mysqld: ready for connections.\r\nVersion: \'5.6.16-log\' socket: \'/tmp/mysql.sock\' port: 3306 Source distribution\r\n2016-09-03 22:23:21 30146 [Warning] IP address \'119.129.70.60\' could not be resolved: Name or service not known\r\n\r\n//slave改变了服务端口和文件路径，而mysql-relay-bin.index中仍然保存着旧relay日志文件的路径，而这些路径下又找不到合适的文件，因此报错\r\n//解决方法为 重置slave的参照， reset slave;\r\n//删除该文件及关联的relay-bin文件\r\n上面的分析下来，基本确定解决问题的几个方向：\r\n1.服务器内存不够，free -m 看到有时候剩余内存不够128M，所以 mysql 起不来\r\n2.主从配置出了问题，从服务器的数据库从 9-1 18:00 开始就连不上了。master数据库一直在尝试重新连接而且一直失败（应该是从服务器的mysql改名或者直接跪了）\r\n3.数据库同步的binglog有一些错误的文件，导致读写失败，应该是问题2引起的\r\n4.mysql存在错误的配置项 和 数据库中有时间字段没默认值（会影响数据库但是不致命）\r\n\r\n核心解决问题1\r\n先查看服务器的内存使用情况，服务器 一共是8G内存，free -m看到一般空闲只剩120M左右\r\ntop + M 看到占用内存大的，mysql，nginx 和 多个php，加起来也不超过 15% 的占用\r\ncat /proc/meminfo 统计出占用top的，发现 slab占了 6.6G，也就是 85%！\r\nSlab 6834632 kb\r\nSReclaimable 44420 kb\r\nSUnreclaim 6790212 kb\r\n而且看到里面 基本都是不可回收的\r\nSlab是用于存放内核数据结构缓存，再通过slabtop命令查看这部分内存的使用情况：\r\nOBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME\r\n31909914 31909914 100% 0.06K 540846 59 2163384K size-64\r\n31893008 31892930 99% 0.03K 284759 112 1139036K inotify_event_private_data\r\n31892927 31892927 100% 0.10K 861971 37 3447884K fsnotify_event\r\n\r\n修改/proc/sys/vm/drop_caches，释放Slab占用的cache内存空间\r\nWriting to this will cause the kernel to drop clean caches, dentries and inodes from memory, causing that memory to become free.\r\nTo free pagecache:\r\n* echo 1 &gt; /proc/sys/vm/drop_caches\r\nTo free dentries and inodes:\r\n* echo 2 &gt; /proc/sys/vm/drop_caches\r\nTo free pagecache, dentries and inodes:\r\n* echo 3 &gt; /proc/sys/vm/drop_caches\r\nAs this is a non-destructive operation, and dirty objects are notfreeable, the user should run \"sync\" first in order to make sure allcached objects are freed.\r\nThis tunable was added in 2.6.16.\r\n\r\n或者\r\n\r\n$ sudo sysctl -a | grep free_kbytes\r\nvm.min_free_kbytes = 39847\r\nvm.extra_free_kbytes = 0\r\n$ sudo sysctl -w vm.extra_free_kbytes=836787 ######1GB\r\n临时加大阀值\r\nslab是Linux操作系统的一种内存分配机制。其工作是针对一些经常分配并释放的对象，如进程描述符等，这些对象的大小一般比较小，如果直接采用伙伴系统来进行分配和释放，不仅会造成大量的内碎片，而且处理速度也太慢。而slab分配器是基于对象进行管理的，相同类型的对象归为一类(如进程描述符就是一类)，每当要申请这样一个对象，slab分配器就从一个slab列表中分配一个这样大小的单元出去，而当要释放时，将其重新保存在该列表中，而不是直接返回给伙伴系统，从而避免这些内碎片。slab分配器并不丢弃已分配的对象，而是释放并把它们保存在内存中。当以后又要请求新的对象时，就可以从内存直接获取而不用重复初始化。\r\n\r\n测量一个进程占用了多少内存，linux为我们提供了一个很方便的方法，/proc目录为我们提供了所有的信息，实际上top等工具也通过这里来获取相应的信息。\r\n/proc/meminfo 机器的内存使用信息\r\n/proc/pid/maps pid为进程号，显示当前进程所占用的虚拟地址。\r\n/proc/pid/statm 进程所占用的内存\r\n\r\ngrep low /proc/zoneinfo 查看系统自动回收内存的临界值（每行4K为单位）\r\n原来的系统系数如下\r\nlow 38\r\nlow 9853\r\nlow 11225\r\n也就是 82M 才自动回收，','记一次严重的mysql停止事故','','publish','open','open','','%e8%ae%b0%e4%b8%80%e6%ac%a1%e4%b8%a5%e9%87%8d%e7%9a%84mysql%e5%81%9c%e6%ad%a2%e4%ba%8b%e6%95%85','','','2016-09-04 13:25:03','2016-09-04 13:25:03','',0,'http://blog.raymond.com/?p=154',0,'post','',0),(155,1,'2016-09-04 13:25:03','2016-09-04 13:25:03','今天系统跪了两次，中午11点多和晚上22点\r\n\r\n登入服务器看到mysql停了，service mysql status显示：\r\nMySQL is not running, but lock file (/var/lock/subsys/mysql[FAILED]\r\n\r\n中午的时候直接就重启，\r\nservice mysql restart\r\n一切很顺利，由于刚刚上线了新功能版本，再加上加班连续工作了22小时，实在没有精力再做事情，就想着先留着，晚点再查。没想到过了10个钟头就又出问题了。\r\n\r\n这次发现比较晚，系统服务停了半个小时，照例重启后彻查问题。\r\n\r\n首先查看mysql的错误日志\r\n在出问题的时间段发现了一些问题\r\n首先是从9-1 18:00开始就报错，一分钟一次\r\nSlave I/O: error reconnecting to master \'repli_2@120.55.182.145:3306\' - retry-time: 60 retries: 887, Error_code: 2003\r\n中间还夹着了一些其他错误，比如\r\n\r\nUnsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it accesses a non-transactional table after accessing a transactional table within the same transaction. Statement: INSERT INTO `bbalance_record` (`bid`, `before`, `charge`, `after`, `type`, `type_oid`, `create_time`) VALUES (97, 76760, 8141, 84901, 1, 631, 1472745723)\r\n2016-09-02 00:02:17 17735 [ERROR] Slave I/O: error reconnecting to master \'repli_2@120.55.182.145:3306\' - retry-time: 60 retries: 356, Error_code: 2003\r\n然后在 9-2 18：53，9-3 得11：18，的时候出现了一下错误\r\n160903 13:14:15 mysqld_safe Number of processes running now: 0\r\n//可能是内存不足 或 磁盘空间不足，导致创建mysql.sock文件创建不成功引起的\r\n\r\n160903 13:14:15 mysqld_safe mysqld restarted\r\n\r\n2016-09-03 13:14:16 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).\r\n//从 5.6开始，timestamp 的默认行为已经是 deprecated 了。\r\n//在MySQL 5.6.6之前，TIMESTAMP的默认行为：\r\n//TIMESTAMP列如果没有明确声明NULL属性，默认为NOT NULL。（而其他数据类型，如果没有显示声明为NOT NULL，则允许NULL值。）设置TIMESTAMP的列值为NULL，会自动存储为当前timestamp。\r\n//表中的第一个TIMESTAMP列，如果没有声明NULL属性、DEFAULT或者 ON UPDATE，会自动分配 DEFAULT CURRENT_TIMESTAMP和ON UPDATE CURRENT_TIMESTAMP 属性。\r\n//表中第二个TIMESTAMP列，如果没有声明为NULL或者DEFAULT子句，默认自动分配\'0000-00-00 00:00:00′。插入行时没有指明改列的值，该列默认分配\'0000-00-00 00:00:00′，且没有警告。\r\n\r\n2016-09-03 13:14:16 6750 [Note] Plugin \'FEDERATED\' is disabled.\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Using atomics to ref count buffer pool pages\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: The InnoDB memory heap is disabled\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Compressed tables use zlib 1.2.3\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Using CPU crc32 instructions\r\n2016-09-03 13:14:16 6750 [Note] InnoDB: Initializing buffer pool, size = 128.0M\r\nInnoDB: mmap(137363456 bytes) failed; errno 12\r\n2016-09-03 13:14:16 6750 [ERROR] InnoDB: Cannot allocate memory for the buffer pool\r\n2016-09-03 13:14:16 6750 [ERROR] Plugin \'InnoDB\' init function returned error.\r\n2016-09-03 13:14:16 6750 [ERROR] Plugin \'InnoDB\' registration as a STORAGE ENGINE failed.\r\n2016-09-03 13:14:16 6750 [ERROR] Unknown/unsupported storage engine: InnoDB\r\n2016-09-03 13:14:16 6750 [ERROR] Aborting\r\n//内存不足，innodb_buffer_pool_size是 mysql 启动时初始化需要的内存，如果机器内存不够这个数值则会启动不起来\r\n//先kill掉了机器上其他的一些无用的进程，接着去修改了my.cnf配置文件，找到了如下两个字段分别将前者由2G改为200M，后者改为了120M。\r\n//innodb_buffer_pool_size=200M\r\n//key_buffer=120M\r\n\r\n//设置一下swap分区，，通过fdisk -l 和 1mount 看swap的信息\r\n//2.1) dd if=/dev/zero of=/swapfile bs=1M count=1024\r\n//2.2) mkswap /swapfile\r\n//2.3) swapon /swapfile\r\n//2.4) 添加这行： /swapfile swap swap defaults 0 0 到 /etc/fstab\r\n//master/slave的配置文件 有错误\r\n\r\n2016-09-03 22:19:39 30146 [Warning] Neither --relay-log nor --relay-log-index were used; so replication may break when this MySQL server acts as a slave and has his hostname changed!! Please use \'--relay-log=iZ237i6xumiZ-relay-bin\' to avoid this problem.\r\n2016-09-03 22:19:39 30146 [ERROR] Failed to open the relay log \'./mysqld-relay-bin.000003\' (relay_log_pos 4).\r\n2016-09-03 22:19:39 30146 [ERROR] Could not find target log file mentioned in relay log info in the index file \'./iZ237i6xumiZ-relay-bin.index\' during relay log initialization.\r\n2016-09-03 22:19:39 30146 [ERROR] Failed to initialize the master info structure\r\n2016-09-03 22:19:39 30146 [Note] Check error log for additional messages. You will not be able to start replication until the issue is resolved and the server restarted.\r\n2016-09-03 22:19:39 30146 [Note] Event Scheduler: Loaded 0 events\r\n2016-09-03 22:19:39 30146 [Note] /usr/local/mysql/bin/mysqld: ready for connections.\r\nVersion: \'5.6.16-log\' socket: \'/tmp/mysql.sock\' port: 3306 Source distribution\r\n2016-09-03 22:23:21 30146 [Warning] IP address \'119.129.70.60\' could not be resolved: Name or service not known\r\n\r\n//slave改变了服务端口和文件路径，而mysql-relay-bin.index中仍然保存着旧relay日志文件的路径，而这些路径下又找不到合适的文件，因此报错\r\n//解决方法为 重置slave的参照， reset slave;\r\n//删除该文件及关联的relay-bin文件\r\n上面的分析下来，基本确定解决问题的几个方向：\r\n1.服务器内存不够，free -m 看到有时候剩余内存不够128M，所以 mysql 起不来\r\n2.主从配置出了问题，从服务器的数据库从 9-1 18:00 开始就连不上了。master数据库一直在尝试重新连接而且一直失败（应该是从服务器的mysql改名或者直接跪了）\r\n3.数据库同步的binglog有一些错误的文件，导致读写失败，应该是问题2引起的\r\n4.mysql存在错误的配置项 和 数据库中有时间字段没默认值（会影响数据库但是不致命）\r\n\r\n核心解决问题1\r\n先查看服务器的内存使用情况，服务器 一共是8G内存，free -m看到一般空闲只剩120M左右\r\ntop + M 看到占用内存大的，mysql，nginx 和 多个php，加起来也不超过 15% 的占用\r\ncat /proc/meminfo 统计出占用top的，发现 slab占了 6.6G，也就是 85%！\r\nSlab 6834632 kb\r\nSReclaimable 44420 kb\r\nSUnreclaim 6790212 kb\r\n而且看到里面 基本都是不可回收的\r\nSlab是用于存放内核数据结构缓存，再通过slabtop命令查看这部分内存的使用情况：\r\nOBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME\r\n31909914 31909914 100% 0.06K 540846 59 2163384K size-64\r\n31893008 31892930 99% 0.03K 284759 112 1139036K inotify_event_private_data\r\n31892927 31892927 100% 0.10K 861971 37 3447884K fsnotify_event\r\n\r\n修改/proc/sys/vm/drop_caches，释放Slab占用的cache内存空间\r\nWriting to this will cause the kernel to drop clean caches, dentries and inodes from memory, causing that memory to become free.\r\nTo free pagecache:\r\n* echo 1 &gt; /proc/sys/vm/drop_caches\r\nTo free dentries and inodes:\r\n* echo 2 &gt; /proc/sys/vm/drop_caches\r\nTo free pagecache, dentries and inodes:\r\n* echo 3 &gt; /proc/sys/vm/drop_caches\r\nAs this is a non-destructive operation, and dirty objects are notfreeable, the user should run \"sync\" first in order to make sure allcached objects are freed.\r\nThis tunable was added in 2.6.16.\r\n\r\n或者\r\n\r\n$ sudo sysctl -a | grep free_kbytes\r\nvm.min_free_kbytes = 39847\r\nvm.extra_free_kbytes = 0\r\n$ sudo sysctl -w vm.extra_free_kbytes=836787 ######1GB\r\n临时加大阀值\r\nslab是Linux操作系统的一种内存分配机制。其工作是针对一些经常分配并释放的对象，如进程描述符等，这些对象的大小一般比较小，如果直接采用伙伴系统来进行分配和释放，不仅会造成大量的内碎片，而且处理速度也太慢。而slab分配器是基于对象进行管理的，相同类型的对象归为一类(如进程描述符就是一类)，每当要申请这样一个对象，slab分配器就从一个slab列表中分配一个这样大小的单元出去，而当要释放时，将其重新保存在该列表中，而不是直接返回给伙伴系统，从而避免这些内碎片。slab分配器并不丢弃已分配的对象，而是释放并把它们保存在内存中。当以后又要请求新的对象时，就可以从内存直接获取而不用重复初始化。\r\n\r\n测量一个进程占用了多少内存，linux为我们提供了一个很方便的方法，/proc目录为我们提供了所有的信息，实际上top等工具也通过这里来获取相应的信息。\r\n/proc/meminfo 机器的内存使用信息\r\n/proc/pid/maps pid为进程号，显示当前进程所占用的虚拟地址。\r\n/proc/pid/statm 进程所占用的内存\r\n\r\ngrep low /proc/zoneinfo 查看系统自动回收内存的临界值（每行4K为单位）\r\n原来的系统系数如下\r\nlow 38\r\nlow 9853\r\nlow 11225\r\n也就是 82M 才自动回收，','记一次严重的mysql停止事故','','inherit','open','open','','154-revision-v1','','','2016-09-04 13:25:03','2016-09-04 13:25:03','',154,'http://blog.raymond.com/?p=155',0,'revision','',0),(156,1,'2016-09-05 17:39:36','2016-09-05 17:39:36','[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 7526 343 0 21 29\r\n-/+ buffers/cache: 7475 393\r\nSwap: 1023 471 552\r\n\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep notify\r\nroot 33 2 0 Jul08 ? 00:00:00 [kacpi_notify]\r\nroot 476 470 0 Jul25 ? 00:00:01 inotifywait -mrq --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /data/www_pro/\r\nroot 7716 7678 0 01:10 pts/0 00:00:00 grep notify\r\nroot 17699 17683 0 Jul29 ? 00:01:00 inotifywait -mr --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /var/lib/php/session/\r\n[root@iZ237i6xumiZ www_test]# kill 476\r\n[root@iZ237i6xumiZ www_test]# kill 17699\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 5447 2421 0 25 39\r\n-/+ buffers/cache: 5381 2487\r\nSwap: 1023 468 555\r\n\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep sync\r\nroot 22 2 0 Jul08 ? 00:00:00 [async/mgr]\r\nroot 26 2 0 Jul08 ? 00:00:19 [sync_supers]\r\nroot 8038 17700 0 01:14 ? 00:00:00 rsync -avH --port=873 --progress --bwlimit=100 /var/lib/php/session/ www@120.55.182.145::session --password-file=/etc/passwd.txt\r\nroot 8046 7678 0 01:14 pts/0 00:00:00 grep sync\r\nroot 17683 1 0 Jul29 ? 00:00:00 sh rsync_session.sh\r\nroot 17700 17683 0 Jul29 ? 00:10:01 sh rsync_session.sh\r\n\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 812 7056 0 32 68\r\n-/+ buffers/cache: 712 7156\r\nSwap: 1023 468 555','同步占用内存','','publish','open','open','','%e5%90%8c%e6%ad%a5%e5%8d%a0%e7%94%a8%e5%86%85%e5%ad%98','','','2016-09-05 18:08:32','2016-09-05 18:08:32','',0,'http://blog.raymond.com/?p=156',0,'post','',0),(159,1,'2016-09-05 17:47:46','2016-09-05 17:47:46','[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 7526 343 0 21 29\r\n-/+ buffers/cache: 7475 393\r\nSwap: 1023 471 552\r\n\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep notify\r\nroot 33 2 0 Jul08 ? 00:00:00 [kacpi_notify]\r\nroot 476 470 0 Jul25 ? 00:00:01 inotifywait -mrq --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /data/www_pro/\r\nroot 7716 7678 0 01:10 pts/0 00:00:00 grep notify\r\nroot 17699 17683 0 Jul29 ? 00:01:00 inotifywait -mr --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /var/lib/php/session/\r\n[root@iZ237i6xumiZ www_test]# kill 476\r\n[root@iZ237i6xumiZ www_test]# kill 17699\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 5447 2421 0 25 39\r\n-/+ buffers/cache: 5381 2487\r\nSwap: 1023 468 555\r\n\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep sync\r\nroot 22 2 0 Jul08 ? 00:00:00 [async/mgr]\r\nroot 26 2 0 Jul08 ? 00:00:19 [sync_supers]\r\nroot 8038 17700 0 01:14 ? 00:00:00 rsync -avH --port=873 --progress --bwlimit=100 /var/lib/php/session/ www@120.55.182.145::session --password-file=/etc/passwd.txt\r\nroot 8046 7678 0 01:14 pts/0 00:00:00 grep sync\r\nroot 17683 1 0 Jul29 ? 00:00:00 sh rsync_session.sh\r\nroot 17700 17683 0 Jul29 ? 00:10:01 sh rsync_session.sh\r\n\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 812 7056 0 32 68\r\n-/+ buffers/cache: 712 7156\r\nSwap: 1023 468 555','同步占用内存','','inherit','open','open','','156-revision-v1','','','2016-09-05 17:47:46','2016-09-05 17:47:46','',156,'http://blog.raymond.com/?p=159',0,'revision','',0),(157,1,'2016-09-05 17:39:36','2016-09-05 17:39:36','[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 7526 343 0 21 29\r\n-/+ buffers/cache: 7475 393\r\nSwap: 1023 471 552\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep notify\r\nroot 33 2 0 Jul08 ? 00:00:00 [kacpi_notify]\r\nroot 476 470 0 Jul25 ? 00:00:01 inotifywait -mrq --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /data/www_pro/\r\nroot 7716 7678 0 01:10 pts/0 00:00:00 grep notify\r\nroot 17699 17683 0 Jul29 ? 00:01:00 inotifywait -mr --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /var/lib/php/session/\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]# kill 764\r\nbash: kill: (764) - 没有那个进程\r\n[root@iZ237i6xumiZ www_test]# kill 476\r\n[root@iZ237i6xumiZ www_test]# kill 17699\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 5447 2421 0 25 39\r\n-/+ buffers/cache: 5381 2487\r\nSwap: 1023 468 555\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]# ps -ef|grep sync\r\nroot 22 2 0 Jul08 ? 00:00:00 [async/mgr]\r\nroot 26 2 0 Jul08 ? 00:00:19 [sync_supers]\r\nroot 8038 17700 0 01:14 ? 00:00:00 rsync -avH --port=873 --progress --bwlimit=100 /var/lib/php/session/ www@120.55.182.145::session --password-file=/etc/passwd.txt\r\nroot 8046 7678 0 01:14 pts/0 00:00:00 grep sync\r\nroot 17683 1 0 Jul29 ? 00:00:00 sh rsync_session.sh\r\nroot 17700 17683 0 Jul29 ? 00:10:01 sh rsync_session.sh\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]# kill 8038\r\nbash: kill: (8038) - 没有那个进程\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]#\r\n[root@iZ237i6xumiZ www_test]# free -m\r\ntotal used free shared buffers cached\r\nMem: 7869 812 7056 0 32 68\r\n-/+ buffers/cache: 712 7156\r\nSwap: 1023 468 555','同步占用内存','','inherit','open','open','','156-revision-v1','','','2016-09-05 17:39:36','2016-09-05 17:39:36','',156,'http://blog.raymond.com/?p=157',0,'revision','',0),(158,1,'2016-09-05 17:47:25','2016-09-05 17:47:25','[root@iZ237i6xumiZ www_test]# free -m\ntotal used free shared buffers cached\nMem: 7869 7526 343 0 21 29\n-/+ buffers/cache: 7475 393\nSwap: 1023 471 552\n\n[root@iZ237i6xumiZ www_test]# ps -ef|grep notify\nroot 33 2 0 Jul08 ? 00:00:00 [kacpi_notify]\nroot 476 470 0 Jul25 ? 00:00:01 inotifywait -mrq --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /data/www_pro/\nroot 7716 7678 0 01:10 pts/0 00:00:00 grep notify\nroot 17699 17683 0 Jul29 ? 00:01:00 inotifywait -mr --timefmt %d/%m/%y %H:%M --format %T %w%f%e -e close_write,modify,delete,create,attrib,move /var/lib/php/session/\n[root@iZ237i6xumiZ www_test]# kill 476\n[root@iZ237i6xumiZ www_test]# kill 17699\n[root@iZ237i6xumiZ www_test]# free -m\ntotal used free shared buffers cached\nMem: 7869 5447 2421 0 25 39\n-/+ buffers/cache: 5381 2487\nSwap: 1023 468 555\n\n[root@iZ237i6xumiZ www_test]# ps -ef|grep sync\nroot 22 2 0 Jul08 ? 00:00:00 [async/mgr]\nroot 26 2 0 Jul08 ? 00:00:19 [sync_supers]\nroot 8038 17700 0 01:14 ? 00:00:00 rsync -avH --port=873 --progress --bwlimit=100 /var/lib/php/session/ www@120.55.182.145::session --password-file=/etc/passwd.txt\nroot 8046 7678 0 01:14 pts/0 00:00:00 grep sync\nroot 17683 1 0 Jul29 ? 00:00:00 sh rsync_session.sh\nroot 17700 17683 0 Jul29 ? 00:10:01 sh rsync_session.sh\n\n[root@iZ237i6xumiZ www_test]# free -m\ntotal used free shared buffers cached\nMem: 7869 812 7056 0 32 68\n-/+ buffers/cache: 712 7156\nSwap: 1023 468 555','同步占用内存','','inherit','open','open','','156-autosave-v1','','','2016-09-05 17:47:25','2016-09-05 17:47:25','',156,'http://blog.raymond.com/?p=158',0,'revision','',0),(160,1,'2016-09-07 07:54:59','2016-09-07 07:54:59','<h4><b><span style=\"font-size: large;\">负载均衡（Server Load Balancer）是对多台云服务器进行流量分发的负载均衡服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。  </span></b></h4>\r\n<div></div>\r\n<div><b> 限制：</b></div>\r\n<div>阿里云的负载均衡不支持跨地域（Region）部署，也就是说一个负载均衡实例后端的ECS必须是属于同一地域（Region）的ECS实例。</div>\r\n<div><span style=\"font-size: large;\"><b> </b></span></div>\r\n<div><span style=\"font-size: large;\"><b>操作实例</b></span></div>\r\n<div><b> 1.设置转发规则 </b></div>\r\n<div> 选择调度算法——可供选择的有“加权轮询”和“加权最小连接数模式”。</div>\r\n<div><span style=\"color: #808080;\"><i> 这里的权值是针对每一台服务器配置，SLB通过权值获取每台服务器被选中的概率。  </i></span></div>\r\n<div>“轮询模式”会将外部和内部的访问请求依序分发给后端ECS进行处理，而“最小连接数模式”会将外部和内部的访问请求分发给当前连接数最小的一台后端ECS进行处理。</div>\r\n<div><b> </b></div>\r\n<div><b>2.设置会话保持规则</b></div>\r\n<div> 阿里云负载均衡的会话保持区分四层网络策略和七层网络协议，</div>\r\n<div> 1)  TCP/UDP 保持策略为基于IP，同一IP地址的请求转发到同一台后端云服务器处理</div>\r\n<div> 2) HTTP/HTTPS 保持策略为基于cookie，可以分为植入cookie 和 重写 cookie cookie植入，表示直接由负载均衡系统来分配和管理</div>\r\n<div>cookie植入，只需要在进行配置时需要指定会话保持的超时时间就可以实现。 不过只有后端 RS 返回的 HTTP 代码在以下代码中时, SLB 将植入会话保持所需头部：200、201、204、206、301、302、303、304、307。如果后端 RS 返回的 HTTP 状态代码为 4xx , SLB 不支持植入 Set-Cookie 头部, 可能会导致会话保持失败。</div>\r\n<div>cookie重写，表示负载均衡系统会根据用户自定义cookie名称来分配和管理对客户端进行的cookie植入操作，便于用户识别和区分自定义的cookie名称，从而有选择的针对后端应用服务器上的不同应用设定会话保持规则，用户在进行配置时需要指定相应的cookie名称。</div>\r\n<div>这种配置需要在nginx对需要会话保持的服务器添加add_header配置项</div>\r\n<pre> server {\r\n listen 8080;\r\n     server_name wqwq.example.com;\r\n     location / {\r\n              add_header Set-Cookie name=xxxx;\r\n              root html;\r\n              index index.html index.htm;\r\n          }</pre>\r\n<div><b> </b></div>\r\n<div><b>3.设置健康检查规则 </b></div>\r\n<div>用户开启健康检查功能后，当后端某个ECS健康检查出现问题时会将请求转发到其他健康检查正常的ECS上，而当该ECS恢复正常运行时，负载均衡会将其自动恢复到对外或对内的服务中。</div>\r\n<div></div>\r\n<div>关于TCP/HTTP/HTTPS健康检查的参数配置，提供如下参考建议：</div>\r\n<pre><i><span style=\"color: #808080;\"> 响应超时时间：5秒 \r\n</span></i><i><span style=\"color: #808080;\">健康检查间隔：2秒\r\n</span></i><i><span style=\"color: #808080;\">不健康阈值：3 \r\n</span></i><i><span style=\"color: #808080;\">健康阈值：3 </span></i></pre>\r\n<div><span style=\"color: #808080;\"><i> </i>在此配置下有利于用户服务及应用状态的尽快收敛： </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查失败响应时间（网络有问题）：(2+5)×3=21秒 如果用户有更高要求，可以适当地降低响应超时时间值，但必须先保证自己服务在正常状态下的处理时间小于这个值。 </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查成功响应时间：2×3=6秒 </span></div>\r\n<div><b> </b></div>\r\n<div><b>4.后端ECS权重 </b></div>\r\n<div> 指定后端服务器池内各ECS的转发权重，权重越高的ECS将被分配到更多的访问请求。</div>\r\n<div></div>\r\n<div><b>5. TCP与HTTP抗DDoS攻击 </b></div>\r\n<div></div>\r\n<div><b>7.带宽峰值</b></div>\r\n<div>设置某个服务器可承载的带宽峰值，单位 Mbps</div>\r\n<div></div>\r\n<div><b> 6.保证 ECS 服务器可以获取到用户的真实IP </b></div>\r\n<div></div>\r\n<div>Nginx作为负载均衡获取真实ip是使用http_realip_module，默认一键安装包安装的Nginx是没有安装这个模块的，需要重新重新编译Nginx并加装：</div>\r\n<div> 重新编译Nginx,增加 --with-http_realip_module</div>\r\n<pre> wget http://soft.phpwind.me/top/nginx-1.0.12.tar.gz \r\n tar zxvf nginx-1.0.12.tar.gz \r\n cd nginx-1.0.12 \r\n./configure --user=www --group=www --prefix=/alidata/server/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module \r\n make\r\nmake install \r\nkill -USR2 `cat /alidata/server/nginx/logs/nginx.pid` \r\n kill -QUIT `cat /alidata/server/nginx/logs/ nginx.pid.oldbin`</pre>\r\n<div> 修改nginx.conf，在 /alidata/server/nginx/conf/nginx.conf</div>\r\n<pre> fastcgi busy_buffers_size 128k;\r\n fastcgi temp_file_write_size 128k;</pre>\r\n<div> 下面增加</div>\r\n<pre>set_real_ip_from ip地址;<span style=\"color: #339966;\">//<em>这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</em></span>\r\nset_real_ip_from ip地址;<span style=\"color: #339966;\">//这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</span>\r\nreal_ip_header X-Forwarded-For;</pre>\r\n<div></div>\r\n<div> 重启Nnginx</div>\r\n<pre> /alidata/server/nginx/sbin/nginx -s reload</pre>','负载均衡配置','','publish','open','open','','%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1%e9%85%8d%e7%bd%ae','','','2016-09-07 08:20:16','2016-09-07 08:20:16','',0,'http://blog.raymond.com/?p=160',0,'post','',0),(161,1,'2016-09-07 07:52:51','2016-09-07 07:52:51','<h4><b><span style=\"font-size: large;\">负载均衡（Server Load Balancer）是对多台云服务器进行流量分发的负载均衡服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。  </span></b></h4>\r\n<div></div>\r\n<div><b> 限制：</b></div>\r\n<div>阿里云的负载均衡不支持跨地域（Region）部署，也就是说一个负载均衡实例后端的ECS必须是属于同一地域（Region）的ECS实例。</div>\r\n<div><span style=\"font-size: large;\"><b> </b></span></div>\r\n<div><span style=\"font-size: large;\"><b>操作实例</b></span></div>\r\n<div><b> 1.设置转发规则 </b></div>\r\n<div> 选择调度算法——可供选择的有“加权轮询”和“加权最小连接数模式”。</div>\r\n<div><span style=\"color: #808080;\"><i> 这里的权值是针对每一台服务器配置，SLB通过权值获取每台服务器被选中的概率。  </i></span></div>\r\n<div>“轮询模式”会将外部和内部的访问请求依序分发给后端ECS进行处理，而“最小连接数模式”会将外部和内部的访问请求分发给当前连接数最小的一台后端ECS进行处理。</div>\r\n<div><b> </b></div>\r\n<div><b>2.设置会话保持规则</b></div>\r\n<div> 阿里云负载均衡的会话保持区分四层网络策略和七层网络协议，</div>\r\n<div> 1)  TCP/UDP 保持策略为基于IP，同一IP地址的请求转发到同一台后端云服务器处理</div>\r\n<div> 2) HTTP/HTTPS 保持策略为基于cookie，可以分为植入cookie 和 重写 cookie cookie植入，表示直接由负载均衡系统来分配和管理</div>\r\n<div>cookie植入，只需要在进行配置时需要指定会话保持的超时时间就可以实现。 不过只有后端 RS 返回的 HTTP 代码在以下代码中时, SLB 将植入会话保持所需头部：200、201、204、206、301、302、303、304、307。如果后端 RS 返回的 HTTP 状态代码为 4xx , SLB 不支持植入 Set-Cookie 头部, 可能会导致会话保持失败。</div>\r\n<div>cookie重写，表示负载均衡系统会根据用户自定义cookie名称来分配和管理对客户端进行的cookie植入操作，便于用户识别和区分自定义的cookie名称，从而有选择的针对后端应用服务器上的不同应用设定会话保持规则，用户在进行配置时需要指定相应的cookie名称。</div>\r\n<div>这种配置需要在nginx对需要会话保持的服务器添加add_header配置项</div>\r\n<pre> server {\r\n listen 8080;</pre>\r\n<pre>     server_name wqwq.example.com;</pre>\r\n<pre>     location / {</pre>\r\n<pre>              add_header Set-Cookie name=xxxx;</pre>\r\n<pre>              root html;</pre>\r\n<pre>              index index.html index.htm;</pre>\r\n<pre>          }</pre>\r\n<div><b> </b></div>\r\n<div><b>3.设置健康检查规则 </b></div>\r\n<div>用户开启健康检查功能后，当后端某个ECS健康检查出现问题时会将请求转发到其他健康检查正常的ECS上，而当该ECS恢复正常运行时，负载均衡会将其自动恢复到对外或对内的服务中。</div>\r\n<div></div>\r\n<div>关于TCP/HTTP/HTTPS健康检查的参数配置，提供如下参考建议：</div>\r\n<pre><i><span style=\"color: #808080;\"> 响应超时时间：5秒 \r\n</span></i><i><span style=\"color: #808080;\">健康检查间隔：2秒\r\n</span></i><i><span style=\"color: #808080;\">不健康阈值：3 \r\n</span></i><i><span style=\"color: #808080;\">健康阈值：3 </span></i></pre>\r\n<div><span style=\"color: #808080;\"><i> </i>在此配置下有利于用户服务及应用状态的尽快收敛： </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查失败响应时间（网络有问题）：(2+5)×3=21秒 如果用户有更高要求，可以适当地降低响应超时时间值，但必须先保证自己服务在正常状态下的处理时间小于这个值。 </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查成功响应时间：2×3=6秒 </span></div>\r\n<div><b> </b></div>\r\n<div><b>4.后端ECS权重 </b></div>\r\n<div> 指定后端服务器池内各ECS的转发权重，权重越高的ECS将被分配到更多的访问请求。</div>\r\n<div></div>\r\n<div><b>5. TCP与HTTP抗DDoS攻击 </b></div>\r\n<div></div>\r\n<div><b> </b></div>\r\n<div><b> 6.保证 ECS 服务器可以获取到用户的真实IP </b></div>\r\n<div></div>\r\n<div>Nginx作为负载均衡获取真实ip是使用http_realip_module，默认一键安装包安装的Nginx是没有安装这个模块的，需要重新重新编译Nginx并加装：</div>\r\n<div> 重新编译Nginx,增加 --with-http_realip_module</div>\r\n<pre> wget http://soft.phpwind.me/top/nginx-1.0.12.tar.gz \r\n tar zxvf nginx-1.0.12.tar.gz \r\n cd nginx-1.0.12 \r\n./configure --user=www --group=www --prefix=/alidata/server/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module \r\n make\r\nmake install \r\nkill -USR2 `cat /alidata/server/nginx/logs/nginx.pid` \r\n kill -QUIT `cat /alidata/server/nginx/logs/ nginx.pid.oldbin`</pre>\r\n<div> 修改nginx.conf，在 /alidata/server/nginx/conf/nginx.conf</div>\r\n<pre> fastcgi busy_buffers_size 128k;\r\n fastcgi temp_file_write_size 128k;</pre>\r\n<div> 下面增加</div>\r\n<pre>set_real_ip_from ip地址;<span style=\"color: #339966;\">//<em>这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</em></span>\r\nset_real_ip_from ip地址;<span style=\"color: #339966;\">//这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</span>\r\nreal_ip_header X-Forwarded-For;</pre>\r\n<div></div>\r\n<div> 重启Nnginx</div>\r\n<pre> /alidata/server/nginx/sbin/nginx -s reload</pre>','负载均衡配置','','inherit','open','open','','160-revision-v1','','','2016-09-07 07:52:51','2016-09-07 07:52:51','',160,'http://blog.raymond.com/?p=161',0,'revision','',0),(162,1,'2016-09-07 07:54:59','2016-09-07 07:54:59','<h4><b><span style=\"font-size: large;\">负载均衡（Server Load Balancer）是对多台云服务器进行流量分发的负载均衡服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。  </span></b></h4>\r\n<div></div>\r\n<div><b> 限制：</b></div>\r\n<div>阿里云的负载均衡不支持跨地域（Region）部署，也就是说一个负载均衡实例后端的ECS必须是属于同一地域（Region）的ECS实例。</div>\r\n<div><span style=\"font-size: large;\"><b> </b></span></div>\r\n<div><span style=\"font-size: large;\"><b>操作实例</b></span></div>\r\n<div><b> 1.设置转发规则 </b></div>\r\n<div> 选择调度算法——可供选择的有“加权轮询”和“加权最小连接数模式”。</div>\r\n<div><span style=\"color: #808080;\"><i> 这里的权值是针对每一台服务器配置，SLB通过权值获取每台服务器被选中的概率。  </i></span></div>\r\n<div>“轮询模式”会将外部和内部的访问请求依序分发给后端ECS进行处理，而“最小连接数模式”会将外部和内部的访问请求分发给当前连接数最小的一台后端ECS进行处理。</div>\r\n<div><b> </b></div>\r\n<div><b>2.设置会话保持规则</b></div>\r\n<div> 阿里云负载均衡的会话保持区分四层网络策略和七层网络协议，</div>\r\n<div> 1)  TCP/UDP 保持策略为基于IP，同一IP地址的请求转发到同一台后端云服务器处理</div>\r\n<div> 2) HTTP/HTTPS 保持策略为基于cookie，可以分为植入cookie 和 重写 cookie cookie植入，表示直接由负载均衡系统来分配和管理</div>\r\n<div>cookie植入，只需要在进行配置时需要指定会话保持的超时时间就可以实现。 不过只有后端 RS 返回的 HTTP 代码在以下代码中时, SLB 将植入会话保持所需头部：200、201、204、206、301、302、303、304、307。如果后端 RS 返回的 HTTP 状态代码为 4xx , SLB 不支持植入 Set-Cookie 头部, 可能会导致会话保持失败。</div>\r\n<div>cookie重写，表示负载均衡系统会根据用户自定义cookie名称来分配和管理对客户端进行的cookie植入操作，便于用户识别和区分自定义的cookie名称，从而有选择的针对后端应用服务器上的不同应用设定会话保持规则，用户在进行配置时需要指定相应的cookie名称。</div>\r\n<div>这种配置需要在nginx对需要会话保持的服务器添加add_header配置项</div>\r\n<pre> server {\r\n listen 8080;\r\n     server_name wqwq.example.com;\r\n     location / {\r\n              add_header Set-Cookie name=xxxx;\r\n              root html;\r\n              index index.html index.htm;\r\n          }</pre>\r\n<div><b> </b></div>\r\n<div><b>3.设置健康检查规则 </b></div>\r\n<div>用户开启健康检查功能后，当后端某个ECS健康检查出现问题时会将请求转发到其他健康检查正常的ECS上，而当该ECS恢复正常运行时，负载均衡会将其自动恢复到对外或对内的服务中。</div>\r\n<div></div>\r\n<div>关于TCP/HTTP/HTTPS健康检查的参数配置，提供如下参考建议：</div>\r\n<pre><i><span style=\"color: #808080;\"> 响应超时时间：5秒 \r\n</span></i><i><span style=\"color: #808080;\">健康检查间隔：2秒\r\n</span></i><i><span style=\"color: #808080;\">不健康阈值：3 \r\n</span></i><i><span style=\"color: #808080;\">健康阈值：3 </span></i></pre>\r\n<div><span style=\"color: #808080;\"><i> </i>在此配置下有利于用户服务及应用状态的尽快收敛： </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查失败响应时间（网络有问题）：(2+5)×3=21秒 如果用户有更高要求，可以适当地降低响应超时时间值，但必须先保证自己服务在正常状态下的处理时间小于这个值。 </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查成功响应时间：2×3=6秒 </span></div>\r\n<div><b> </b></div>\r\n<div><b>4.后端ECS权重 </b></div>\r\n<div> 指定后端服务器池内各ECS的转发权重，权重越高的ECS将被分配到更多的访问请求。</div>\r\n<div></div>\r\n<div><b>5. TCP与HTTP抗DDoS攻击 </b></div>\r\n<div></div>\r\n<div><b> </b></div>\r\n<div><b> 6.保证 ECS 服务器可以获取到用户的真实IP </b></div>\r\n<div></div>\r\n<div>Nginx作为负载均衡获取真实ip是使用http_realip_module，默认一键安装包安装的Nginx是没有安装这个模块的，需要重新重新编译Nginx并加装：</div>\r\n<div> 重新编译Nginx,增加 --with-http_realip_module</div>\r\n<pre> wget http://soft.phpwind.me/top/nginx-1.0.12.tar.gz \r\n tar zxvf nginx-1.0.12.tar.gz \r\n cd nginx-1.0.12 \r\n./configure --user=www --group=www --prefix=/alidata/server/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module \r\n make\r\nmake install \r\nkill -USR2 `cat /alidata/server/nginx/logs/nginx.pid` \r\n kill -QUIT `cat /alidata/server/nginx/logs/ nginx.pid.oldbin`</pre>\r\n<div> 修改nginx.conf，在 /alidata/server/nginx/conf/nginx.conf</div>\r\n<pre> fastcgi busy_buffers_size 128k;\r\n fastcgi temp_file_write_size 128k;</pre>\r\n<div> 下面增加</div>\r\n<pre>set_real_ip_from ip地址;<span style=\"color: #339966;\">//<em>这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</em></span>\r\nset_real_ip_from ip地址;<span style=\"color: #339966;\">//这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</span>\r\nreal_ip_header X-Forwarded-For;</pre>\r\n<div></div>\r\n<div> 重启Nnginx</div>\r\n<pre> /alidata/server/nginx/sbin/nginx -s reload</pre>','负载均衡配置','','inherit','open','open','','160-revision-v1','','','2016-09-07 07:54:59','2016-09-07 07:54:59','',160,'http://blog.raymond.com/?p=162',0,'revision','',0),(164,1,'2016-09-07 08:20:16','2016-09-07 08:20:16','<h4><b><span style=\"font-size: large;\">负载均衡（Server Load Balancer）是对多台云服务器进行流量分发的负载均衡服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。  </span></b></h4>\r\n<div></div>\r\n<div><b> 限制：</b></div>\r\n<div>阿里云的负载均衡不支持跨地域（Region）部署，也就是说一个负载均衡实例后端的ECS必须是属于同一地域（Region）的ECS实例。</div>\r\n<div><span style=\"font-size: large;\"><b> </b></span></div>\r\n<div><span style=\"font-size: large;\"><b>操作实例</b></span></div>\r\n<div><b> 1.设置转发规则 </b></div>\r\n<div> 选择调度算法——可供选择的有“加权轮询”和“加权最小连接数模式”。</div>\r\n<div><span style=\"color: #808080;\"><i> 这里的权值是针对每一台服务器配置，SLB通过权值获取每台服务器被选中的概率。  </i></span></div>\r\n<div>“轮询模式”会将外部和内部的访问请求依序分发给后端ECS进行处理，而“最小连接数模式”会将外部和内部的访问请求分发给当前连接数最小的一台后端ECS进行处理。</div>\r\n<div><b> </b></div>\r\n<div><b>2.设置会话保持规则</b></div>\r\n<div> 阿里云负载均衡的会话保持区分四层网络策略和七层网络协议，</div>\r\n<div> 1)  TCP/UDP 保持策略为基于IP，同一IP地址的请求转发到同一台后端云服务器处理</div>\r\n<div> 2) HTTP/HTTPS 保持策略为基于cookie，可以分为植入cookie 和 重写 cookie cookie植入，表示直接由负载均衡系统来分配和管理</div>\r\n<div>cookie植入，只需要在进行配置时需要指定会话保持的超时时间就可以实现。 不过只有后端 RS 返回的 HTTP 代码在以下代码中时, SLB 将植入会话保持所需头部：200、201、204、206、301、302、303、304、307。如果后端 RS 返回的 HTTP 状态代码为 4xx , SLB 不支持植入 Set-Cookie 头部, 可能会导致会话保持失败。</div>\r\n<div>cookie重写，表示负载均衡系统会根据用户自定义cookie名称来分配和管理对客户端进行的cookie植入操作，便于用户识别和区分自定义的cookie名称，从而有选择的针对后端应用服务器上的不同应用设定会话保持规则，用户在进行配置时需要指定相应的cookie名称。</div>\r\n<div>这种配置需要在nginx对需要会话保持的服务器添加add_header配置项</div>\r\n<pre> server {\r\n listen 8080;\r\n     server_name wqwq.example.com;\r\n     location / {\r\n              add_header Set-Cookie name=xxxx;\r\n              root html;\r\n              index index.html index.htm;\r\n          }</pre>\r\n<div><b> </b></div>\r\n<div><b>3.设置健康检查规则 </b></div>\r\n<div>用户开启健康检查功能后，当后端某个ECS健康检查出现问题时会将请求转发到其他健康检查正常的ECS上，而当该ECS恢复正常运行时，负载均衡会将其自动恢复到对外或对内的服务中。</div>\r\n<div></div>\r\n<div>关于TCP/HTTP/HTTPS健康检查的参数配置，提供如下参考建议：</div>\r\n<pre><i><span style=\"color: #808080;\"> 响应超时时间：5秒 \r\n</span></i><i><span style=\"color: #808080;\">健康检查间隔：2秒\r\n</span></i><i><span style=\"color: #808080;\">不健康阈值：3 \r\n</span></i><i><span style=\"color: #808080;\">健康阈值：3 </span></i></pre>\r\n<div><span style=\"color: #808080;\"><i> </i>在此配置下有利于用户服务及应用状态的尽快收敛： </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查失败响应时间（网络有问题）：(2+5)×3=21秒 如果用户有更高要求，可以适当地降低响应超时时间值，但必须先保证自己服务在正常状态下的处理时间小于这个值。 </span></div>\r\n<div><span style=\"color: #808080;\"> ECS健康检查成功响应时间：2×3=6秒 </span></div>\r\n<div><b> </b></div>\r\n<div><b>4.后端ECS权重 </b></div>\r\n<div> 指定后端服务器池内各ECS的转发权重，权重越高的ECS将被分配到更多的访问请求。</div>\r\n<div></div>\r\n<div><b>5. TCP与HTTP抗DDoS攻击 </b></div>\r\n<div></div>\r\n<div><b>7.带宽峰值</b></div>\r\n<div>设置某个服务器可承载的带宽峰值，单位 Mbps</div>\r\n<div></div>\r\n<div><b> 6.保证 ECS 服务器可以获取到用户的真实IP </b></div>\r\n<div></div>\r\n<div>Nginx作为负载均衡获取真实ip是使用http_realip_module，默认一键安装包安装的Nginx是没有安装这个模块的，需要重新重新编译Nginx并加装：</div>\r\n<div> 重新编译Nginx,增加 --with-http_realip_module</div>\r\n<pre> wget http://soft.phpwind.me/top/nginx-1.0.12.tar.gz \r\n tar zxvf nginx-1.0.12.tar.gz \r\n cd nginx-1.0.12 \r\n./configure --user=www --group=www --prefix=/alidata/server/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module \r\n make\r\nmake install \r\nkill -USR2 `cat /alidata/server/nginx/logs/nginx.pid` \r\n kill -QUIT `cat /alidata/server/nginx/logs/ nginx.pid.oldbin`</pre>\r\n<div> 修改nginx.conf，在 /alidata/server/nginx/conf/nginx.conf</div>\r\n<pre> fastcgi busy_buffers_size 128k;\r\n fastcgi temp_file_write_size 128k;</pre>\r\n<div> 下面增加</div>\r\n<pre>set_real_ip_from ip地址;<span style=\"color: #339966;\">//<em>这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</em></span>\r\nset_real_ip_from ip地址;<span style=\"color: #339966;\">//这个ip地址首先不是负载均衡提供的公网ip，具体ip多少可以看一下之前nginx日志，如果有多个都要写上。</span>\r\nreal_ip_header X-Forwarded-For;</pre>\r\n<div></div>\r\n<div> 重启Nnginx</div>\r\n<pre> /alidata/server/nginx/sbin/nginx -s reload</pre>','负载均衡配置','','inherit','open','open','','160-revision-v1','','','2016-09-07 08:20:16','2016-09-07 08:20:16','',160,'http://blog.raymond.com/?p=164',0,'revision','',0),(165,1,'2016-09-07 12:04:54','2016-09-07 12:04:54','<pre>user www-data;<span style=\"color: #339966;\">#运行用户</span>\r\npid /var/run/ nginx.pid;<span style=\"color: #339966;\">#PID文件</span>\r\nworker_processes auto;<span style=\"color: #339966;\">#启动进程,通常设置成和cpu的数量相等</span>\r\nworker_rlimit_nofile 100000;<span style=\"color: #339966;\">#每个nginx进程打开文件描述符最大数目 配置要和系统的单进程打开文件数一致</span></pre>\r\n<pre>error_log /var/log/nginx/error.log;<span style=\"color: #339966;\">#全局错误日志</span></pre>\r\n<pre><span style=\"color: #339966;\">#events模块中包含nginx中所有处理连接的设置。</span>\r\nevents {\r\n worker_connections 65535;<span style=\"color: #339966;\">#单个后台worker process进程的最大并发链接数</span>\r\n multi_accept on;<span style=\"color: #339966;\">#设置是否允许Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接</span>\r\n use epoll;<span style=\"color: #339966;\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span>\r\n}</pre>\r\n<pre><span style=\"color: #339966;\">#设定http服务器，可以利用它的反向代理功能提供负载均衡支持</span>\r\nhttp {\r\n include /etc/nginx/mime.types;<span style=\"color: #339966;\">#设定mime类型,类型由mime.type文件定义</span>\r\n server_tokens off;\r\n sendfile on;<span style=\"color: #339966;\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>\r\n tcp_nopush on;<span style=\"color: #339966;\">#告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送</span>\r\n tcp_nodelay on;<span style=\"color: #339966;\">#告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。</span>\r\n #access_log off; <span style=\"color: #339966;\">#关闭accesslog</span>\r\n log_format main \'$remote_addr - $remote_user [$time_local] \'#<span style=\"color: #339966;\">客户端IP地址 - 记录客户端用户名称[通用日志格式下的本地时间]</span>\r\n \'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'<span style=\"color: #339966;\">#记录客户端IP地址 记录客户端IP地址</span>\r\n \'\"$http_user_agent\" \'<span style=\"color: #339966;\">#UA</span>\r\n \'$upstream_addr $upstream_response_time $request_time \'<span style=\"color: #339966;\">#本地处理地址:端口 处理时间 处理返回时间</span>\r\n \'$request \'<span style=\"color: #339966;\">#请求的URL和HTTP协议</span>\r\n \'\"$status\" $body_bytes_sent \"$http_referer\" \'; <span style=\"color: #339966;\">#请求状态 发送给客户端的字节数，不包括响应头的大小 referer\r\n</span>access_log /data/logs/nginx/access/access.log main;<span style=\"color: #339966;\">#access log位置</span>\r\n \r\n error_log /var/log/nginx/error.log crit;<span style=\"color: #339966;\">#error格式：[debug|info|notice|warn|error|crit]，从左到右越来越简单</span>\r\n #error_log /dev/null crit; <span style=\"color: #339966;\">#关闭errorlog ，error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中</span> \r\n \r\n keepalive_timeout 10;<span style=\"color: #339966;\">#连接超时时间</span>\r\n client_header_timeout 10;<span style=\"color: #339966;\">#设置请求头超时时间</span>\r\n client_body_timeout 10;<span style=\"color: #339966;\">#请求体的超时时间</span>\r\n reset_timedout_connection on;<span style=\"color: #339966;\">#告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>\r\n send_timeout 10;<span style=\"color: #339966;\">#指定客户端的响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接</span>\r\n \r\n limit_conn_zone $binary_remote_addr zone = addr:5m;<span style=\"color: #339966;\">#保存各种key（比如当前连接数）的共享内存的参数，此处设置5M</span>\r\n limit_conn addr 100;<span style=\"color: #339966;\">#为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接</span>\r\n \r\n default_type text/html;<span style=\"color: #339966;\">#设置文件使用的默认的MIME-type</span>\r\n charset UTF-8;<span style=\"color: #339966;\">#设置头文件中的默认的字符集</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启gzip压缩</span>\r\n gzip on;<span style=\"color: #339966;\">#开启gzip压缩</span>\r\n gzip_disable \"msie6\";<span style=\"color: #339966;\">#为指定的客户端禁用gzip功能</span>\r\n gzip_proxied any;<span style=\"color: #339966;\">#压缩所有的响应流</span>\r\n gzip_min_length 1000;<span style=\"color: #339966;\">#对数据启用压缩的最少字节数</span>\r\n gzip_comp_level 6;<span style=\"color: #339966;\">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的</span>\r\n gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;<span style=\"color: #339966;\">#设置需要压缩的数据格式</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启文件缓存</span>\r\n open_file_cache max = 100000 inactive = 20s;<span style=\"color: #339966;\">#缓存是否启用,如果启用,最大缓存100000个文件，有效时间为20s</span>\r\n open_file_cache_valid 30s;<span style=\"color: #339966;\">#何时需要检查open_file_cache中缓存项目的有效信息</span>\r\n open_file_cache_min_uses 2;<span style=\"color: #339966;\">#指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数</span>\r\n open_file_cache_errors on;<span style=\"text-decoration: underline;\">#是否在搜索一个文件是记录cache错误.</span>\r\n \r\n<span style=\"color: #339966;\"> #设定请求缓冲</span>\r\n client_header_buffer_size 1k;<span style=\"color: #339966;\">#默认</span>\r\n large_client_header_buffers 4 4k;<span style=\"color: #339966;\">#当请求头部大于默认值时，会读取该值</span>\r\n \r\n include / etc / nginx / conf.d /*.conf;\r\n include /etc/nginx/sites-enabled/*;\r\n \r\n<span style=\"color: #339966;\"> #设定负载均衡的服务器列表</span>\r\n upstream mysvr {\r\n<span style=\"color: #339966;\"> #weigth参数表示权值，权值越高被分配到的几率越大</span>\r\n server 192.168.8.1:3128 weight=5;\r\n server 192.168.8.2:80 weight=1;\r\n server 192.168.8.3:80 weight=6;\r\n }\r\n}</pre>\r\n<pre>server { \r\n listen 80;<span style=\"color: #339966;\">#侦听80端口</span> \r\n server_name www.xx.com;<span style=\"color: #339966;\">#定义使用www.xx.com访问</span>\r\naccess_log logs/www.xx.com.access.log main;<span style=\"color: #339966;\">#设定本虚拟主机的访问日志，否则将使用默认access位置\r\n\r\n#默认请求</span>\r\n location / {\r\n root /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称\r\n</span>fastcgi_pass www.xx.com;\r\n fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; \r\n include /etc/nginx/fastcgi_params;\r\n }\r\n\r\n<span style=\"color: #339966;\">#定义错误提示页面</span>\r\n error_page 500 502 503 504 /50x.html; \r\n location = /50x.html {\r\n root /root;\r\n }\r\n\r\n<span style=\"color: #339966;\">#静态文件，nginx自己处理</span>\r\n location ~ ^/(images|javascript|js|css|flash|media|static)/ {\r\n root /var/www/virtual/htdocs;\r\n <span style=\"color: #339966;\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>\r\n expires 30d;\r\n }\r\n \r\n<span style=\"color: #339966;\"> #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span>\r\n location ~ \\.php$ {\r\n root /root;\r\n fastcgi_pass 127.0.0.1:9000;\r\n fastcgi_index index.php;\r\n fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;\r\n include fastcgi_params;\r\n }\r\n \r\n <span style=\"color: #339966;\">#设定查看Nginx状态的地址</span>\r\n location /NginxStatus {\r\n stub_status on;\r\n access_log on;\r\n auth_basic \"NginxStatus\";\r\n auth_basic_user_file conf/htpasswd;\r\n }\r\n \r\n <span style=\"color: #339966;\">#禁止访问 .htxxx 文件</span>\r\n location ~ /\\.ht {\r\n deny all;\r\n }\r\n \r\n <span style=\"color: #339966;\">#对aspx后缀的进行负载均衡请求</span>\r\n location ~ .*\\.aspx$ {\r\n\r\nroot /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称</span>\r\n proxy_pass http://mysvr ;<span style=\"color: #339966;\">#请求转向mysvr 定义的服务器列表\r\n\r\n#以下是一些反向代理的配置可删除.</span>\r\n proxy_redirect off;\r\n<span style=\"color: #339966;\"> #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\r\n proxy_set_header Host $host;\r\n proxy_set_header X-Real-IP $remote_addr;\r\n proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n client_max_body_size 10m; <span style=\"color: #339966;\">#允许客户端请求的最大单文件字节数</span>\r\n client_body_buffer_size 128k;<span style=\"color: #339966;\"> #缓冲区代理缓冲用户端请求的最大字节数，</span>\r\n proxy_connect_timeout 90; <span style=\"color: #339966;\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\r\n proxy_send_timeout 90; <span style=\"color: #339966;\">#后端服务器数据回传时间(代理发送超时)</span>\r\n proxy_read_timeout 90; <span style=\"color: #339966;\">#连接成功后，后端服务器响应时间(代理接收超时)</span>\r\n proxy_buffer_size 4k; <span style=\"color: #339966;\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>\r\n proxy_buffers 4 32k; <span style=\"color: #339966;\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>\r\n proxy_busy_buffers_size 64k; <span style=\"color: #339966;\">#高负荷下缓冲大小（proxy_buffers*2）</span>\r\n proxy_temp_file_write_size 64k; <span style=\"color: #339966;\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传\r\n</span>}\r\n }\r\n}</pre>\r\naccesslog默认为只放在一个文件里，可以用脚本每天0点执行，分割出每日的日志\r\n<pre>#!/bin/bash\r\n\r\n logs_path=\"/var/log/nginx/\"\r\n logs_names=(access)\r\n\r\nnum=${#logs_names[@]}\r\n\r\nfor((i=0;i&lt;num;i++));do\r\n\r\nmv ${logs_path}${logs_names[i]}.log ${logs_path}${logs_names[i]}/$(date -d \"yesterday\" +\"%Y%m%d\")_access.log\r\n\r\ntouch ${logs_path}${logs_names[i]}.log\r\n\r\nold=${logs_path}${logs_names[i]}/$(date -d \"8 days ago\" +\"%Y%m%d\")_access.log\r\nif [ -f ${old} ]; then\r\n rm ${old};\r\n fi\r\n\r\ndone</pre>','nginx配置文件详解','','publish','open','open','','nginx%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e8%af%a6%e8%a7%a3','','','2016-09-07 12:44:43','2016-09-07 12:44:43','',0,'http://blog.raymond.com/?p=165',0,'post','',0),(166,1,'2016-09-07 12:04:54','2016-09-07 12:04:54','<pre>user www-data;<span style=\"color: #339966;\">#运行用户</span>\r\npid /var/run/ nginx.pid;<span style=\"color: #339966;\">#PID文件</span>\r\nworker_processes auto;<span style=\"color: #339966;\">#启动进程,通常设置成和cpu的数量相等</span>\r\nworker_rlimit_nofile 100000;<span style=\"color: #339966;\">#每个nginx进程打开文件描述符最大数目 配置要和系统的单进程打开文件数一致</span></pre>\r\n<pre>error_log /var/log/nginx/error.log;<span style=\"color: #339966;\">#全局错误日志</span></pre>\r\n<pre><span style=\"color: #339966;\">#events模块中包含nginx中所有处理连接的设置。</span>\r\nevents {\r\n worker_connections 65535;<span style=\"color: #339966;\">#单个后台worker process进程的最大并发链接数</span>\r\n multi_accept on;<span style=\"color: #339966;\">#设置是否允许Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接</span>\r\n use epoll;<span style=\"color: #339966;\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span>\r\n}</pre>\r\n<pre><span style=\"color: #339966;\">#设定http服务器，可以利用它的反向代理功能提供负载均衡支持</span>\r\nhttp {\r\n include /etc/nginx/mime.types;<span style=\"color: #339966;\">#设定mime类型,类型由mime.type文件定义</span>\r\n server_tokens off;\r\n sendfile on;<span style=\"color: #339966;\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>\r\n tcp_nopush on;\r\n tcp_nodelay on;\r\n #access_log off; <span style=\"color: #339966;\">#关闭accesslog</span>\r\n log_format main \'$remote_addr - $remote_user [$time_local] \'#<span style=\"color: #339966;\">客户端IP地址 - 记录客户端用户名称[通用日志格式下的本地时间]</span>\r\n \'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'<span style=\"color: #339966;\">#记录客户端IP地址 记录客户端IP地址</span>\r\n \'\"$http_user_agent\" \'<span style=\"color: #339966;\">#UA</span>\r\n \'$upstream_addr $upstream_response_time $request_time \'<span style=\"color: #339966;\">#本地处理地址:端口 处理时间 处理返回时间</span>\r\n \'$request \'<span style=\"color: #339966;\">#请求的URL和HTTP协议</span>\r\n \'\"$status\" $body_bytes_sent \"$http_referer\" \'; <span style=\"color: #339966;\">#请求状态 发送给客户端的字节数，不包括响应头的大小 referer\r\n</span>access_log /data/logs/nginx/access/access.log main;<span style=\"color: #339966;\">#access log位置</span>\r\n \r\n error_log /var/log/nginx/error.log crit;<span style=\"color: #339966;\">#error格式：[debug|info|notice|warn|error|crit]，从左到右越来越简单</span>\r\n #error_log /dev/null crit; <span style=\"color: #339966;\">#关闭errorlog ，error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中</span> \r\n \r\n keepalive_timeout 10;<span style=\"color: #339966;\">#连接超时时间</span>\r\n client_header_timeout 10;<span style=\"color: #339966;\">#设置请求头超时时间</span>\r\n client_body_timeout 10;<span style=\"color: #339966;\">#请求体的超时时间</span>\r\n reset_timedout_connection on;<span style=\"color: #339966;\">#告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>\r\n send_timeout 10;<span style=\"color: #339966;\">#指定客户端的响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接</span>\r\n \r\n limit_conn_zone $binary_remote_addr zone = addr:5m;<span style=\"color: #339966;\">#保存各种key（比如当前连接数）的共享内存的参数，此处设置5M</span>\r\n limit_conn addr 100;<span style=\"color: #339966;\">#为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接</span>\r\n \r\n default_type text/html;<span style=\"color: #339966;\">#设置文件使用的默认的MIME-type</span>\r\n charset UTF-8;<span style=\"color: #339966;\">#设置头文件中的默认的字符集</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启gzip压缩</span>\r\n gzip on;<span style=\"color: #339966;\">#开启gzip压缩</span>\r\n gzip_disable \"msie6\";<span style=\"color: #339966;\">#为指定的客户端禁用gzip功能</span>\r\n gzip_proxied any;<span style=\"color: #339966;\">#压缩所有的响应流</span>\r\n gzip_min_length 1000;<span style=\"color: #339966;\">#对数据启用压缩的最少字节数</span>\r\n gzip_comp_level 6;<span style=\"color: #339966;\">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的</span>\r\n gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;<span style=\"color: #339966;\">#设置需要压缩的数据格式</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启文件缓存</span>\r\n open_file_cache max = 100000 inactive = 20s;<span style=\"color: #339966;\">#缓存是否启用,如果启用,最大缓存100000个文件，有效时间为20s</span>\r\n open_file_cache_valid 30s;<span style=\"color: #339966;\">#何时需要检查open_file_cache中缓存项目的有效信息</span>\r\n open_file_cache_min_uses 2;<span style=\"color: #339966;\">#指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数</span>\r\n open_file_cache_errors on;<span style=\"text-decoration: underline;\">#是否在搜索一个文件是记录cache错误.</span>\r\n \r\n<span style=\"color: #339966;\"> #设定请求缓冲</span>\r\n client_header_buffer_size 1k;<span style=\"color: #339966;\">#默认</span>\r\n large_client_header_buffers 4 4k;<span style=\"color: #339966;\">#当请求头部大于默认值时，会读取该值</span>\r\n \r\n include / etc / nginx / conf.d /*.conf;\r\n include /etc/nginx/sites-enabled/*;\r\n \r\n<span style=\"color: #339966;\"> #设定负载均衡的服务器列表</span>\r\n upstream mysvr {\r\n<span style=\"color: #339966;\"> #weigth参数表示权值，权值越高被分配到的几率越大</span>\r\n server 192.168.8.1:3128 weight=5;\r\n server 192.168.8.2:80 weight=1;\r\n server 192.168.8.3:80 weight=6;\r\n }\r\n}</pre>\r\n<pre>server { \r\n listen 80;<span style=\"color: #339966;\">#侦听80端口</span> \r\n server_name www.xx.com;<span style=\"color: #339966;\">#定义使用www.xx.com访问</span>\r\naccess_log logs/www.xx.com.access.log main;<span style=\"color: #339966;\">#设定本虚拟主机的访问日志，否则将使用默认access位置\r\n\r\n#默认请求</span>\r\n location / {\r\n root /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称\r\n</span>fastcgi_pass www.xx.com;\r\n fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; \r\n include /etc/nginx/fastcgi_params;\r\n }\r\n\r\n<span style=\"color: #339966;\">#定义错误提示页面</span>\r\n error_page 500 502 503 504 /50x.html; \r\n location = /50x.html {\r\n root /root;\r\n }\r\n\r\n<span style=\"color: #339966;\">#静态文件，nginx自己处理</span>\r\n location ~ ^/(images|javascript|js|css|flash|media|static)/ {\r\n root /var/www/virtual/htdocs;\r\n <span style=\"color: #339966;\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>\r\n expires 30d;\r\n }\r\n \r\n<span style=\"color: #339966;\"> #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span>\r\n location ~ \\.php$ {\r\n root /root;\r\n fastcgi_pass 127.0.0.1:9000;\r\n fastcgi_index index.php;\r\n fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;\r\n include fastcgi_params;\r\n }\r\n \r\n <span style=\"color: #339966;\">#设定查看Nginx状态的地址</span>\r\n location /NginxStatus {\r\n stub_status on;\r\n access_log on;\r\n auth_basic \"NginxStatus\";\r\n auth_basic_user_file conf/htpasswd;\r\n }\r\n \r\n <span style=\"color: #339966;\">#禁止访问 .htxxx 文件</span>\r\n location ~ /\\.ht {\r\n deny all;\r\n }\r\n \r\n <span style=\"color: #339966;\">#对aspx后缀的进行负载均衡请求</span>\r\n location ~ .*\\.aspx$ {\r\n\r\nroot /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称</span>\r\n proxy_pass http://mysvr ;<span style=\"color: #339966;\">#请求转向mysvr 定义的服务器列表\r\n\r\n#以下是一些反向代理的配置可删除.</span>\r\n proxy_redirect off;\r\n<span style=\"color: #339966;\"> #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\r\n proxy_set_header Host $host;\r\n proxy_set_header X-Real-IP $remote_addr;\r\n proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n client_max_body_size 10m; <span style=\"color: #339966;\">#允许客户端请求的最大单文件字节数</span>\r\n client_body_buffer_size 128k;<span style=\"color: #339966;\"> #缓冲区代理缓冲用户端请求的最大字节数，</span>\r\n proxy_connect_timeout 90; <span style=\"color: #339966;\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\r\n proxy_send_timeout 90; <span style=\"color: #339966;\">#后端服务器数据回传时间(代理发送超时)</span>\r\n proxy_read_timeout 90; <span style=\"color: #339966;\">#连接成功后，后端服务器响应时间(代理接收超时)</span>\r\n proxy_buffer_size 4k; <span style=\"color: #339966;\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>\r\n proxy_buffers 4 32k; <span style=\"color: #339966;\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>\r\n proxy_busy_buffers_size 64k; <span style=\"color: #339966;\">#高负荷下缓冲大小（proxy_buffers*2）</span>\r\n proxy_temp_file_write_size 64k; <span style=\"color: #339966;\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传\r\n</span>}\r\n }\r\n}</pre>','nginx配置文件详解','','inherit','open','open','','165-revision-v1','','','2016-09-07 12:04:54','2016-09-07 12:04:54','',165,'http://blog.raymond.com/?p=166',0,'revision','',0),(167,1,'2016-09-07 12:43:21','2016-09-07 12:43:21','<pre>user www-data;<span style=\"color: #339966;\">#运行用户</span>\npid /var/run/ nginx.pid;<span style=\"color: #339966;\">#PID文件</span>\nworker_processes auto;<span style=\"color: #339966;\">#启动进程,通常设置成和cpu的数量相等</span>\nworker_rlimit_nofile 100000;<span style=\"color: #339966;\">#每个nginx进程打开文件描述符最大数目 配置要和系统的单进程打开文件数一致</span></pre>\n<pre>error_log /var/log/nginx/error.log;<span style=\"color: #339966;\">#全局错误日志</span></pre>\n<pre><span style=\"color: #339966;\">#events模块中包含nginx中所有处理连接的设置。</span>\nevents {\n worker_connections 65535;<span style=\"color: #339966;\">#单个后台worker process进程的最大并发链接数</span>\n multi_accept on;<span style=\"color: #339966;\">#设置是否允许Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接</span>\n use epoll;<span style=\"color: #339966;\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span>\n}</pre>\n<pre><span style=\"color: #339966;\">#设定http服务器，可以利用它的反向代理功能提供负载均衡支持</span>\nhttp {\n include /etc/nginx/mime.types;<span style=\"color: #339966;\">#设定mime类型,类型由mime.type文件定义</span>\n server_tokens off;\n sendfile on;<span style=\"color: #339966;\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>\n tcp_nopush on;<span style=\"color: #339966;\">#告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送</span>\n tcp_nodelay on;<span style=\"color: #339966;\">#告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。</span>\n #access_log off; <span style=\"color: #339966;\">#关闭accesslog</span>\n log_format main \'$remote_addr - $remote_user [$time_local] \'#<span style=\"color: #339966;\">客户端IP地址 - 记录客户端用户名称[通用日志格式下的本地时间]</span>\n \'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'<span style=\"color: #339966;\">#记录客户端IP地址 记录客户端IP地址</span>\n \'\"$http_user_agent\" \'<span style=\"color: #339966;\">#UA</span>\n \'$upstream_addr $upstream_response_time $request_time \'<span style=\"color: #339966;\">#本地处理地址:端口 处理时间 处理返回时间</span>\n \'$request \'<span style=\"color: #339966;\">#请求的URL和HTTP协议</span>\n \'\"$status\" $body_bytes_sent \"$http_referer\" \'; <span style=\"color: #339966;\">#请求状态 发送给客户端的字节数，不包括响应头的大小 referer\n</span>access_log /data/logs/nginx/access/access.log main;<span style=\"color: #339966;\">#access log位置</span>\n \n error_log /var/log/nginx/error.log crit;<span style=\"color: #339966;\">#error格式：[debug|info|notice|warn|error|crit]，从左到右越来越简单</span>\n #error_log /dev/null crit; <span style=\"color: #339966;\">#关闭errorlog ，error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中</span> \n \n keepalive_timeout 10;<span style=\"color: #339966;\">#连接超时时间</span>\n client_header_timeout 10;<span style=\"color: #339966;\">#设置请求头超时时间</span>\n client_body_timeout 10;<span style=\"color: #339966;\">#请求体的超时时间</span>\n reset_timedout_connection on;<span style=\"color: #339966;\">#告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>\n send_timeout 10;<span style=\"color: #339966;\">#指定客户端的响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接</span>\n \n limit_conn_zone $binary_remote_addr zone = addr:5m;<span style=\"color: #339966;\">#保存各种key（比如当前连接数）的共享内存的参数，此处设置5M</span>\n limit_conn addr 100;<span style=\"color: #339966;\">#为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接</span>\n \n default_type text/html;<span style=\"color: #339966;\">#设置文件使用的默认的MIME-type</span>\n charset UTF-8;<span style=\"color: #339966;\">#设置头文件中的默认的字符集</span>\n \n<span style=\"color: #339966;\"> #设定开启gzip压缩</span>\n gzip on;<span style=\"color: #339966;\">#开启gzip压缩</span>\n gzip_disable \"msie6\";<span style=\"color: #339966;\">#为指定的客户端禁用gzip功能</span>\n gzip_proxied any;<span style=\"color: #339966;\">#压缩所有的响应流</span>\n gzip_min_length 1000;<span style=\"color: #339966;\">#对数据启用压缩的最少字节数</span>\n gzip_comp_level 6;<span style=\"color: #339966;\">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的</span>\n gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;<span style=\"color: #339966;\">#设置需要压缩的数据格式</span>\n \n<span style=\"color: #339966;\"> #设定开启文件缓存</span>\n open_file_cache max = 100000 inactive = 20s;<span style=\"color: #339966;\">#缓存是否启用,如果启用,最大缓存100000个文件，有效时间为20s</span>\n open_file_cache_valid 30s;<span style=\"color: #339966;\">#何时需要检查open_file_cache中缓存项目的有效信息</span>\n open_file_cache_min_uses 2;<span style=\"color: #339966;\">#指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数</span>\n open_file_cache_errors on;<span style=\"text-decoration: underline;\">#是否在搜索一个文件是记录cache错误.</span>\n \n<span style=\"color: #339966;\"> #设定请求缓冲</span>\n client_header_buffer_size 1k;<span style=\"color: #339966;\">#默认</span>\n large_client_header_buffers 4 4k;<span style=\"color: #339966;\">#当请求头部大于默认值时，会读取该值</span>\n \n include / etc / nginx / conf.d /*.conf;\n include /etc/nginx/sites-enabled/*;\n \n<span style=\"color: #339966;\"> #设定负载均衡的服务器列表</span>\n upstream mysvr {\n<span style=\"color: #339966;\"> #weigth参数表示权值，权值越高被分配到的几率越大</span>\n server 192.168.8.1:3128 weight=5;\n server 192.168.8.2:80 weight=1;\n server 192.168.8.3:80 weight=6;\n }\n}</pre>\n<pre>server { \n listen 80;<span style=\"color: #339966;\">#侦听80端口</span> \n server_name www.xx.com;<span style=\"color: #339966;\">#定义使用www.xx.com访问</span>\naccess_log logs/www.xx.com.access.log main;<span style=\"color: #339966;\">#设定本虚拟主机的访问日志，否则将使用默认access位置\n\n#默认请求</span>\n location / {\n root /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称\n</span>fastcgi_pass www.xx.com;\n fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; \n include /etc/nginx/fastcgi_params;\n }\n\n<span style=\"color: #339966;\">#定义错误提示页面</span>\n error_page 500 502 503 504 /50x.html; \n location = /50x.html {\n root /root;\n }\n\n<span style=\"color: #339966;\">#静态文件，nginx自己处理</span>\n location ~ ^/(images|javascript|js|css|flash|media|static)/ {\n root /var/www/virtual/htdocs;\n <span style=\"color: #339966;\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>\n expires 30d;\n }\n \n<span style=\"color: #339966;\"> #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span>\n location ~ \\.php$ {\n root /root;\n fastcgi_pass 127.0.0.1:9000;\n fastcgi_index index.php;\n fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;\n include fastcgi_params;\n }\n \n <span style=\"color: #339966;\">#设定查看Nginx状态的地址</span>\n location /NginxStatus {\n stub_status on;\n access_log on;\n auth_basic \"NginxStatus\";\n auth_basic_user_file conf/htpasswd;\n }\n \n <span style=\"color: #339966;\">#禁止访问 .htxxx 文件</span>\n location ~ /\\.ht {\n deny all;\n }\n \n <span style=\"color: #339966;\">#对aspx后缀的进行负载均衡请求</span>\n location ~ .*\\.aspx$ {\n\nroot /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称</span>\n proxy_pass http://mysvr ;<span style=\"color: #339966;\">#请求转向mysvr 定义的服务器列表\n\n#以下是一些反向代理的配置可删除.</span>\n proxy_redirect off;\n<span style=\"color: #339966;\"> #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n proxy_set_header Host $host;\n proxy_set_header X-Real-IP $remote_addr;\n proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n client_max_body_size 10m; <span style=\"color: #339966;\">#允许客户端请求的最大单文件字节数</span>\n client_body_buffer_size 128k;<span style=\"color: #339966;\"> #缓冲区代理缓冲用户端请求的最大字节数，</span>\n proxy_connect_timeout 90; <span style=\"color: #339966;\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\n proxy_send_timeout 90; <span style=\"color: #339966;\">#后端服务器数据回传时间(代理发送超时)</span>\n proxy_read_timeout 90; <span style=\"color: #339966;\">#连接成功后，后端服务器响应时间(代理接收超时)</span>\n proxy_buffer_size 4k; <span style=\"color: #339966;\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>\n proxy_buffers 4 32k; <span style=\"color: #339966;\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>\n proxy_busy_buffers_size 64k; <span style=\"color: #339966;\">#高负荷下缓冲大小（proxy_buffers*2）</span>\n proxy_temp_file_write_size 64k; <span style=\"color: #339966;\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传\n</span>}\n }\n}</pre>\n\n\naccesslog默认为脂肪在一个文件里，可以\n\n#!/bin/bash\n\nlogs_path=\"/var/log/nginx/\"\nlogs_names=(access)\n\nnum=${#logs_names[@]}\n\nfor((i=0;i<num;i++));do\n\nmv ${logs_path}${logs_names[i]}.log ${logs_path}${logs_names[i]}/$(date -d \"yesterday\" +\"%Y%m%d\")_access.log\n\ntouch ${logs_path}${logs_names[i]}.log\n\nold=${logs_path}${logs_names[i]}/$(date -d \"8 days ago\" +\"%Y%m%d\")_access.log\n\nif [ -f ${old} ]; then\n    rm ${old};\nfi\n\ndone','nginx配置文件详解','','inherit','open','open','','165-autosave-v1','','','2016-09-07 12:43:21','2016-09-07 12:43:21','',165,'http://blog.raymond.com/?p=167',0,'revision','',0),(168,1,'2016-09-07 12:15:55','2016-09-07 12:15:55','<pre>user www-data;<span style=\"color: #339966;\">#运行用户</span>\r\npid /var/run/ nginx.pid;<span style=\"color: #339966;\">#PID文件</span>\r\nworker_processes auto;<span style=\"color: #339966;\">#启动进程,通常设置成和cpu的数量相等</span>\r\nworker_rlimit_nofile 100000;<span style=\"color: #339966;\">#每个nginx进程打开文件描述符最大数目 配置要和系统的单进程打开文件数一致</span></pre>\r\n<pre>error_log /var/log/nginx/error.log;<span style=\"color: #339966;\">#全局错误日志</span></pre>\r\n<pre><span style=\"color: #339966;\">#events模块中包含nginx中所有处理连接的设置。</span>\r\nevents {\r\n worker_connections 65535;<span style=\"color: #339966;\">#单个后台worker process进程的最大并发链接数</span>\r\n multi_accept on;<span style=\"color: #339966;\">#设置是否允许Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接</span>\r\n use epoll;<span style=\"color: #339966;\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span>\r\n}</pre>\r\n<pre><span style=\"color: #339966;\">#设定http服务器，可以利用它的反向代理功能提供负载均衡支持</span>\r\nhttp {\r\n include /etc/nginx/mime.types;<span style=\"color: #339966;\">#设定mime类型,类型由mime.type文件定义</span>\r\n server_tokens off;\r\n sendfile on;<span style=\"color: #339966;\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>\r\n tcp_nopush on;<span style=\"color: #339966;\">#告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送</span>\r\n tcp_nodelay on;<span style=\"color: #339966;\">#告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。</span>\r\n #access_log off; <span style=\"color: #339966;\">#关闭accesslog</span>\r\n log_format main \'$remote_addr - $remote_user [$time_local] \'#<span style=\"color: #339966;\">客户端IP地址 - 记录客户端用户名称[通用日志格式下的本地时间]</span>\r\n \'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'<span style=\"color: #339966;\">#记录客户端IP地址 记录客户端IP地址</span>\r\n \'\"$http_user_agent\" \'<span style=\"color: #339966;\">#UA</span>\r\n \'$upstream_addr $upstream_response_time $request_time \'<span style=\"color: #339966;\">#本地处理地址:端口 处理时间 处理返回时间</span>\r\n \'$request \'<span style=\"color: #339966;\">#请求的URL和HTTP协议</span>\r\n \'\"$status\" $body_bytes_sent \"$http_referer\" \'; <span style=\"color: #339966;\">#请求状态 发送给客户端的字节数，不包括响应头的大小 referer\r\n</span>access_log /data/logs/nginx/access/access.log main;<span style=\"color: #339966;\">#access log位置</span>\r\n \r\n error_log /var/log/nginx/error.log crit;<span style=\"color: #339966;\">#error格式：[debug|info|notice|warn|error|crit]，从左到右越来越简单</span>\r\n #error_log /dev/null crit; <span style=\"color: #339966;\">#关闭errorlog ，error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中</span> \r\n \r\n keepalive_timeout 10;<span style=\"color: #339966;\">#连接超时时间</span>\r\n client_header_timeout 10;<span style=\"color: #339966;\">#设置请求头超时时间</span>\r\n client_body_timeout 10;<span style=\"color: #339966;\">#请求体的超时时间</span>\r\n reset_timedout_connection on;<span style=\"color: #339966;\">#告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>\r\n send_timeout 10;<span style=\"color: #339966;\">#指定客户端的响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接</span>\r\n \r\n limit_conn_zone $binary_remote_addr zone = addr:5m;<span style=\"color: #339966;\">#保存各种key（比如当前连接数）的共享内存的参数，此处设置5M</span>\r\n limit_conn addr 100;<span style=\"color: #339966;\">#为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接</span>\r\n \r\n default_type text/html;<span style=\"color: #339966;\">#设置文件使用的默认的MIME-type</span>\r\n charset UTF-8;<span style=\"color: #339966;\">#设置头文件中的默认的字符集</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启gzip压缩</span>\r\n gzip on;<span style=\"color: #339966;\">#开启gzip压缩</span>\r\n gzip_disable \"msie6\";<span style=\"color: #339966;\">#为指定的客户端禁用gzip功能</span>\r\n gzip_proxied any;<span style=\"color: #339966;\">#压缩所有的响应流</span>\r\n gzip_min_length 1000;<span style=\"color: #339966;\">#对数据启用压缩的最少字节数</span>\r\n gzip_comp_level 6;<span style=\"color: #339966;\">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的</span>\r\n gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;<span style=\"color: #339966;\">#设置需要压缩的数据格式</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启文件缓存</span>\r\n open_file_cache max = 100000 inactive = 20s;<span style=\"color: #339966;\">#缓存是否启用,如果启用,最大缓存100000个文件，有效时间为20s</span>\r\n open_file_cache_valid 30s;<span style=\"color: #339966;\">#何时需要检查open_file_cache中缓存项目的有效信息</span>\r\n open_file_cache_min_uses 2;<span style=\"color: #339966;\">#指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数</span>\r\n open_file_cache_errors on;<span style=\"text-decoration: underline;\">#是否在搜索一个文件是记录cache错误.</span>\r\n \r\n<span style=\"color: #339966;\"> #设定请求缓冲</span>\r\n client_header_buffer_size 1k;<span style=\"color: #339966;\">#默认</span>\r\n large_client_header_buffers 4 4k;<span style=\"color: #339966;\">#当请求头部大于默认值时，会读取该值</span>\r\n \r\n include / etc / nginx / conf.d /*.conf;\r\n include /etc/nginx/sites-enabled/*;\r\n \r\n<span style=\"color: #339966;\"> #设定负载均衡的服务器列表</span>\r\n upstream mysvr {\r\n<span style=\"color: #339966;\"> #weigth参数表示权值，权值越高被分配到的几率越大</span>\r\n server 192.168.8.1:3128 weight=5;\r\n server 192.168.8.2:80 weight=1;\r\n server 192.168.8.3:80 weight=6;\r\n }\r\n}</pre>\r\n<pre>server { \r\n listen 80;<span style=\"color: #339966;\">#侦听80端口</span> \r\n server_name www.xx.com;<span style=\"color: #339966;\">#定义使用www.xx.com访问</span>\r\naccess_log logs/www.xx.com.access.log main;<span style=\"color: #339966;\">#设定本虚拟主机的访问日志，否则将使用默认access位置\r\n\r\n#默认请求</span>\r\n location / {\r\n root /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称\r\n</span>fastcgi_pass www.xx.com;\r\n fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; \r\n include /etc/nginx/fastcgi_params;\r\n }\r\n\r\n<span style=\"color: #339966;\">#定义错误提示页面</span>\r\n error_page 500 502 503 504 /50x.html; \r\n location = /50x.html {\r\n root /root;\r\n }\r\n\r\n<span style=\"color: #339966;\">#静态文件，nginx自己处理</span>\r\n location ~ ^/(images|javascript|js|css|flash|media|static)/ {\r\n root /var/www/virtual/htdocs;\r\n <span style=\"color: #339966;\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>\r\n expires 30d;\r\n }\r\n \r\n<span style=\"color: #339966;\"> #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span>\r\n location ~ \\.php$ {\r\n root /root;\r\n fastcgi_pass 127.0.0.1:9000;\r\n fastcgi_index index.php;\r\n fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;\r\n include fastcgi_params;\r\n }\r\n \r\n <span style=\"color: #339966;\">#设定查看Nginx状态的地址</span>\r\n location /NginxStatus {\r\n stub_status on;\r\n access_log on;\r\n auth_basic \"NginxStatus\";\r\n auth_basic_user_file conf/htpasswd;\r\n }\r\n \r\n <span style=\"color: #339966;\">#禁止访问 .htxxx 文件</span>\r\n location ~ /\\.ht {\r\n deny all;\r\n }\r\n \r\n <span style=\"color: #339966;\">#对aspx后缀的进行负载均衡请求</span>\r\n location ~ .*\\.aspx$ {\r\n\r\nroot /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称</span>\r\n proxy_pass http://mysvr ;<span style=\"color: #339966;\">#请求转向mysvr 定义的服务器列表\r\n\r\n#以下是一些反向代理的配置可删除.</span>\r\n proxy_redirect off;\r\n<span style=\"color: #339966;\"> #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\r\n proxy_set_header Host $host;\r\n proxy_set_header X-Real-IP $remote_addr;\r\n proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n client_max_body_size 10m; <span style=\"color: #339966;\">#允许客户端请求的最大单文件字节数</span>\r\n client_body_buffer_size 128k;<span style=\"color: #339966;\"> #缓冲区代理缓冲用户端请求的最大字节数，</span>\r\n proxy_connect_timeout 90; <span style=\"color: #339966;\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\r\n proxy_send_timeout 90; <span style=\"color: #339966;\">#后端服务器数据回传时间(代理发送超时)</span>\r\n proxy_read_timeout 90; <span style=\"color: #339966;\">#连接成功后，后端服务器响应时间(代理接收超时)</span>\r\n proxy_buffer_size 4k; <span style=\"color: #339966;\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>\r\n proxy_buffers 4 32k; <span style=\"color: #339966;\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>\r\n proxy_busy_buffers_size 64k; <span style=\"color: #339966;\">#高负荷下缓冲大小（proxy_buffers*2）</span>\r\n proxy_temp_file_write_size 64k; <span style=\"color: #339966;\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传\r\n</span>}\r\n }\r\n}</pre>','nginx配置文件详解','','inherit','open','open','','165-revision-v1','','','2016-09-07 12:15:55','2016-09-07 12:15:55','',165,'http://blog.raymond.com/?p=168',0,'revision','',0),(169,1,'2016-09-07 12:44:43','2016-09-07 12:44:43','<pre>user www-data;<span style=\"color: #339966;\">#运行用户</span>\r\npid /var/run/ nginx.pid;<span style=\"color: #339966;\">#PID文件</span>\r\nworker_processes auto;<span style=\"color: #339966;\">#启动进程,通常设置成和cpu的数量相等</span>\r\nworker_rlimit_nofile 100000;<span style=\"color: #339966;\">#每个nginx进程打开文件描述符最大数目 配置要和系统的单进程打开文件数一致</span></pre>\r\n<pre>error_log /var/log/nginx/error.log;<span style=\"color: #339966;\">#全局错误日志</span></pre>\r\n<pre><span style=\"color: #339966;\">#events模块中包含nginx中所有处理连接的设置。</span>\r\nevents {\r\n worker_connections 65535;<span style=\"color: #339966;\">#单个后台worker process进程的最大并发链接数</span>\r\n multi_accept on;<span style=\"color: #339966;\">#设置是否允许Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接</span>\r\n use epoll;<span style=\"color: #339966;\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span>\r\n}</pre>\r\n<pre><span style=\"color: #339966;\">#设定http服务器，可以利用它的反向代理功能提供负载均衡支持</span>\r\nhttp {\r\n include /etc/nginx/mime.types;<span style=\"color: #339966;\">#设定mime类型,类型由mime.type文件定义</span>\r\n server_tokens off;\r\n sendfile on;<span style=\"color: #339966;\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>\r\n tcp_nopush on;<span style=\"color: #339966;\">#告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送</span>\r\n tcp_nodelay on;<span style=\"color: #339966;\">#告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。</span>\r\n #access_log off; <span style=\"color: #339966;\">#关闭accesslog</span>\r\n log_format main \'$remote_addr - $remote_user [$time_local] \'#<span style=\"color: #339966;\">客户端IP地址 - 记录客户端用户名称[通用日志格式下的本地时间]</span>\r\n \'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'<span style=\"color: #339966;\">#记录客户端IP地址 记录客户端IP地址</span>\r\n \'\"$http_user_agent\" \'<span style=\"color: #339966;\">#UA</span>\r\n \'$upstream_addr $upstream_response_time $request_time \'<span style=\"color: #339966;\">#本地处理地址:端口 处理时间 处理返回时间</span>\r\n \'$request \'<span style=\"color: #339966;\">#请求的URL和HTTP协议</span>\r\n \'\"$status\" $body_bytes_sent \"$http_referer\" \'; <span style=\"color: #339966;\">#请求状态 发送给客户端的字节数，不包括响应头的大小 referer\r\n</span>access_log /data/logs/nginx/access/access.log main;<span style=\"color: #339966;\">#access log位置</span>\r\n \r\n error_log /var/log/nginx/error.log crit;<span style=\"color: #339966;\">#error格式：[debug|info|notice|warn|error|crit]，从左到右越来越简单</span>\r\n #error_log /dev/null crit; <span style=\"color: #339966;\">#关闭errorlog ，error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中</span> \r\n \r\n keepalive_timeout 10;<span style=\"color: #339966;\">#连接超时时间</span>\r\n client_header_timeout 10;<span style=\"color: #339966;\">#设置请求头超时时间</span>\r\n client_body_timeout 10;<span style=\"color: #339966;\">#请求体的超时时间</span>\r\n reset_timedout_connection on;<span style=\"color: #339966;\">#告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>\r\n send_timeout 10;<span style=\"color: #339966;\">#指定客户端的响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接</span>\r\n \r\n limit_conn_zone $binary_remote_addr zone = addr:5m;<span style=\"color: #339966;\">#保存各种key（比如当前连接数）的共享内存的参数，此处设置5M</span>\r\n limit_conn addr 100;<span style=\"color: #339966;\">#为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接</span>\r\n \r\n default_type text/html;<span style=\"color: #339966;\">#设置文件使用的默认的MIME-type</span>\r\n charset UTF-8;<span style=\"color: #339966;\">#设置头文件中的默认的字符集</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启gzip压缩</span>\r\n gzip on;<span style=\"color: #339966;\">#开启gzip压缩</span>\r\n gzip_disable \"msie6\";<span style=\"color: #339966;\">#为指定的客户端禁用gzip功能</span>\r\n gzip_proxied any;<span style=\"color: #339966;\">#压缩所有的响应流</span>\r\n gzip_min_length 1000;<span style=\"color: #339966;\">#对数据启用压缩的最少字节数</span>\r\n gzip_comp_level 6;<span style=\"color: #339966;\">#设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的</span>\r\n gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;<span style=\"color: #339966;\">#设置需要压缩的数据格式</span>\r\n \r\n<span style=\"color: #339966;\"> #设定开启文件缓存</span>\r\n open_file_cache max = 100000 inactive = 20s;<span style=\"color: #339966;\">#缓存是否启用,如果启用,最大缓存100000个文件，有效时间为20s</span>\r\n open_file_cache_valid 30s;<span style=\"color: #339966;\">#何时需要检查open_file_cache中缓存项目的有效信息</span>\r\n open_file_cache_min_uses 2;<span style=\"color: #339966;\">#指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数</span>\r\n open_file_cache_errors on;<span style=\"text-decoration: underline;\">#是否在搜索一个文件是记录cache错误.</span>\r\n \r\n<span style=\"color: #339966;\"> #设定请求缓冲</span>\r\n client_header_buffer_size 1k;<span style=\"color: #339966;\">#默认</span>\r\n large_client_header_buffers 4 4k;<span style=\"color: #339966;\">#当请求头部大于默认值时，会读取该值</span>\r\n \r\n include / etc / nginx / conf.d /*.conf;\r\n include /etc/nginx/sites-enabled/*;\r\n \r\n<span style=\"color: #339966;\"> #设定负载均衡的服务器列表</span>\r\n upstream mysvr {\r\n<span style=\"color: #339966;\"> #weigth参数表示权值，权值越高被分配到的几率越大</span>\r\n server 192.168.8.1:3128 weight=5;\r\n server 192.168.8.2:80 weight=1;\r\n server 192.168.8.3:80 weight=6;\r\n }\r\n}</pre>\r\n<pre>server { \r\n listen 80;<span style=\"color: #339966;\">#侦听80端口</span> \r\n server_name www.xx.com;<span style=\"color: #339966;\">#定义使用www.xx.com访问</span>\r\naccess_log logs/www.xx.com.access.log main;<span style=\"color: #339966;\">#设定本虚拟主机的访问日志，否则将使用默认access位置\r\n\r\n#默认请求</span>\r\n location / {\r\n root /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称\r\n</span>fastcgi_pass www.xx.com;\r\n fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; \r\n include /etc/nginx/fastcgi_params;\r\n }\r\n\r\n<span style=\"color: #339966;\">#定义错误提示页面</span>\r\n error_page 500 502 503 504 /50x.html; \r\n location = /50x.html {\r\n root /root;\r\n }\r\n\r\n<span style=\"color: #339966;\">#静态文件，nginx自己处理</span>\r\n location ~ ^/(images|javascript|js|css|flash|media|static)/ {\r\n root /var/www/virtual/htdocs;\r\n <span style=\"color: #339966;\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>\r\n expires 30d;\r\n }\r\n \r\n<span style=\"color: #339966;\"> #PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span>\r\n location ~ \\.php$ {\r\n root /root;\r\n fastcgi_pass 127.0.0.1:9000;\r\n fastcgi_index index.php;\r\n fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;\r\n include fastcgi_params;\r\n }\r\n \r\n <span style=\"color: #339966;\">#设定查看Nginx状态的地址</span>\r\n location /NginxStatus {\r\n stub_status on;\r\n access_log on;\r\n auth_basic \"NginxStatus\";\r\n auth_basic_user_file conf/htpasswd;\r\n }\r\n \r\n <span style=\"color: #339966;\">#禁止访问 .htxxx 文件</span>\r\n location ~ /\\.ht {\r\n deny all;\r\n }\r\n \r\n <span style=\"color: #339966;\">#对aspx后缀的进行负载均衡请求</span>\r\n location ~ .*\\.aspx$ {\r\n\r\nroot /root; <span style=\"color: #339966;\">#定义服务器的默认网站根目录位置</span>\r\n index index.php index.html index.htm; <span style=\"color: #339966;\">#定义首页索引文件的名称</span>\r\n proxy_pass http://mysvr ;<span style=\"color: #339966;\">#请求转向mysvr 定义的服务器列表\r\n\r\n#以下是一些反向代理的配置可删除.</span>\r\n proxy_redirect off;\r\n<span style=\"color: #339966;\"> #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\r\n proxy_set_header Host $host;\r\n proxy_set_header X-Real-IP $remote_addr;\r\n proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n client_max_body_size 10m; <span style=\"color: #339966;\">#允许客户端请求的最大单文件字节数</span>\r\n client_body_buffer_size 128k;<span style=\"color: #339966;\"> #缓冲区代理缓冲用户端请求的最大字节数，</span>\r\n proxy_connect_timeout 90; <span style=\"color: #339966;\">#nginx跟后端服务器连接超时时间(代理连接超时)</span>\r\n proxy_send_timeout 90; <span style=\"color: #339966;\">#后端服务器数据回传时间(代理发送超时)</span>\r\n proxy_read_timeout 90; <span style=\"color: #339966;\">#连接成功后，后端服务器响应时间(代理接收超时)</span>\r\n proxy_buffer_size 4k; <span style=\"color: #339966;\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>\r\n proxy_buffers 4 32k; <span style=\"color: #339966;\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>\r\n proxy_busy_buffers_size 64k; <span style=\"color: #339966;\">#高负荷下缓冲大小（proxy_buffers*2）</span>\r\n proxy_temp_file_write_size 64k; <span style=\"color: #339966;\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传\r\n</span>}\r\n }\r\n}</pre>\r\naccesslog默认为只放在一个文件里，可以用脚本每天0点执行，分割出每日的日志\r\n<pre>#!/bin/bash\r\n\r\n logs_path=\"/var/log/nginx/\"\r\n logs_names=(access)\r\n\r\nnum=${#logs_names[@]}\r\n\r\nfor((i=0;i&lt;num;i++));do\r\n\r\nmv ${logs_path}${logs_names[i]}.log ${logs_path}${logs_names[i]}/$(date -d \"yesterday\" +\"%Y%m%d\")_access.log\r\n\r\ntouch ${logs_path}${logs_names[i]}.log\r\n\r\nold=${logs_path}${logs_names[i]}/$(date -d \"8 days ago\" +\"%Y%m%d\")_access.log\r\nif [ -f ${old} ]; then\r\n rm ${old};\r\n fi\r\n\r\ndone</pre>','nginx配置文件详解','','inherit','open','open','','165-revision-v1','','','2016-09-07 12:44:43','2016-09-07 12:44:43','',165,'http://blog.raymond.com/?p=169',0,'revision','',0),(170,1,'2016-09-09 06:47:12','2016-09-09 06:47:12','核心步骤\r\n\r\nECS服务器\r\n3）nginx设置\r\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\r\n配置项 ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module --with-http_image_filter_module\r\nmake &amp;&amp; make install\r\naccesslog 格式\r\nlog_format main \'$remote_addr - $remote_user [$time_local] \'\r\n\'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'\r\n\'\"$http_user_agent\" \'\r\n\'$upstream_addr $upstream_response_time $request_time \'\r\n\'$http_host $request \'\r\n\'\"$status\" $body_bytes_sent \"$http_referer\" \';\r\n\r\n4）\r\nyum list installed | grep php\r\nyum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mcrypt.x86_64 php-mysql.x86_64 php-pdo.x86_64\r\nyum remove php\r\nwget\r\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc \\\r\n--with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config \\\r\n--with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr \\\r\n--enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization \\\r\n--with-curl --enable-mbregex --enable-fpm --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf \\\r\n--with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap \\\r\n--enable-opcache=no --without-pear\r\nmake all install\r\necho \"/data/soft/php/sbin/php-fpm\" &gt;&gt; /etc/rc.local\r\nvi /usr/local/php/etc/php-fpm.conf\r\nuser = www\r\ngroup = www\r\npid = run/php-fpm.pid\r\n5）\r\nvi /etc/rc.local\r\nchmod +x /etc/rc.d/init.d/php-fpm\r\nchkconfig php-fpm on\r\n6）\r\nyum remove git\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\r\nwget https://www.kernel.org/pub/software/scm/git/git-2.0.5.tar.gz\r\nmake prefix=/usr/local/git all\r\nmake prefix=/usr/local/git install\r\necho \"export PATH=$PATH:/usr/local/git/bin\" &gt;&gt; /etc/bashrc\r\nsource /etc/bashrc\r\n#sudo ln -s /usr/local/git/bin/* /usr/bin/\r\n7）\r\n新增跳板用户\r\nadduser ymk_jumper\r\npasswd ymk_jumper\r\nymk2016@)!^\r\n禁止root登录，修改登录端口\r\nvi /etc/ssh/ssh_config\r\nPermitRootLogin no\r\nPort 10888\r\nsystemctl restart sshd.service\r\n安装防火墙\r\nyum install firewalld\r\nsystemctl start firewalld\r\ncp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/\r\nvi /etc/firewalld/services/ssh.xml\r\n&lt;port protocol=\"tcp\" port=\"10837\"/&gt;\r\nfirewall-cmd --reload\r\n可能需要开启防火墙端口，加在port 22 下面\r\nvi /etc/sysconfig/iptables\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT #允许80端口通过防火墙\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT #允许3306端口通过防火墙\r\n\r\n关闭 selinux\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\n\r\n配置公钥登录，添加可ssh登录用户公钥\r\nAuthenticationMethods publickey,\r\n.ssh/authorized_keys','ECS配置核心步骤','','publish','open','open','','ecs%e9%85%8d%e7%bd%ae%e6%a0%b8%e5%bf%83%e6%ad%a5%e9%aa%a4','','','2016-09-09 06:47:12','2016-09-09 06:47:12','',0,'http://blog.raymond.com/?p=170',0,'post','',0),(171,1,'2016-09-09 06:47:12','2016-09-09 06:47:12','核心步骤\r\n\r\nECS服务器\r\n3）nginx设置\r\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\r\n配置项 ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module --with-http_image_filter_module\r\nmake &amp;&amp; make install\r\naccesslog 格式\r\nlog_format main \'$remote_addr - $remote_user [$time_local] \'\r\n\'x_forward_ip[$http_x_forwarded_for] client_ip[$http_true_client_ip] \'\r\n\'\"$http_user_agent\" \'\r\n\'$upstream_addr $upstream_response_time $request_time \'\r\n\'$http_host $request \'\r\n\'\"$status\" $body_bytes_sent \"$http_referer\" \';\r\n\r\n4）\r\nyum list installed | grep php\r\nyum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mcrypt.x86_64 php-mysql.x86_64 php-pdo.x86_64\r\nyum remove php\r\nwget\r\n./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc \\\r\n--with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config \\\r\n--with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr \\\r\n--enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization \\\r\n--with-curl --enable-mbregex --enable-fpm --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf \\\r\n--with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap \\\r\n--enable-opcache=no --without-pear\r\nmake all install\r\necho \"/data/soft/php/sbin/php-fpm\" &gt;&gt; /etc/rc.local\r\nvi /usr/local/php/etc/php-fpm.conf\r\nuser = www\r\ngroup = www\r\npid = run/php-fpm.pid\r\n5）\r\nvi /etc/rc.local\r\nchmod +x /etc/rc.d/init.d/php-fpm\r\nchkconfig php-fpm on\r\n6）\r\nyum remove git\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\r\nwget https://www.kernel.org/pub/software/scm/git/git-2.0.5.tar.gz\r\nmake prefix=/usr/local/git all\r\nmake prefix=/usr/local/git install\r\necho \"export PATH=$PATH:/usr/local/git/bin\" &gt;&gt; /etc/bashrc\r\nsource /etc/bashrc\r\n#sudo ln -s /usr/local/git/bin/* /usr/bin/\r\n7）\r\n新增跳板用户\r\nadduser ymk_jumper\r\npasswd ymk_jumper\r\nymk2016@)!^\r\n禁止root登录，修改登录端口\r\nvi /etc/ssh/ssh_config\r\nPermitRootLogin no\r\nPort 10888\r\nsystemctl restart sshd.service\r\n安装防火墙\r\nyum install firewalld\r\nsystemctl start firewalld\r\ncp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/\r\nvi /etc/firewalld/services/ssh.xml\r\n&lt;port protocol=\"tcp\" port=\"10837\"/&gt;\r\nfirewall-cmd --reload\r\n可能需要开启防火墙端口，加在port 22 下面\r\nvi /etc/sysconfig/iptables\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT #允许80端口通过防火墙\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT #允许3306端口通过防火墙\r\n\r\n关闭 selinux\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\n\r\n配置公钥登录，添加可ssh登录用户公钥\r\nAuthenticationMethods publickey,\r\n.ssh/authorized_keys','ECS配置核心步骤','','inherit','open','open','','170-revision-v1','','','2016-09-09 06:47:12','2016-09-09 06:47:12','',170,'http://blog.raymond.com/?p=171',0,'revision','',0),(172,1,'2016-09-12 17:35:58','2016-09-12 17:35:58','下载nginx稳定版 1.10.1\r\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\r\n到本地，解压\r\n<pre>./configure 把 nginx 安装到 /usr/local/nginx 下\r\n./configure –user=www –group=www –prefix=/usr/local/nginx –with-http_stub_status_module –without-http-cache –with-http_ssl_module –with-http_realip_module</pre>\r\n其中可能会报少了一些组件，对应 yum 安装就行了\r\n<pre>make &amp;&amp; make install</pre>\r\n<pre>//创建 www 用户，\r\n/usr/sbin/groupadd -f www\r\n/usr/sbin/useradd -g www www</pre>\r\n<pre>//建立软链接\r\nln -s /usr/local/nginx/sbin/nginx /usr/sbin/nginx</pre>\r\n<pre>//将 nginx 添加到服务\r\nchkconfig --add nginx\r\n//再配置开机启动\r\nchkconfig nginx on</pre>\r\n<pre>chkconfig --list nginx // 查看 nginx 的自启动情况</pre>\r\n接下来，配置熟悉的 service nginx 。。。 操作，这需要在 /etc/init.d/ 下新增 nginx 文件，从旧服务器拷贝了一份，修改一下脚本位置，并设置执行权限\r\nchmod 755 /etc/init.d/nginx\r\n\r\n至此，nginx安装完成，可以像 yum 安装一样操作\r\n<pre>\r\n#!/bin/sh\r\n#\r\n# nginx - this script starts and stops the nginx daemin\r\n#\r\n# chkconfig: - 85 15 \r\n# description: Nginx is an HTTP(S) server, HTTP(S) reverse \\\r\n# proxy and IMAP/POP3 proxy server\r\n# processname: nginx\r\n# config: /usr/local/nginx/conf/nginx.conf\r\n# pidfile: /usr/local/nginx/logs/nginx.pid</pre>\r\n<pre># Source function library.\r\n. /etc/rc.d/init.d/functions</pre>\r\n<pre># Source networking configuration.\r\n. /etc/sysconfig/network</pre>\r\n<pre># Check that networking is up.\r\n[ \"$NETWORKING\" = \"no\" ] &amp;&amp; exit 0</pre>\r\n<pre>nginx=\"/usr/local/nginx/sbin/nginx\"\r\nprog=$(basename $nginx)</pre>\r\n<pre>NGINX_CONF_FILE=\"/usr/local/nginx/conf/nginx.conf\"</pre>\r\n<pre>lockfile=/var/lock/subsys/nginx</pre>\r\n<pre>start() {\r\n [ -x $nginx ] || exit 5\r\n [ -f $NGINX_CONF_FILE ] || exit 6\r\n echo -n $\"Starting $prog: \"\r\n daemon $nginx -c $NGINX_CONF_FILE\r\n retval=$?\r\n echo\r\n [ $retval -eq 0 ] &amp;&amp; touch $lockfile\r\n return $retval\r\n}</pre>\r\n<pre>stop() {\r\n echo -n $\"Stopping $prog: \"\r\n killproc $prog -QUIT\r\n retval=$?\r\n echo\r\n [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile\r\n return $retval\r\n}</pre>\r\n<pre>restart() {\r\n configtest || return $?\r\n stop\r\n start\r\n}</pre>\r\n<pre>reload() {\r\n configtest || return $?\r\n echo -n $\"Reloading $prog: \"\r\n killproc $nginx -HUP\r\n RETVAL=$?\r\n echo\r\n}</pre>\r\n<pre>force_reload() {\r\n restart\r\n}</pre>\r\n<pre>configtest() {\r\n $nginx -t -c $NGINX_CONF_FILE\r\n}</pre>\r\n<pre>rh_status() {\r\n status $prog\r\n}</pre>\r\n<pre>rh_status_q() {\r\n rh_status &gt;/dev/null 2&gt;&amp;1\r\n}</pre>\r\n<pre>case \"$1\" in\r\n start)\r\n rh_status_q &amp;&amp; exit 0\r\n $1\r\n ;;\r\n stop)\r\n rh_status_q || exit 0\r\n $1\r\n ;;\r\n restart|configtest)\r\n $1\r\n ;;\r\n reload)\r\n rh_status_q || exit 7\r\n $1\r\n ;;\r\n force-reload)\r\n force_reload\r\n ;;\r\n status)\r\n rh_status\r\n ;;\r\n condrestart|try-restart)\r\n rh_status_q || exit 0\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\r\n exit 2\r\nesac</pre>','编译安装nginx','','publish','open','open','','%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85nginx','','','2016-09-12 17:35:58','2016-09-12 17:35:58','',0,'http://blog.raymond.com/?p=172',0,'post','',0),(173,1,'2016-09-12 17:35:58','2016-09-12 17:35:58','下载nginx稳定版 1.10.1\r\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\r\n到本地，解压\r\n<pre>./configure 把 nginx 安装到 /usr/local/nginx 下\r\n./configure –user=www –group=www –prefix=/usr/local/nginx –with-http_stub_status_module –without-http-cache –with-http_ssl_module –with-http_realip_module</pre>\r\n其中可能会报少了一些组件，对应 yum 安装就行了\r\n<pre>make &amp;&amp; make install</pre>\r\n<pre>//创建 www 用户，\r\n/usr/sbin/groupadd -f www\r\n/usr/sbin/useradd -g www www</pre>\r\n<pre>//建立软链接\r\nln -s /usr/local/nginx/sbin/nginx /usr/sbin/nginx</pre>\r\n<pre>//将 nginx 添加到服务\r\nchkconfig --add nginx\r\n//再配置开机启动\r\nchkconfig nginx on</pre>\r\n<pre>chkconfig --list nginx // 查看 nginx 的自启动情况</pre>\r\n接下来，配置熟悉的 service nginx 。。。 操作，这需要在 /etc/init.d/ 下新增 nginx 文件，从旧服务器拷贝了一份，修改一下脚本位置，并设置执行权限\r\nchmod 755 /etc/init.d/nginx\r\n\r\n至此，nginx安装完成，可以像 yum 安装一样操作\r\n<pre>\r\n#!/bin/sh\r\n#\r\n# nginx - this script starts and stops the nginx daemin\r\n#\r\n# chkconfig: - 85 15 \r\n# description: Nginx is an HTTP(S) server, HTTP(S) reverse \\\r\n# proxy and IMAP/POP3 proxy server\r\n# processname: nginx\r\n# config: /usr/local/nginx/conf/nginx.conf\r\n# pidfile: /usr/local/nginx/logs/nginx.pid</pre>\r\n<pre># Source function library.\r\n. /etc/rc.d/init.d/functions</pre>\r\n<pre># Source networking configuration.\r\n. /etc/sysconfig/network</pre>\r\n<pre># Check that networking is up.\r\n[ \"$NETWORKING\" = \"no\" ] &amp;&amp; exit 0</pre>\r\n<pre>nginx=\"/usr/local/nginx/sbin/nginx\"\r\nprog=$(basename $nginx)</pre>\r\n<pre>NGINX_CONF_FILE=\"/usr/local/nginx/conf/nginx.conf\"</pre>\r\n<pre>lockfile=/var/lock/subsys/nginx</pre>\r\n<pre>start() {\r\n [ -x $nginx ] || exit 5\r\n [ -f $NGINX_CONF_FILE ] || exit 6\r\n echo -n $\"Starting $prog: \"\r\n daemon $nginx -c $NGINX_CONF_FILE\r\n retval=$?\r\n echo\r\n [ $retval -eq 0 ] &amp;&amp; touch $lockfile\r\n return $retval\r\n}</pre>\r\n<pre>stop() {\r\n echo -n $\"Stopping $prog: \"\r\n killproc $prog -QUIT\r\n retval=$?\r\n echo\r\n [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile\r\n return $retval\r\n}</pre>\r\n<pre>restart() {\r\n configtest || return $?\r\n stop\r\n start\r\n}</pre>\r\n<pre>reload() {\r\n configtest || return $?\r\n echo -n $\"Reloading $prog: \"\r\n killproc $nginx -HUP\r\n RETVAL=$?\r\n echo\r\n}</pre>\r\n<pre>force_reload() {\r\n restart\r\n}</pre>\r\n<pre>configtest() {\r\n $nginx -t -c $NGINX_CONF_FILE\r\n}</pre>\r\n<pre>rh_status() {\r\n status $prog\r\n}</pre>\r\n<pre>rh_status_q() {\r\n rh_status &gt;/dev/null 2&gt;&amp;1\r\n}</pre>\r\n<pre>case \"$1\" in\r\n start)\r\n rh_status_q &amp;&amp; exit 0\r\n $1\r\n ;;\r\n stop)\r\n rh_status_q || exit 0\r\n $1\r\n ;;\r\n restart|configtest)\r\n $1\r\n ;;\r\n reload)\r\n rh_status_q || exit 7\r\n $1\r\n ;;\r\n force-reload)\r\n force_reload\r\n ;;\r\n status)\r\n rh_status\r\n ;;\r\n condrestart|try-restart)\r\n rh_status_q || exit 0\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\r\n exit 2\r\nesac</pre>','编译安装nginx','','inherit','open','open','','172-revision-v1','','','2016-09-12 17:35:58','2016-09-12 17:35:58','',172,'http://blog.raymond.com/?p=173',0,'revision','',0),(174,1,'2016-09-13 04:15:39','2016-09-13 04:15:39','get http://cn2.php.net/distributions/php-5.5.38.tar.gz\r\ntar -zxvf php-5.5.38.tar.gz\r\ncd php-5.5.38\r\n<pre>./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc \\\r\n--with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config \\\r\n--with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr \\\r\n--enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization \\\r\n--with-curl --enable-mbregex --enable-fpm --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf \\\r\n--with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap \\\r\n--enable-opcache=no --without-pear</pre>\r\n报了几个错：\r\nconfigure: error: xml2-config not found. Please check your libxml2 installation.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa |grep libxml2\r\nlibxml2-2.7.6-14.el6_5.2.x86_64\r\nlibxml2-python-2.7.6-14.el6_5.2.x86_64\r\n[root@iZ23p2rqpd9Z php-5.5.38]# \r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum install libxml2\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum install libxml2-devel -y</pre>\r\n需要更新的可以更新，不要跳过就行了\r\n\r\nconfigure: error: Please reinstall the libcurl distribution -\r\neasy.h should be in &lt;curl-dir&gt;/include/curl/\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install curl curl-devel</pre>\r\nIf configure fails try --with-vpx-dir=&lt;DIR&gt;\r\nconfigure: error: jpeglib.h not found.\r\n提示是说没有 jpeglib。检查发现已经装了的\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa|grep libjpeg\r\nlibjpeg-turbo-1.2.1-3.el6_5.x86_64\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum list installed|grep libjpeg\r\nlibjpeg-turbo.x86_64\r\n不过没有dev包，所以再加上\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum -y install libjpeg-devel\r\n[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa|grep libjpeg\r\nlibjpeg-turbo-devel-1.2.1-3.el6_5.x86_64\r\nlibjpeg-turbo-1.2.1-3.el6_5.x86_64</pre>\r\nconfigure: error: png.h not found.\r\n照理，安装dev包\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install libpng-devel</pre>\r\nconfigure: error: freetype-config not found.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum -y install freetype-devel</pre>\r\nconfigure: error: mcrypt.h not found. Please reinstall libmcrypt.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install php-mcrypt libmcrypt libmcrypt-devel</pre>\r\nconfigure: error: Cannot find MySQL header files under /usr/local/mysql.\r\nNote that the MySQL client library is not bundled anymore!\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install mysql-devel\r\n并且修改两个configure参数\r\n--with-mysql=/usr --with-mysqli=/usr/bin/mysql_config</pre>\r\nconfigure: error: Cannot find libmysqlclient under /usr.\r\nNote that the MySQL client library is not bundled anymore!\r\n这个错误时因为在64位的linux系统中，libmysqlclient 默认安装到了 /usr/lib64/mysql/ 目录下，但是php编译时，要去/usr/lib目录下查找\r\n解决办法：在/usr/lib目录下创建一个软连接\r\n<pre>ln -s /usr/lib64/mysql/libmysqlclient.so.16 /usr/lib/libmysqlclient.so</pre>\r\n终于配置没问题后，就可以安装了\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# make &amp;&amp; make install</pre>\r\n配置调优\r\nvi /usr/local/php/etc/php-fpm.conf\r\n主要修改了以下几项\r\npid = /var/run/php-fpm.pid\r\nerror_log = /data/logs/php/php-fpm.error.log\r\nuser = www\r\ngroup = www\r\npm = dynamic\r\npm.max_children = 256\r\npm.start_servers = 16\r\npm.min_spare_servers = 8\r\npm.max_spare_servers = 32\r\npm.max_requests = 512\r\nslowlog = /data/logs/php/$pool.log.slow\r\nrequest_slowlog_timeout = 1s\r\nrequest_terminate_timeout = 120\r\n\r\n建立软链接\r\n<pre>\r\nln -s /usr/local/php/sbin/php-fpm /usr/sbin/php-fpm</pre>\r\n<pre>新建 /etc/init.d/php-fpm 文件，并修改执行权限 \r\nchmod +x /etc/init.d/php-fpm</pre>\r\n<pre>chkconfig --add php-fpm\r\nchkconfig php-fpm on</pre>\r\n查看结果：\r\n<pre>chkconfig --list php-fpm\r\nphp-fpm 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</pre>\r\n<pre>#! /bin/sh\r\n#\r\n# chkconfig: - 84 16\r\n# description: PHP FastCGI Process Manager\r\n# processname: php-fpm\r\n# config: /etc/php-fpm.conf\r\n# config: /etc/sysconfig/php-fpm\r\n# pidfile: /var/run/php-fpm.pid\r\n#\r\n### BEGIN INIT INFO\r\n# Provides: php-fpm\r\n# Required-Start: $local_fs $remote_fs $network $named\r\n# Required-Stop: $local_fs $remote_fs $network\r\n# Short-Description: start and stop PHP FPM\r\n# Description: PHP FastCGI Process Manager\r\n### END INIT INFO</pre>\r\n<pre># Standard LSB functions\r\n#. /lib/lsb/init-functions</pre>\r\n<pre># Source function library.\r\n. /etc/init.d/functions</pre>\r\n<pre># Check that networking is up.\r\n. /etc/sysconfig/network</pre>\r\n<pre># Additional environment file\r\nif [ -f /etc/sysconfig/php-fpm ]; then\r\n . /etc/sysconfig/php-fpm\r\nfi</pre>\r\n<pre>if [ \"$NETWORKING\" = \"no\" ]\r\nthen\r\n exit 0\r\nfi\r\nRETVAL=0\r\nprog=\"php-fpm\"\r\npidfile=/var/run/php-fpm.pid\r\nlockfile=/var/lock/subsys/php-fpm</pre>\r\n<pre>start () {\r\n echo -n $\"Starting $prog: \"\r\n dir=$(dirname ${pidfile})\r\n [ -d $dir ] || mkdir $dir\r\n daemon --pidfile ${pidfile} /usr/sbin/php-fpm --daemonize\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; touch ${lockfile}\r\n}\r\nstop () {\r\n echo -n $\"Stopping $prog: \"\r\n killproc -p ${pidfile} php-fpm\r\n RETVAL=$?\r\n echo\r\n if [ $RETVAL -eq 0 ] ; then\r\n rm -f ${lockfile} ${pidfile}\r\n fi\r\n}</pre>\r\n<pre>restart () {\r\n stop\r\n start\r\n}\r\nreload () {\r\n echo -n $\"Reloading $prog: \"\r\n if ! /usr/sbin/php-fpm --test ; then\r\n RETVAL=6\r\n echo $\"not reloading due to configuration syntax error\"\r\n failure $\"not reloading $prog due to configuration syntax error\"\r\n else\r\n killproc -p ${pidfile} php-fpm -USR2\r\n RETVAL=$?\r\n fi\r\n echo\r\n}</pre>\r\n<pre>\r\n# See how we were called.\r\ncase \"$1\" in\r\n start)\r\n start\r\n ;;\r\n stop)\r\n stop\r\n ;;\r\n status)\r\n status -p ${pidfile} php-fpm\r\n RETVAL=$?\r\n ;;\r\n restart)\r\n restart\r\n ;;\r\n reload|force-reload)\r\n reload\r\n ;;\r\n configtest)\r\n /usr/sbin/php-fpm --test\r\n RETVAL=$?\r\n ;;\r\n condrestart|try-restart)\r\n [ -f ${lockfile} ] &amp;&amp; restart || :\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest}\"\r\n RETVAL=2\r\n ;;\r\nesac</pre>\r\n<pre>exit $RETVAL</pre>','编译安装php5.5','','publish','open','open','','%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85php5-5','','','2016-09-13 04:15:39','2016-09-13 04:15:39','',0,'http://blog.raymond.com/?p=174',0,'post','',0),(175,1,'2016-09-13 04:15:39','2016-09-13 04:15:39','get http://cn2.php.net/distributions/php-5.5.38.tar.gz\r\ntar -zxvf php-5.5.38.tar.gz\r\ncd php-5.5.38\r\n<pre>./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc \\\r\n--with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config \\\r\n--with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr \\\r\n--enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization \\\r\n--with-curl --enable-mbregex --enable-fpm --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf \\\r\n--with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap \\\r\n--enable-opcache=no --without-pear</pre>\r\n报了几个错：\r\nconfigure: error: xml2-config not found. Please check your libxml2 installation.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa |grep libxml2\r\nlibxml2-2.7.6-14.el6_5.2.x86_64\r\nlibxml2-python-2.7.6-14.el6_5.2.x86_64\r\n[root@iZ23p2rqpd9Z php-5.5.38]# \r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum install libxml2\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum install libxml2-devel -y</pre>\r\n需要更新的可以更新，不要跳过就行了\r\n\r\nconfigure: error: Please reinstall the libcurl distribution -\r\neasy.h should be in &lt;curl-dir&gt;/include/curl/\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install curl curl-devel</pre>\r\nIf configure fails try --with-vpx-dir=&lt;DIR&gt;\r\nconfigure: error: jpeglib.h not found.\r\n提示是说没有 jpeglib。检查发现已经装了的\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa|grep libjpeg\r\nlibjpeg-turbo-1.2.1-3.el6_5.x86_64\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum list installed|grep libjpeg\r\nlibjpeg-turbo.x86_64\r\n不过没有dev包，所以再加上\r\n[root@iZ23p2rqpd9Z php-5.5.38]# yum -y install libjpeg-devel\r\n[root@iZ23p2rqpd9Z php-5.5.38]# rpm -qa|grep libjpeg\r\nlibjpeg-turbo-devel-1.2.1-3.el6_5.x86_64\r\nlibjpeg-turbo-1.2.1-3.el6_5.x86_64</pre>\r\nconfigure: error: png.h not found.\r\n照理，安装dev包\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install libpng-devel</pre>\r\nconfigure: error: freetype-config not found.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum -y install freetype-devel</pre>\r\nconfigure: error: mcrypt.h not found. Please reinstall libmcrypt.\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install php-mcrypt libmcrypt libmcrypt-devel</pre>\r\nconfigure: error: Cannot find MySQL header files under /usr/local/mysql.\r\nNote that the MySQL client library is not bundled anymore!\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# yum install mysql-devel\r\n并且修改两个configure参数\r\n--with-mysql=/usr --with-mysqli=/usr/bin/mysql_config</pre>\r\nconfigure: error: Cannot find libmysqlclient under /usr.\r\nNote that the MySQL client library is not bundled anymore!\r\n这个错误时因为在64位的linux系统中，libmysqlclient 默认安装到了 /usr/lib64/mysql/ 目录下，但是php编译时，要去/usr/lib目录下查找\r\n解决办法：在/usr/lib目录下创建一个软连接\r\n<pre>ln -s /usr/lib64/mysql/libmysqlclient.so.16 /usr/lib/libmysqlclient.so</pre>\r\n终于配置没问题后，就可以安装了\r\n<pre>[root@iZ23p2rqpd9Z php-5.5.38]# make &amp;&amp; make install</pre>\r\n配置调优\r\nvi /usr/local/php/etc/php-fpm.conf\r\n主要修改了以下几项\r\npid = /var/run/php-fpm.pid\r\nerror_log = /data/logs/php/php-fpm.error.log\r\nuser = www\r\ngroup = www\r\npm = dynamic\r\npm.max_children = 256\r\npm.start_servers = 16\r\npm.min_spare_servers = 8\r\npm.max_spare_servers = 32\r\npm.max_requests = 512\r\nslowlog = /data/logs/php/$pool.log.slow\r\nrequest_slowlog_timeout = 1s\r\nrequest_terminate_timeout = 120\r\n\r\n建立软链接\r\n<pre>\r\nln -s /usr/local/php/sbin/php-fpm /usr/sbin/php-fpm</pre>\r\n<pre>新建 /etc/init.d/php-fpm 文件，并修改执行权限 \r\nchmod +x /etc/init.d/php-fpm</pre>\r\n<pre>chkconfig --add php-fpm\r\nchkconfig php-fpm on</pre>\r\n查看结果：\r\n<pre>chkconfig --list php-fpm\r\nphp-fpm 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</pre>\r\n<pre>#! /bin/sh\r\n#\r\n# chkconfig: - 84 16\r\n# description: PHP FastCGI Process Manager\r\n# processname: php-fpm\r\n# config: /etc/php-fpm.conf\r\n# config: /etc/sysconfig/php-fpm\r\n# pidfile: /var/run/php-fpm.pid\r\n#\r\n### BEGIN INIT INFO\r\n# Provides: php-fpm\r\n# Required-Start: $local_fs $remote_fs $network $named\r\n# Required-Stop: $local_fs $remote_fs $network\r\n# Short-Description: start and stop PHP FPM\r\n# Description: PHP FastCGI Process Manager\r\n### END INIT INFO</pre>\r\n<pre># Standard LSB functions\r\n#. /lib/lsb/init-functions</pre>\r\n<pre># Source function library.\r\n. /etc/init.d/functions</pre>\r\n<pre># Check that networking is up.\r\n. /etc/sysconfig/network</pre>\r\n<pre># Additional environment file\r\nif [ -f /etc/sysconfig/php-fpm ]; then\r\n . /etc/sysconfig/php-fpm\r\nfi</pre>\r\n<pre>if [ \"$NETWORKING\" = \"no\" ]\r\nthen\r\n exit 0\r\nfi\r\nRETVAL=0\r\nprog=\"php-fpm\"\r\npidfile=/var/run/php-fpm.pid\r\nlockfile=/var/lock/subsys/php-fpm</pre>\r\n<pre>start () {\r\n echo -n $\"Starting $prog: \"\r\n dir=$(dirname ${pidfile})\r\n [ -d $dir ] || mkdir $dir\r\n daemon --pidfile ${pidfile} /usr/sbin/php-fpm --daemonize\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; touch ${lockfile}\r\n}\r\nstop () {\r\n echo -n $\"Stopping $prog: \"\r\n killproc -p ${pidfile} php-fpm\r\n RETVAL=$?\r\n echo\r\n if [ $RETVAL -eq 0 ] ; then\r\n rm -f ${lockfile} ${pidfile}\r\n fi\r\n}</pre>\r\n<pre>restart () {\r\n stop\r\n start\r\n}\r\nreload () {\r\n echo -n $\"Reloading $prog: \"\r\n if ! /usr/sbin/php-fpm --test ; then\r\n RETVAL=6\r\n echo $\"not reloading due to configuration syntax error\"\r\n failure $\"not reloading $prog due to configuration syntax error\"\r\n else\r\n killproc -p ${pidfile} php-fpm -USR2\r\n RETVAL=$?\r\n fi\r\n echo\r\n}</pre>\r\n<pre>\r\n# See how we were called.\r\ncase \"$1\" in\r\n start)\r\n start\r\n ;;\r\n stop)\r\n stop\r\n ;;\r\n status)\r\n status -p ${pidfile} php-fpm\r\n RETVAL=$?\r\n ;;\r\n restart)\r\n restart\r\n ;;\r\n reload|force-reload)\r\n reload\r\n ;;\r\n configtest)\r\n /usr/sbin/php-fpm --test\r\n RETVAL=$?\r\n ;;\r\n condrestart|try-restart)\r\n [ -f ${lockfile} ] &amp;&amp; restart || :\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest}\"\r\n RETVAL=2\r\n ;;\r\nesac</pre>\r\n<pre>exit $RETVAL</pre>','编译安装php5.5','','inherit','open','open','','174-revision-v1','','','2016-09-13 04:15:39','2016-09-13 04:15:39','',174,'http://blog.raymond.com/?p=175',0,'revision','',0),(176,1,'2016-09-13 07:08:46','2016-09-13 07:08:46','<pre>wget http://download.redis.io/releases/redis-3.2.3.tar.gz\r\ntar -zxvf redis-3.2.3.tar.gz\r\ncd redis-3.2.3\r\nmake\r\nmake PREFIX=/usr/local/redis install\r\ncp redis.conf /usr/local/redis/\r\nvi /usr/local/redis/redis.conf修改配置\r\ndaemonize yes #redis将以守护进程的方式运行，默认为no会暂用你的终端</pre>\r\n<pre>vi /etc/init.d/redis\r\nchmod +x /etc/init.d/redis</pre>\r\n<pre>chkconfig --add redis\r\nchkconfig --list redis\r\nredis 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭\r\nchkconfig redis on\r\nchkconfig --list redis\r\nredis 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</pre>\r\n<pre>#!/bin/sh\r\n#\r\n# redis Startup script for Redis Server\r\n#\r\n# chkconfig: - 80 12\r\n# description: Redis is an open source, advanced key-value store.\r\n#\r\n# processname: redis-server\r\n# config: /etc/redis.conf\r\n# pidfile: /var/run/redis.pid\r\nsource /etc/init.d/functions\r\nBIN=\"/usr/local/redis/bin\"\r\nCONFIG=\"/usr/local/redis/redis.conf\"\r\nPIDFILE=\"/var/run/redis.pid\"\r\n### Read configuration\r\n[ -r \"$SYSCONFIG\" ] &amp;&amp; source \"$SYSCONFIG\"\r\nRETVAL=0\r\nprog=\"redis-server\"\r\ndesc=\"Redis Server\"\r\nstart() {\r\n if [ -e $PIDFILE ];then\r\n echo \"$desc already running....\"\r\n exit 1\r\n fi\r\n echo -n $\"Starting $desc: \"\r\n daemon $BIN/$prog $CONFIG\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; touch /var/lock/subsys/$prog\r\n return $RETVAL\r\n}\r\nstop() {\r\n echo -n $\"Stop $desc: \"\r\n killproc $prog\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/$prog $PIDFILE\r\n return $RETVAL\r\n}\r\nrestart() {\r\n stop\r\n start\r\n}\r\ncase \"$1\" in\r\n start)\r\n start\r\n ;;\r\n stop)\r\n stop\r\n ;;\r\n restart)\r\n restart\r\n ;;\r\n condrestart)\r\n [ -e /var/lock/subsys/$prog ] &amp;&amp; restart\r\n RETVAL=$?\r\n ;;\r\n status)\r\n status $prog\r\n RETVAL=$?\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|restart|condrestart|status}\"\r\n RETVAL=1\r\nesac\r\nexit $RETVAL</pre>','编译安装redis','','publish','open','open','','%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85redis','','','2016-09-13 07:08:46','2016-09-13 07:08:46','',0,'http://blog.raymond.com/?p=176',0,'post','',0),(177,1,'2016-09-13 07:08:46','2016-09-13 07:08:46','<pre>wget http://download.redis.io/releases/redis-3.2.3.tar.gz\r\ntar -zxvf redis-3.2.3.tar.gz\r\ncd redis-3.2.3\r\nmake\r\nmake PREFIX=/usr/local/redis install\r\ncp redis.conf /usr/local/redis/\r\nvi /usr/local/redis/redis.conf修改配置\r\ndaemonize yes #redis将以守护进程的方式运行，默认为no会暂用你的终端</pre>\r\n<pre>vi /etc/init.d/redis\r\nchmod +x /etc/init.d/redis</pre>\r\n<pre>chkconfig --add redis\r\nchkconfig --list redis\r\nredis 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭\r\nchkconfig redis on\r\nchkconfig --list redis\r\nredis 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</pre>\r\n<pre>#!/bin/sh\r\n#\r\n# redis Startup script for Redis Server\r\n#\r\n# chkconfig: - 80 12\r\n# description: Redis is an open source, advanced key-value store.\r\n#\r\n# processname: redis-server\r\n# config: /etc/redis.conf\r\n# pidfile: /var/run/redis.pid\r\nsource /etc/init.d/functions\r\nBIN=\"/usr/local/redis/bin\"\r\nCONFIG=\"/usr/local/redis/redis.conf\"\r\nPIDFILE=\"/var/run/redis.pid\"\r\n### Read configuration\r\n[ -r \"$SYSCONFIG\" ] &amp;&amp; source \"$SYSCONFIG\"\r\nRETVAL=0\r\nprog=\"redis-server\"\r\ndesc=\"Redis Server\"\r\nstart() {\r\n if [ -e $PIDFILE ];then\r\n echo \"$desc already running....\"\r\n exit 1\r\n fi\r\n echo -n $\"Starting $desc: \"\r\n daemon $BIN/$prog $CONFIG\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; touch /var/lock/subsys/$prog\r\n return $RETVAL\r\n}\r\nstop() {\r\n echo -n $\"Stop $desc: \"\r\n killproc $prog\r\n RETVAL=$?\r\n echo\r\n [ $RETVAL -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/$prog $PIDFILE\r\n return $RETVAL\r\n}\r\nrestart() {\r\n stop\r\n start\r\n}\r\ncase \"$1\" in\r\n start)\r\n start\r\n ;;\r\n stop)\r\n stop\r\n ;;\r\n restart)\r\n restart\r\n ;;\r\n condrestart)\r\n [ -e /var/lock/subsys/$prog ] &amp;&amp; restart\r\n RETVAL=$?\r\n ;;\r\n status)\r\n status $prog\r\n RETVAL=$?\r\n ;;\r\n *)\r\n echo $\"Usage: $0 {start|stop|restart|condrestart|status}\"\r\n RETVAL=1\r\nesac\r\nexit $RETVAL</pre>','编译安装redis','','inherit','open','open','','176-revision-v1','','','2016-09-13 07:08:46','2016-09-13 07:08:46','',176,'http://blog.raymond.com/?p=177',0,'revision','',0),(178,1,'2016-09-13 17:51:20','2016-09-13 17:51:20','CentOS 6.5自带的Pyhon版本是2.6，而阿里云的 归档服务需要升级到2.7以上\r\n因为CentOS系统中旧版本的Python已被深度依赖，所以不能卸载原有的Python，只能全新安装。\r\n<pre>yum install sqlite-devel -y</pre>\r\n<pre>wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz\r\ntar xf Python-2.7.12.tgz\r\ncd Python-2.7.12\r\n./configure --prefix=/usr/local/python\r\nmake &amp;&amp; make install</pre>\r\n创建软链接让系统python默认为新安装\r\n<pre>mv /usr/bin/python /usr/bin/pythonold\r\nln /usr/local/python/bin/python2.7 /usr/bin/python</pre>\r\n修改yum配置（否则yum无法正常运行）\r\nvi /usr/bin/yum\r\n将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/pythonold\r\n\r\n&nbsp;\r\n\r\n至此，Python升级完毕\r\n\r\n升级后导致一个问题，就是原有的 pip 不能用，\r\n\r\nTraceback (most recent call last):\r\nFile \"/usr/bin/pip\", line 7, in &lt;module&gt;\r\nfrom pip import main\r\nImportError: No module named pip\r\n\r\n原因是已经把Python升级到了2.7版本，但是pip仍然是原来的版本，很多模块都被安装在旧的python目录（/usr/lib/python2.6/site-packages/）里。直接打pip，还是使用的原来的pip。解决思路就是：应该在新的Python中安装pip，这样才不会报错。\r\n<pre>mv /usr/bin/easy_install /usr/bin/easy_install2.6\r\ncp /usr/local/python/bin/easy_install /usr/bin/easy_install</pre>\r\n然后再重新install pip\r\n<pre>easy_install pip</pre>','升级centos6.5的运行Python版本为2.7.12','','publish','open','open','','%e5%8d%87%e7%ba%a7centos6-5%e7%9a%84%e8%bf%90%e8%a1%8cpython%e7%89%88%e6%9c%ac%e4%b8%ba2-7-12','','','2016-09-13 18:48:59','2016-09-13 18:48:59','',0,'http://blog.raymond.com/?p=178',0,'post','',0),(179,1,'2016-09-13 17:51:20','2016-09-13 17:51:20','CentOS 6.5自带的Pyhon版本是2.6，而阿里云的 归档服务需要升级到2.7以上\r\n因为CentOS系统中旧版本的Python已被深度依赖，所以不能卸载原有的Python，只能全新安装。\r\n<pre>yum install sqlite-devel -y</pre>\r\n<pre>wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz\r\ntar xf Python-2.7.12.tgz\r\ncd Python-2.7.12\r\n./configure --prefix=/usr/local/python\r\nmake &amp;&amp; make install</pre>\r\n创建软链接让系统python默认为新安装\r\n<pre>mv /usr/bin/python /usr/bin/pythonold\r\nln /usr/local/python/bin/python2.7 /usr/bin/python</pre>\r\n修改yum配置（否则yum无法正常运行）\r\nvi /usr/bin/yum\r\n将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/pythonold\r\n\r\n&nbsp;\r\n\r\n至此，Python升级完毕','升级centos6.5的运行Python版本为2.7.12','','inherit','open','open','','178-revision-v1','','','2016-09-13 17:51:20','2016-09-13 17:51:20','',178,'http://blog.raymond.com/?p=179',0,'revision','',0),(180,1,'2016-09-13 18:48:59','2016-09-13 18:48:59','CentOS 6.5自带的Pyhon版本是2.6，而阿里云的 归档服务需要升级到2.7以上\r\n因为CentOS系统中旧版本的Python已被深度依赖，所以不能卸载原有的Python，只能全新安装。\r\n<pre>yum install sqlite-devel -y</pre>\r\n<pre>wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz\r\ntar xf Python-2.7.12.tgz\r\ncd Python-2.7.12\r\n./configure --prefix=/usr/local/python\r\nmake &amp;&amp; make install</pre>\r\n创建软链接让系统python默认为新安装\r\n<pre>mv /usr/bin/python /usr/bin/pythonold\r\nln /usr/local/python/bin/python2.7 /usr/bin/python</pre>\r\n修改yum配置（否则yum无法正常运行）\r\nvi /usr/bin/yum\r\n将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/pythonold\r\n\r\n&nbsp;\r\n\r\n至此，Python升级完毕\r\n\r\n升级后导致一个问题，就是原有的 pip 不能用，\r\n\r\nTraceback (most recent call last):\r\nFile \"/usr/bin/pip\", line 7, in &lt;module&gt;\r\nfrom pip import main\r\nImportError: No module named pip\r\n\r\n原因是已经把Python升级到了2.7版本，但是pip仍然是原来的版本，很多模块都被安装在旧的python目录（/usr/lib/python2.6/site-packages/）里。直接打pip，还是使用的原来的pip。解决思路就是：应该在新的Python中安装pip，这样才不会报错。\r\n<pre>mv /usr/bin/easy_install /usr/bin/easy_install2.6\r\ncp /usr/local/python/bin/easy_install /usr/bin/easy_install</pre>\r\n然后再重新install pip\r\n<pre>easy_install pip</pre>','升级centos6.5的运行Python版本为2.7.12','','inherit','open','open','','178-revision-v1','','','2016-09-13 18:48:59','2016-09-13 18:48:59','',178,'http://blog.raymond.com/?p=180',0,'revision','',0),(181,1,'2016-09-20 03:04:34','2016-09-20 03:04:34','&nbsp;\r\n\r\n1.最简单的方式，装了 selenuim IDE 之后，就可以直接在浏览器中选择该工具，录制操作。可以选择将所有的操作保存为 html 格式，然后下次要用到的时候导入就可以了。\r\n\r\n2.编写代码实现自动化测试\r\n\r\n确保安装了node之后，安装 selenium-webdriver\r\nwget https://nodejs.org/dist/v6.2.0/node-v6.2.0-linux-x64.tar.gz\r\n./npm -g install selenium-webdriver\r\n\r\n测试火狐需要安装 geckdriver\r\n复制解压到代码所在文件夹中\r\nhttps://github.com/mozilla/geckodriver/releases/download/v0.10.0/geckodriver-v0.10.0-linux64.tar.gz\r\n\r\n涉及到页面加载时间，需要用 timeout 来异步，加载 blurbird 模块\r\n./npm -g install bluebird\r\ncp -R /home/web/nodejs/node-v6.2.0-linux-x64/bin/node_modules/bluebird /usr/local/lib/node_modules/\r\n\r\n然后，就可以直接打开一个编辑器，写一段在FF自动测试的代码了\r\n<pre>var webdriver = require(\'selenium-webdriver\');\r\n\r\nvar Promise = require(\"bluebird\");\r\nvar fs = Promise.promisifyAll(require(\'fs\'));\r\n\r\nvar By = webdriver.By;\r\nvar driver = new webdriver.Builder().withCapabilities(webdriver.Capabilities.firefox()).build();\r\n\r\nfs.readFileAsync(\'huge-file.txt\').delay(1000)\r\n   .then(function(){\r\n\r\n   driver.get(\'http://rpdev.360wsp.com\');\r\n\r\n}).delay(10000).then(function(){\r\n\r\n   driver.findElement(By.className(\'login_name\')).sendKeys(\'raymond\');\r\n   driver.findElement(By.className(\'login_password\')).sendKeys(\'123456\');\r\n   driver.findElement(By.className(\'codestr\')).sendKeys(\'Rytest\');\r\n   driver.findElement(By.className(\'login_btn\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n\r\n   driver.findElement(By.className(\'jasonPopupCancelBtn\')).click();\r\n\r\n}).delay(3000).then(function(){\r\n\r\n   driver.findElement(By.className(\'orderDishes\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n\r\n   driver.findElement(By.className(\"tableItem\")).click();\r\n\r\n}).delay(3000).then(function(){\r\n\r\n   driver.findElement(By.className(\"plusBtn\")).click();\r\n   //driver.findElement(By.css(\"span .plusBtn\")).get(1).click();\r\n   //driver.findElement(By.xpath(\"//span[@class=\'plusBtn\']\")).get(1).click();\r\n\r\n}).delay(1000).then(function(){\r\n\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   driver.findElement(By.className(\"nextBtn\")).click();\r\n   driver.findElement(By.className(\"callstatus\")).click();\r\n\r\n\r\n\r\n}).delay(1000).then(function(){\r\n\r\n   //driver.findElement(By.className(\"submitBtn\")).click();\r\n   //driver.findElement(By.className(\'jasonPopupDoneBtn\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n   console.log(\'success!\');\r\n   driver.quit();\r\n\r\n}).catch(Promise.TimeoutError, function(e) {\r\n\r\n   console.log(\"rp add order error\");\r\n\r\n});</pre>\r\n&nbsp;\r\n\r\n另外，如果非本机的话，需要在自动化测试的服务器上安装selenium服务器（未测试过该方法）\r\n\r\nSelenium Server\r\n下载 Selenium Serverhttp://selenium-release.storage.googleapis.com/2.40/selenium-server-standalone-2.40.0.jar\r\n\r\n启动 Selenium Server\r\n\r\njava -jar selenium-server-standalone-2.40.0.jar','selenium使用体验','','publish','open','open','','selenium%e4%bd%bf%e7%94%a8%e4%bd%93%e9%aa%8c','','','2016-09-20 03:04:34','2016-09-20 03:04:34','',0,'http://blog.raymond.com/?p=181',0,'post','',0),(182,1,'2016-09-20 03:04:34','2016-09-20 03:04:34','&nbsp;\r\n\r\n1.最简单的方式，装了 selenuim IDE 之后，就可以直接在浏览器中选择该工具，录制操作。可以选择将所有的操作保存为 html 格式，然后下次要用到的时候导入就可以了。\r\n\r\n2.编写代码实现自动化测试\r\n\r\n确保安装了node之后，安装 selenium-webdriver\r\nwget https://nodejs.org/dist/v6.2.0/node-v6.2.0-linux-x64.tar.gz\r\n./npm -g install selenium-webdriver\r\n\r\n测试火狐需要安装 geckdriver\r\n复制解压到代码所在文件夹中\r\nhttps://github.com/mozilla/geckodriver/releases/download/v0.10.0/geckodriver-v0.10.0-linux64.tar.gz\r\n\r\n涉及到页面加载时间，需要用 timeout 来异步，加载 blurbird 模块\r\n./npm -g install bluebird\r\ncp -R /home/web/nodejs/node-v6.2.0-linux-x64/bin/node_modules/bluebird /usr/local/lib/node_modules/\r\n\r\n然后，就可以直接打开一个编辑器，写一段在FF自动测试的代码了\r\n<pre>var webdriver = require(\'selenium-webdriver\');\r\n\r\nvar Promise = require(\"bluebird\");\r\nvar fs = Promise.promisifyAll(require(\'fs\'));\r\n\r\nvar By = webdriver.By;\r\nvar driver = new webdriver.Builder().withCapabilities(webdriver.Capabilities.firefox()).build();\r\n\r\nfs.readFileAsync(\'huge-file.txt\').delay(1000)\r\n   .then(function(){\r\n\r\n   driver.get(\'http://rpdev.360wsp.com\');\r\n\r\n}).delay(10000).then(function(){\r\n\r\n   driver.findElement(By.className(\'login_name\')).sendKeys(\'raymond\');\r\n   driver.findElement(By.className(\'login_password\')).sendKeys(\'123456\');\r\n   driver.findElement(By.className(\'codestr\')).sendKeys(\'Rytest\');\r\n   driver.findElement(By.className(\'login_btn\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n\r\n   driver.findElement(By.className(\'jasonPopupCancelBtn\')).click();\r\n\r\n}).delay(3000).then(function(){\r\n\r\n   driver.findElement(By.className(\'orderDishes\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n\r\n   driver.findElement(By.className(\"tableItem\")).click();\r\n\r\n}).delay(3000).then(function(){\r\n\r\n   driver.findElement(By.className(\"plusBtn\")).click();\r\n   //driver.findElement(By.css(\"span .plusBtn\")).get(1).click();\r\n   //driver.findElement(By.xpath(\"//span[@class=\'plusBtn\']\")).get(1).click();\r\n\r\n}).delay(1000).then(function(){\r\n\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   //driver.findElement(By.className(\"plusBtn\")).get(0).click();\r\n   driver.findElement(By.className(\"nextBtn\")).click();\r\n   driver.findElement(By.className(\"callstatus\")).click();\r\n\r\n\r\n\r\n}).delay(1000).then(function(){\r\n\r\n   //driver.findElement(By.className(\"submitBtn\")).click();\r\n   //driver.findElement(By.className(\'jasonPopupDoneBtn\')).click();\r\n\r\n}).delay(5000).then(function(){\r\n   console.log(\'success!\');\r\n   driver.quit();\r\n\r\n}).catch(Promise.TimeoutError, function(e) {\r\n\r\n   console.log(\"rp add order error\");\r\n\r\n});</pre>\r\n&nbsp;\r\n\r\n另外，如果非本机的话，需要在自动化测试的服务器上安装selenium服务器（未测试过该方法）\r\n\r\nSelenium Server\r\n下载 Selenium Serverhttp://selenium-release.storage.googleapis.com/2.40/selenium-server-standalone-2.40.0.jar\r\n\r\n启动 Selenium Server\r\n\r\njava -jar selenium-server-standalone-2.40.0.jar','selenium使用体验','','inherit','open','open','','181-revision-v1','','','2016-09-20 03:04:34','2016-09-20 03:04:34','',181,'http://blog.raymond.com/?p=182',0,'revision','',0),(183,1,'2016-09-26 17:43:05','2016-09-26 17:43:05','Grunt是一个JS的构建工具，可以完成上线部署前的模块分析提取，文件压缩合并的工作。\r\n\r\n工作原理：\r\n每次 grunt 执行时，都通过 node 的require()引入本地的Grunt模块，然后 CLI 就会读取Gruntfile 中的内容，执行所有定义好的任务。\r\nGrunt执行的源码只有四十多行。源码地址： https://github.com/gruntjs/grunt-cli/blob/master/bin/grunt\r\n\r\n使用方法：\r\n安装 node 和 npm，之后安装 grunt-cli( npm install -g grunt-cli )\r\n在grunt项目的根目录下添加配置文件 package.json（项目的npm安装元数据） 和 Gruntfile.js/Gruntfile.coffee（grunt的配置，定义每个任务的细节和任务执行顺序）\r\n然后进入项目目录，npm install grunt --save-dev ，则npm会根据 package.json 中devDependencies的配置将需要的grunt及插件下载到项目目录中（加载其他模块方法类似）\r\n进入项目所在目录，命令行输入 grunt 执行\r\n\r\npackage.json：\r\n{\r\n#name+version 必须是npm平台上唯一的，可以在 https://www.npmjs.com 查询唯一性\r\n\"name\": \"my-project-name\",//项目名称(1~214字符，不可以 . 和 _ 开头，不可以包含非法url字符)\r\n\"version\": \"0.1.0\",//项目版本\r\n\"description\":\"描述信息\",\r\n\"keywords\":\"关键词\",//description 和 keywords 都是npm search 的标准字段\r\n\"author\":{//作者，也可以是字符串\r\n\"name\": \"test\",\r\n\"email\": \"my@test.cn\",\r\n\"url\": \"http://www.test.com\"\r\n}\r\n\"dependencies\" ://包发布后正常执行时所需要的依赖\r\n{ \"foo\" : \"1.0.0 - 2.9999.9999\"\r\n, \"bar\" : \"&gt;=1.0.2 &lt;2.1.2\"\r\n, \"baz\" : \"&gt;1.0.2 &lt;=2.3.4\"\r\n, \"boo\" : \"2.0.1\"\r\n, \"qux\" : \"&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0\"\r\n, \"asd\" : \"http://asdf.com/asdf.tar.gz\"\r\n, \"til\" : \"~1.2\"\r\n, \"elf\" : \"~1.2.3\"\r\n, \"two\" : \"2.x\"\r\n, \"thr\" : \"3.3.x\"\r\n, \"lat\" : \"latest\"\r\n, \"dyl\" : \"file:../dyl\"\r\n}\r\n\"devDependencies\": {//开发时候需要的依赖\r\n\"grunt\": \"~0.4.5\",\r\n\"grunt-contrib-jshint\": \"~0.10.0\",\r\n\"grunt-contrib-nodeunit\": \"~0.4.1\",\r\n\"grunt-contrib-uglify\": \"~0.5.0\"\r\n}\r\n}\r\n\r\n还有很多字段没列出来，详细信息可见官网：https://docs.npmjs.com/files/package.json\r\n\r\n可以用 --save-dev 快速添加package.json配置信息\r\n例如：使用 npm install &lt;module&gt; --save-dev 命令安装模块，在安装完模块的同时，也会自动把模块信息添加到 package.json 中的 devDependencies 中。\r\n\r\nGruntfile.js：\r\nmodule.exports = function(grunt) {\r\ngrunt.initConfig({//grunt配置的主体\r\n#将配置文件转换为json对象并读出,以后在其它任务中可以用pkg.XXX读取package.json的值\r\npkg: grunt.file.readJSON(\'package.json\');\r\n\r\n#添加任务\r\ntransport: {\r\ndialog: {\r\nfiles : [\r\n{\r\nsrc : \'*\',\r\ndest : \'.build/styles/component/dialog/src\'\r\n}\r\n]\r\n}\r\n},\r\nconcat: {\r\ndialog: {\r\nfiles: {\r\n\"dist/styles/component/dialog/src/dialog.js\": [\".build/styles/component/dialog/src/dialog.js\"]\r\n}\r\n}\r\n},\r\nuglify: {\r\noptions: {\r\nbanner: \'/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(\"yyyy-mm-dd\") %&gt; */\\n\'\r\n}\r\n}\r\n\r\ntask[任务名称]:{\r\nTarget[目标]:{\r\nfiles[需要执行的文件]:{\r\nsrc[执行源文件]：\r\ndest[生成目标文件]:\r\n}\r\n}\r\n);\r\n\r\n#加载grunt需要的插件：\r\ngrunt.loadNpmTasks(\'grunt-cmd-transport\');\r\ngrunt.loadNpmTasks(\'grunt-cmd-concat\');\r\ngrunt.loadNpmTasks(\'grunt-contrib-uglify\');\r\n\r\n#最后，告诉grunt该怎么执行这些任务\r\ngrunt.registerTask(\'build\', [\'transport\', \'concat\',\'uglify\']);\r\n};\r\n}','Grunt简介','','publish','open','open','','grunt%e7%ae%80%e4%bb%8b','','','2016-09-26 17:43:05','2016-09-26 17:43:05','',0,'http://blog.raymond.com/?p=183',0,'post','',0),(184,1,'2016-09-26 17:43:05','2016-09-26 17:43:05','Grunt是一个JS的构建工具，可以完成上线部署前的模块分析提取，文件压缩合并的工作。\r\n\r\n工作原理：\r\n每次 grunt 执行时，都通过 node 的require()引入本地的Grunt模块，然后 CLI 就会读取Gruntfile 中的内容，执行所有定义好的任务。\r\nGrunt执行的源码只有四十多行。源码地址： https://github.com/gruntjs/grunt-cli/blob/master/bin/grunt\r\n\r\n使用方法：\r\n安装 node 和 npm，之后安装 grunt-cli( npm install -g grunt-cli )\r\n在grunt项目的根目录下添加配置文件 package.json（项目的npm安装元数据） 和 Gruntfile.js/Gruntfile.coffee（grunt的配置，定义每个任务的细节和任务执行顺序）\r\n然后进入项目目录，npm install grunt --save-dev ，则npm会根据 package.json 中devDependencies的配置将需要的grunt及插件下载到项目目录中（加载其他模块方法类似）\r\n进入项目所在目录，命令行输入 grunt 执行\r\n\r\npackage.json：\r\n{\r\n#name+version 必须是npm平台上唯一的，可以在 https://www.npmjs.com 查询唯一性\r\n\"name\": \"my-project-name\",//项目名称(1~214字符，不可以 . 和 _ 开头，不可以包含非法url字符)\r\n\"version\": \"0.1.0\",//项目版本\r\n\"description\":\"描述信息\",\r\n\"keywords\":\"关键词\",//description 和 keywords 都是npm search 的标准字段\r\n\"author\":{//作者，也可以是字符串\r\n\"name\": \"test\",\r\n\"email\": \"my@test.cn\",\r\n\"url\": \"http://www.test.com\"\r\n}\r\n\"dependencies\" ://包发布后正常执行时所需要的依赖\r\n{ \"foo\" : \"1.0.0 - 2.9999.9999\"\r\n, \"bar\" : \"&gt;=1.0.2 &lt;2.1.2\"\r\n, \"baz\" : \"&gt;1.0.2 &lt;=2.3.4\"\r\n, \"boo\" : \"2.0.1\"\r\n, \"qux\" : \"&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0\"\r\n, \"asd\" : \"http://asdf.com/asdf.tar.gz\"\r\n, \"til\" : \"~1.2\"\r\n, \"elf\" : \"~1.2.3\"\r\n, \"two\" : \"2.x\"\r\n, \"thr\" : \"3.3.x\"\r\n, \"lat\" : \"latest\"\r\n, \"dyl\" : \"file:../dyl\"\r\n}\r\n\"devDependencies\": {//开发时候需要的依赖\r\n\"grunt\": \"~0.4.5\",\r\n\"grunt-contrib-jshint\": \"~0.10.0\",\r\n\"grunt-contrib-nodeunit\": \"~0.4.1\",\r\n\"grunt-contrib-uglify\": \"~0.5.0\"\r\n}\r\n}\r\n\r\n还有很多字段没列出来，详细信息可见官网：https://docs.npmjs.com/files/package.json\r\n\r\n可以用 --save-dev 快速添加package.json配置信息\r\n例如：使用 npm install &lt;module&gt; --save-dev 命令安装模块，在安装完模块的同时，也会自动把模块信息添加到 package.json 中的 devDependencies 中。\r\n\r\nGruntfile.js：\r\nmodule.exports = function(grunt) {\r\ngrunt.initConfig({//grunt配置的主体\r\n#将配置文件转换为json对象并读出,以后在其它任务中可以用pkg.XXX读取package.json的值\r\npkg: grunt.file.readJSON(\'package.json\');\r\n\r\n#添加任务\r\ntransport: {\r\ndialog: {\r\nfiles : [\r\n{\r\nsrc : \'*\',\r\ndest : \'.build/styles/component/dialog/src\'\r\n}\r\n]\r\n}\r\n},\r\nconcat: {\r\ndialog: {\r\nfiles: {\r\n\"dist/styles/component/dialog/src/dialog.js\": [\".build/styles/component/dialog/src/dialog.js\"]\r\n}\r\n}\r\n},\r\nuglify: {\r\noptions: {\r\nbanner: \'/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(\"yyyy-mm-dd\") %&gt; */\\n\'\r\n}\r\n}\r\n\r\ntask[任务名称]:{\r\nTarget[目标]:{\r\nfiles[需要执行的文件]:{\r\nsrc[执行源文件]：\r\ndest[生成目标文件]:\r\n}\r\n}\r\n);\r\n\r\n#加载grunt需要的插件：\r\ngrunt.loadNpmTasks(\'grunt-cmd-transport\');\r\ngrunt.loadNpmTasks(\'grunt-cmd-concat\');\r\ngrunt.loadNpmTasks(\'grunt-contrib-uglify\');\r\n\r\n#最后，告诉grunt该怎么执行这些任务\r\ngrunt.registerTask(\'build\', [\'transport\', \'concat\',\'uglify\']);\r\n};\r\n}','Grunt简介','','inherit','open','open','','183-revision-v1','','','2016-09-26 17:43:05','2016-09-26 17:43:05','',183,'http://blog.raymond.com/?p=184',0,'revision','',0),(207,1,'2016-12-12 12:00:16','2016-12-12 12:00:16','<strong>mysql API</strong>\r\n\r\n直接调用MYSQL API中的函数，连接数据库用mysql_connect,查询用mysql_query，还有用到其他函数包括mysql_select_db，mysql_set_charset，mysql_fetch_array，mysql_fetch_row，mysql_fetch_fields，mysql_insert_id等\r\n\r\n在PHP5之后，用<strong>Mysqli</strong> 代替了原生的Mysql_api\r\n\r\nMysqli和Mysql API函数变化不大，几本都是把mysql换成了mysqli，mysqli_connect，mysqli_select_db，mysqli_set_charset，mysqli_query等，最大的差别是每个函数都必须带上mysql连接句柄。这种mysqli用法依旧是面向过程的。\r\n\r\n另外，同时可以以把mysqli_connect保存在一个实例变量中，按照操作对象的风格执行函数，$link-&gt;select_db($link,$bd[\'dbname\']) ; $link-&gt;query(); $link-&gt;affetced_rows;$link-&gt;fetch_assoc();\r\n\r\n不过Mysqli不支持事务，仅支持Mysql，不安全，不支持异常处理等。缺陷依旧很明显。\r\n\r\n<strong>PHP5.5 后出现了PDO扩展类库</strong>，为PHP操作数据库提供了一致轻量级的接口。使用DSN连接，可以支持众多的数据库。\r\n\r\n连接数据库变成了，$db=new PDO($db[\'dsn\'],$db[\'username\'],$db[\'passwd\'],$options);\r\n<pre>$stmt = $db-&gt;query(\'select * from user limit 1\');\r\n$rows = $stmt-&gt;fetchAll();\r\n\r\n$db-&gt;exec(\'delete from user where status=0\');\r\n\r\n$db-&gt;prepare(\'select * from user where name=?\');\r\n$db-&gt;bindValue(1,\'aa\');\r\n$db-&gt;execute();</pre>\r\nPDO还支持事务，\r\n<pre>$db-&gt;beginTransaction();\r\n$db-&gt;commit();\r\n$db-&gt;rollBack();</pre>\r\n不过，PDO同样也是存在问题的。程序员需要针对不同的数据源建立不同的PDO，然后将各种数据组合成业务数据。需要编写原生的sql语句。这样都是很麻烦切存在风险的。于是，就衍生出了一个<strong>ORM的概念</strong>。\r\n\r\nORM是 Object Relation Mapping，是将数据关系映射成对象，让程序员可以以OOP的方法操作数据。\r\n\r\n目前的ORM更多的是结合非持久化数据库来使用的，常见的ORM包括Medoo，Eloquent ORM，AR等','PHP操作数据库演变','','publish','open','open','','php%e6%93%8d%e4%bd%9c%e6%95%b0%e6%8d%ae%e5%ba%93%e6%bc%94%e5%8f%98','','','2016-12-12 12:00:16','2016-12-12 12:00:16','',0,'http://blog.mflysys.com/?p=207',0,'post','',0),(208,1,'2016-12-12 12:00:16','2016-12-12 12:00:16','<strong>mysql API</strong>\r\n\r\n直接调用MYSQL API中的函数，连接数据库用mysql_connect,查询用mysql_query，还有用到其他函数包括mysql_select_db，mysql_set_charset，mysql_fetch_array，mysql_fetch_row，mysql_fetch_fields，mysql_insert_id等\r\n\r\n在PHP5之后，用<strong>Mysqli</strong> 代替了原生的Mysql_api\r\n\r\nMysqli和Mysql API函数变化不大，几本都是把mysql换成了mysqli，mysqli_connect，mysqli_select_db，mysqli_set_charset，mysqli_query等，最大的差别是每个函数都必须带上mysql连接句柄。这种mysqli用法依旧是面向过程的。\r\n\r\n另外，同时可以以把mysqli_connect保存在一个实例变量中，按照操作对象的风格执行函数，$link-&gt;select_db($link,$bd[\'dbname\']) ; $link-&gt;query(); $link-&gt;affetced_rows;$link-&gt;fetch_assoc();\r\n\r\n不过Mysqli不支持事务，仅支持Mysql，不安全，不支持异常处理等。缺陷依旧很明显。\r\n\r\n<strong>PHP5.5 后出现了PDO扩展类库</strong>，为PHP操作数据库提供了一致轻量级的接口。使用DSN连接，可以支持众多的数据库。\r\n\r\n连接数据库变成了，$db=new PDO($db[\'dsn\'],$db[\'username\'],$db[\'passwd\'],$options);\r\n<pre>$stmt = $db-&gt;query(\'select * from user limit 1\');\r\n$rows = $stmt-&gt;fetchAll();\r\n\r\n$db-&gt;exec(\'delete from user where status=0\');\r\n\r\n$db-&gt;prepare(\'select * from user where name=?\');\r\n$db-&gt;bindValue(1,\'aa\');\r\n$db-&gt;execute();</pre>\r\nPDO还支持事务，\r\n<pre>$db-&gt;beginTransaction();\r\n$db-&gt;commit();\r\n$db-&gt;rollBack();</pre>\r\n不过，PDO同样也是存在问题的。程序员需要针对不同的数据源建立不同的PDO，然后将各种数据组合成业务数据。需要编写原生的sql语句。这样都是很麻烦切存在风险的。于是，就衍生出了一个<strong>ORM的概念</strong>。\r\n\r\nORM是 Object Relation Mapping，是将数据关系映射成对象，让程序员可以以OOP的方法操作数据。\r\n\r\n目前的ORM更多的是结合非持久化数据库来使用的，常见的ORM包括Medoo，Eloquent ORM，AR等','PHP操作数据库演变','','inherit','open','open','','207-revision-v1','','','2016-12-12 12:00:16','2016-12-12 12:00:16','',207,'http://blog.mflysys.com/?p=208',0,'revision','',0),(209,1,'2016-12-16 16:23:46','2016-12-16 16:23:46','<strong>netstat -tupln</strong> 或者 <strong>netstat -pln</strong>\r\n\r\n参数说明：\r\n<ol>\r\n	<li>-t : 指明显示TCP端口</li>\r\n	<li>-u : 指明显示UDP端口</li>\r\n	<li>-p : 显示进程ID(PID)和程序名称，每一个套接字/端口都属于一个程序.</li>\r\n	<li>-l  : 仅显示监听套接字 -- 所谓套接字就是使应用程序能够读写与收发通讯协议(protocol)与资料的程序</li>\r\n	<li>-n : 不进行DNS轮询(可以加速操作)</li>\r\n</ol>\r\n另外还可以用 <strong>cat /etc/services</strong>，显示结果的第一列是daemon名称，第二列是使用的端口号和协议，\r\n\r\ntcpmux 1/tcp # TCP port service multiplexer\r\necho 7/tcp\r\necho 7/udp\r\ndiscard 9/tcp sink null\r\ndiscard 9/udp sink null\r\nsystat 11/tcp users\r\ndaytime 13/tcp\r\ndaytime 13/udp\r\nnetstat 15/tcp\r\nqotd 17/tcp quote\r\nmsp 18/tcp # message send protocol\r\nmsp 18/udp\r\nchargen 19/tcp ttytst source\r\nchargen 19/udp ttytst source\r\nftp-data 20/tcp\r\nftp 21/tcp\r\nfsp 21/udp fspd\r\nssh 22/tcp # SSH Remote Login Protocol','Linux查看网络使用情况，端口占用情况的命令','','publish','open','open','','linux%e6%9f%a5%e7%9c%8b%e7%bd%91%e7%bb%9c%e4%bd%bf%e7%94%a8%e6%83%85%e5%86%b5%ef%bc%8c%e7%ab%af%e5%8f%a3%e5%8d%a0%e7%94%a8%e6%83%85%e5%86%b5%e7%9a%84%e5%91%bd%e4%bb%a4','','','2016-12-16 16:23:46','2016-12-16 16:23:46','',0,'http://blog.mflysys.com/?p=209',0,'post','',0),(210,1,'2016-12-16 16:23:46','2016-12-16 16:23:46','<strong>netstat -tupln</strong> 或者 <strong>netstat -pln</strong>\r\n\r\n参数说明：\r\n<ol>\r\n	<li>-t : 指明显示TCP端口</li>\r\n	<li>-u : 指明显示UDP端口</li>\r\n	<li>-p : 显示进程ID(PID)和程序名称，每一个套接字/端口都属于一个程序.</li>\r\n	<li>-l  : 仅显示监听套接字 -- 所谓套接字就是使应用程序能够读写与收发通讯协议(protocol)与资料的程序</li>\r\n	<li>-n : 不进行DNS轮询(可以加速操作)</li>\r\n</ol>\r\n另外还可以用 <strong>cat /etc/services</strong>，显示结果的第一列是daemon名称，第二列是使用的端口号和协议，\r\n\r\ntcpmux 1/tcp # TCP port service multiplexer\r\necho 7/tcp\r\necho 7/udp\r\ndiscard 9/tcp sink null\r\ndiscard 9/udp sink null\r\nsystat 11/tcp users\r\ndaytime 13/tcp\r\ndaytime 13/udp\r\nnetstat 15/tcp\r\nqotd 17/tcp quote\r\nmsp 18/tcp # message send protocol\r\nmsp 18/udp\r\nchargen 19/tcp ttytst source\r\nchargen 19/udp ttytst source\r\nftp-data 20/tcp\r\nftp 21/tcp\r\nfsp 21/udp fspd\r\nssh 22/tcp # SSH Remote Login Protocol','Linux查看网络使用情况，端口占用情况的命令','','inherit','open','open','','209-revision-v1','','','2016-12-16 16:23:46','2016-12-16 16:23:46','',209,'http://blog.mflysys.com/?p=210',0,'revision','',0),(211,1,'2016-12-16 16:30:57','2016-12-16 16:30:57','# Default runlevel. The runlevels used by RHS are:\r\n\r\n#   0 - halt (Do NOT set initdefault to this)\r\n\r\n#   1 - Single user mode\r\n\r\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\r\n\r\n#   3 - Full multiuser mode\r\n\r\n#   4 - unused\r\n\r\n#   5 - X11\r\n\r\n#   6 - reboot (Do NOT set initdefault to this)\r\n\r\n1.级别 0\r\n\r\n系统停止。注意不要把该级别设置为默认模式，否则系统每次启动以后就会自动停止，无法进入。\r\n\r\n这个运行级别主要用于关闭任务，在 rc0.d 目录下的各个连接命令都是此级别的命令。在关闭时，这些命令逐个执行。它们将杀掉所有进程、关闭虚拟内存和交换文件、卸载文件系统和交换分区。\r\n\r\n关机操作在 DOS 下和 Linux 下截然不同。在 DOS 提示符下，可以很放心地直接关闭电源。但是，在 Linux 下不能这么做。Linux 的文件系统在启动时被装入，在关闭时要被卸载。这种差别正是 Linux 强大功能的前提。\r\n\r\n在 Linux 下，要通过输入命令 shutdown 加上参数来关闭、重启计算机或者通过按下热键“Ctrl”+“Alt”+“Del”来重新启动。\r\n\r\n2.级别 1\r\n\r\n单用户模式。该模式只能许可一个用户从本地计算机上登录 rc1.d 目录下的所有文件与此运行级别相连。此运行级别一般用于系统管理与维护,如：给 Linux 系统升级，安装新软件等等。\r\n\r\n在此模式下，只能由管理员进入而其他用户无法登录。因为在启动时，文件系统被加载但是网络却没有被加载，无法通过网络登录。\r\n\r\n3.级别 2\r\n\r\n多用户模式。用户可以通过网络进行登录。在不支持网络的情况下该模式和模式 3 是相的，rc2.d 目录下所有文件与此级别相连。\r\n\r\n4.级别 3\r\n\r\n完全多用户模式。这是缺省的运行模式，在此模式下所有网络服务程序一起运行。rc3.d录下的文件与此级别相连。\r\n\r\n5.级别 4\r\n\r\n未使用模式，rc4.d 目录与此级别相连。这一级别是用户自定义的运行级别，用户可以根需要自己定义。如果想运行此级别的话，必须在 rc3.d 目录下放入连接文件，就像其他 rc*.d目录下的文件，并指明是启动还是终止进程。\r\n\r\n6.级别 5\r\n\r\n在 Linux 下运行 X  Window 就是使用这一级别。在此级别下除了因特网的域名服务器的named 与级别 3 不同，其余的都相同。\r\n\r\n7.级别 6\r\n\r\n这是个重新启动系统的运行级别。rc6.d 目录与此级别相连。既然是重新启动也就是关闭当前系统，但不关闭电源，所以此目录下的连接与级别为 0 的在 rc0.d 下的连接基本相同。不同之处在于，虽然它们都执行 halt（关闭）命令，但是给 halt 传递的参数不一样，因而级别 6 能够重新启动系统。','Linux启动和运行级别','','publish','open','open','','linux%e5%90%af%e5%8a%a8%e5%92%8c%e8%bf%90%e8%a1%8c%e7%ba%a7%e5%88%ab','','','2016-12-16 16:30:57','2016-12-16 16:30:57','',0,'http://blog.mflysys.com/?p=211',0,'post','',0),(188,1,'2016-10-14 10:48:59','2016-10-14 10:48:59','YII应用配置文件存放在项目下的 config 文件夹内：console.php 对应命令行应用，web.php对应web应用\r\n<pre><span style=\"color: #000000;\"><strong>$config = [</strong></span>\r\n \'id\' =&gt;<span style=\"color: #3366ff;\"><em> \'basic\'</em></span>,<span style=\"color: #008000;\">//用来区分其他应用的唯一标识ID</span>\r\n \'basePath\' =&gt; <em><span style=\"color: #3366ff;\">dirname(__DIR__)</span></em>,<span style=\"color: #008000;\">//应用的根目录，包含MVC设计模式的models, views, controllers等子目录，系统预定义 @app 代表这个路径</span>\r\n \'aliases\' =&gt; <span style=\"color: #3366ff;\"><em>[</em></span><span style=\"color: #008000;\">//路径别名</span>\r\n<em><span style=\"color: #3366ff;\"> \'@admin\' =&gt; \'path/to/Raymond\'</span></em>\r\n<em><span style=\"color: #3366ff;\"> ]</span></em>\r\n \'bootstrap\' =&gt;<em><span style=\"color: #3366ff;\"> [\'log\']</span></em>,<span style=\"color: #008000;\">//数组指定启动阶段 yii\\base\\Application::bootstrap()需要运行的组件</span>\r\n \'catchAll\' =&gt; <em><span style=\"color: #3366ff;\">[</span></em><span style=\"color: #008000;\">//指定一个处理所有用户请求的控制器方法，通常在项目维护模式下启用。该属性只适用于web应用</span>\r\n<span style=\"color: #3366ff;\"><em> \'offline/notice\',</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'param1\' =&gt; \'value\'</em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>\r\n \'components\' =&gt;<span style=\"color: #3366ff;\"> [</span><span style=\"color: #008000;\">//注册多个在其他地方使用的应用组件</span>\r\n <em><span style=\"color: #3366ff;\">\'request\' =&gt; [</span></em>\r\n <span style=\"color: #008000;\">// !!! insert a secret key in the following (if it is empty) - this is required by cookie</span> <em><span style=\"color: #3366ff;\">validation</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'cookieValidationKey\' =&gt; \'raymondSvNScq\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'cache\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'class\' =&gt; \'yii\\caching\\FileCache\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'user\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'identityClass\' =&gt; \'app\\models\\User\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'enableAutoLogin\' =&gt; true,</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'errorHandler\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'errorAction\' =&gt; \'site/error\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'mailer\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'class\' =&gt; \'yii\\swiftmailer\\Mailer\',</span></em>\r\n <span style=\"color: #008000;\">// send all mails to a file by default. You have to set</span>\r\n<span style=\"color: #008000;\"> // \'useFileTransport\' to false and configure a transport</span>\r\n<span style=\"color: #008000;\"> // for the mailer to send real emails.</span>\r\n<span style=\"color: #3366ff;\"><em> \'useFileTransport\' =&gt; true,</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'log\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'traceLevel\' =&gt; YII_DEBUG ? 3 : 0,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'targets\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'class\' =&gt; \'yii\\log\\FileTarget\',</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'levels\' =&gt; [\'error\', \'warning\'],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'db\' =&gt; require(__DIR__ . \'/db.php\'),</em></span>\r\n<span style=\"color: #3366ff;\"><em> /*</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'urlManager\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'enablePrettyUrl\' =&gt; true,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'showScriptName\' =&gt; false,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'rules\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> */</em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>,\r\n \'controllerMap\' =&gt; <em><span style=\"color: #3366ff;\">[</span></em><span style=\"color: #008000;\">//定义一个类的特殊路径，默认情况下YII用 app\\controllers\\类名Controller来路由</span>\r\n<span style=\"color: #3366ff;\"><em> \'account\' =&gt; \'app\\controllers\\UserController\' </em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>,\r\n \'controllerNamespace\' =&gt; <em><span style=\"color: #3366ff;\">\'app\\controllers\\admin\'</span></em>,<span style=\"color: #008000;\">//定义控制类文件默认的命名空间。默认情况下 YII 用 app\\controllers</span>\r\n \'language\' =&gt; <em><span style=\"color: #3366ff;\">\'en\'</span></em>,<span style=\"color: #008000;\">//项目展示的语言</span>\r\n \'timeZone\' =&gt; <em><span style=\"color: #3366ff;\">\'Asia/Shanghai\'</span></em>,<span style=\"color: #008000;\">//默认时区，本质上是调用 PHP 方法 date_default_timezone_set()</span> \r\n \'charset\' =&gt;<em><span style=\"color: #3366ff;\"> \'UTF-8\'</span></em>,<span style=\"color: #008000;\">//应用字符集，默认UTF-8</span>\r\n \'defaultRoute\' =&gt;<em><span style=\"color: #3366ff;\"> \'welcome/index\'</span></em>,<span style=\"color: #008000;\">//默认路由</span>\r\n \'extensions\' =&gt; <span style=\"color: #3366ff;\">[</span><span style=\"color: #008000;\">//应用扩展，默认使用@vendor/yiisoft/extensions.php文件返回的数组</span>\r\n<span style=\"color: #3366ff;\"> ],</span>\r\n \'layout\' =&gt; <em><span style=\"color: #3366ff;\">\'admin\'</span></em>,<span style=\"color: #008000;\">//默认视图文件，默认文件为main，对应@app/views/layouts/main.php。如果不想使用视图可以用 false</span>\r\n \'layoutPath\' =&gt;<em><span style=\"color: #3366ff;\"> \'@app/views/layouts/admin/\'</span></em>,<span style=\"color: #008000;\">//默认视图文件存放目录</span>\r\n \'runtimePath\' =&gt; <em><span style=\"color: #3366ff;\">\'@app/runtime/admin\'</span></em>,<span style=\"color: #008000;\">//临时文件如日志文件、缓存文件等保存路径，Yii预定义别名 @runtime 代表该路径</span>\r\n \'vendorPath\' =&gt; <em><span style=\"color: #3366ff;\">\'@app/vendor\'</span></em>,<span style=\"color: #008000;\">//指定 Composer 管理的供应商路径， 该路径包含应用使用的包括 Yii 框架在内的所有第三方库。 默认值为 @app/vendor</span>\r\n \'enableCoreCommands\' =&gt;<em><span style=\"color: #3366ff;\"> true</span></em>,<span style=\"color: #008000;\">//仅 yii\\console\\Application 控制台应用支持， 用来指定是否启用Yii中的核心命令，默认值为 true</span>\r\n \r\n<span style=\"color: #008000;\"> //定义应用处理过程中的执行事件</span>\r\n EVENT_BEFORE_REQUEST =&gt;<em><span style=\"color: #3366ff;\"> function($event){}</span></em>,<span style=\"color: #008000;\">//on beforeRequest,接收到请求开始处理前</span>\r\n EVENT_AFTER_REQUEST =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on afterRequest,应用处理请求after之后但在返回响应before之前触发</span>\r\n EVENT_BEFORE_ACTION =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on beforeAction,每个 控制器动作 运行before之前会被触发</span>\r\n EVENT_AFTER_ACTION =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on afterAction,每个 控制器动作 运行after之后会被触发</span>\r\n \'params\' =&gt; <span style=\"color: #3366ff;\"><em>$params</em></span>,\r\n<span style=\"color: #000000;\">];</span></pre>','YII Application配置文件详解','','publish','open','open','','yii-application%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e8%af%a6%e8%a7%a3','','','2016-10-14 10:48:59','2016-10-14 10:48:59','',0,'http://blog.raymond.com/?p=188',0,'post','',0),(212,1,'2016-12-16 16:30:57','2016-12-16 16:30:57','# Default runlevel. The runlevels used by RHS are:\r\n\r\n#   0 - halt (Do NOT set initdefault to this)\r\n\r\n#   1 - Single user mode\r\n\r\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\r\n\r\n#   3 - Full multiuser mode\r\n\r\n#   4 - unused\r\n\r\n#   5 - X11\r\n\r\n#   6 - reboot (Do NOT set initdefault to this)\r\n\r\n1.级别 0\r\n\r\n系统停止。注意不要把该级别设置为默认模式，否则系统每次启动以后就会自动停止，无法进入。\r\n\r\n这个运行级别主要用于关闭任务，在 rc0.d 目录下的各个连接命令都是此级别的命令。在关闭时，这些命令逐个执行。它们将杀掉所有进程、关闭虚拟内存和交换文件、卸载文件系统和交换分区。\r\n\r\n关机操作在 DOS 下和 Linux 下截然不同。在 DOS 提示符下，可以很放心地直接关闭电源。但是，在 Linux 下不能这么做。Linux 的文件系统在启动时被装入，在关闭时要被卸载。这种差别正是 Linux 强大功能的前提。\r\n\r\n在 Linux 下，要通过输入命令 shutdown 加上参数来关闭、重启计算机或者通过按下热键“Ctrl”+“Alt”+“Del”来重新启动。\r\n\r\n2.级别 1\r\n\r\n单用户模式。该模式只能许可一个用户从本地计算机上登录 rc1.d 目录下的所有文件与此运行级别相连。此运行级别一般用于系统管理与维护,如：给 Linux 系统升级，安装新软件等等。\r\n\r\n在此模式下，只能由管理员进入而其他用户无法登录。因为在启动时，文件系统被加载但是网络却没有被加载，无法通过网络登录。\r\n\r\n3.级别 2\r\n\r\n多用户模式。用户可以通过网络进行登录。在不支持网络的情况下该模式和模式 3 是相的，rc2.d 目录下所有文件与此级别相连。\r\n\r\n4.级别 3\r\n\r\n完全多用户模式。这是缺省的运行模式，在此模式下所有网络服务程序一起运行。rc3.d录下的文件与此级别相连。\r\n\r\n5.级别 4\r\n\r\n未使用模式，rc4.d 目录与此级别相连。这一级别是用户自定义的运行级别，用户可以根需要自己定义。如果想运行此级别的话，必须在 rc3.d 目录下放入连接文件，就像其他 rc*.d目录下的文件，并指明是启动还是终止进程。\r\n\r\n6.级别 5\r\n\r\n在 Linux 下运行 X  Window 就是使用这一级别。在此级别下除了因特网的域名服务器的named 与级别 3 不同，其余的都相同。\r\n\r\n7.级别 6\r\n\r\n这是个重新启动系统的运行级别。rc6.d 目录与此级别相连。既然是重新启动也就是关闭当前系统，但不关闭电源，所以此目录下的连接与级别为 0 的在 rc0.d 下的连接基本相同。不同之处在于，虽然它们都执行 halt（关闭）命令，但是给 halt 传递的参数不一样，因而级别 6 能够重新启动系统。','Linux启动和运行级别','','inherit','open','open','','211-revision-v1','','','2016-12-16 16:30:57','2016-12-16 16:30:57','',211,'http://blog.mflysys.com/?p=212',0,'revision','',0),(213,1,'2016-12-16 16:35:59','2016-12-16 16:35:59','<p class=\"simpara\">什么是命名空间？从广义上来说，命名空间是一种封装事物的方法。在很多地方都可以见到这种抽象概念。例如，在操作系统中目录用来将相关文件分组，对于目录中的文件来说，它就扮演了命名空间的角色。具体举个例子，文件 <em>foo.txt</em> 可以同时在目录<em>/home/greg</em> 和 <em>/home/other</em> 中存在，但在同一个目录中不能存在两个 <em>foo.txt</em> 文件。另外，在目录 <em>/home/greg</em> 外访问 <em>foo.txt</em> 文件时，我们必须将目录名以及目录分隔符放在文件名之前得到 <em>/home/greg/foo.txt</em>。这个原理应用到程序设计领域就是命名空间的概念。</p>\r\n<p class=\"simpara\">在PHP中，命名空间用来解决在编写类库或应用程序时创建可重用的代码如类或函数时碰到的两类问题：</p>\r\n\r\n<ol type=\"1\">\r\n	<li class=\"listitem\"><span class=\"simpara\">用户编写的代码与PHP内部的类/函数/常量或第三方类/函数/常量之间的名字冲突。</span></li>\r\n	<li class=\"listitem\"><span class=\"simpara\">为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。</span></li>\r\n</ol>','PHP命名空间的好处','','publish','open','open','','php%e5%91%bd%e5%90%8d%e7%a9%ba%e9%97%b4%e7%9a%84%e5%a5%bd%e5%a4%84','','','2016-12-16 16:35:59','2016-12-16 16:35:59','',0,'http://blog.mflysys.com/?p=213',0,'post','',0),(214,1,'2016-12-16 16:35:59','2016-12-16 16:35:59','<p class=\"simpara\">什么是命名空间？从广义上来说，命名空间是一种封装事物的方法。在很多地方都可以见到这种抽象概念。例如，在操作系统中目录用来将相关文件分组，对于目录中的文件来说，它就扮演了命名空间的角色。具体举个例子，文件 <em>foo.txt</em> 可以同时在目录<em>/home/greg</em> 和 <em>/home/other</em> 中存在，但在同一个目录中不能存在两个 <em>foo.txt</em> 文件。另外，在目录 <em>/home/greg</em> 外访问 <em>foo.txt</em> 文件时，我们必须将目录名以及目录分隔符放在文件名之前得到 <em>/home/greg/foo.txt</em>。这个原理应用到程序设计领域就是命名空间的概念。</p>\r\n<p class=\"simpara\">在PHP中，命名空间用来解决在编写类库或应用程序时创建可重用的代码如类或函数时碰到的两类问题：</p>\r\n\r\n<ol type=\"1\">\r\n	<li class=\"listitem\"><span class=\"simpara\">用户编写的代码与PHP内部的类/函数/常量或第三方类/函数/常量之间的名字冲突。</span></li>\r\n	<li class=\"listitem\"><span class=\"simpara\">为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。</span></li>\r\n</ol>','PHP命名空间的好处','','inherit','open','open','','213-revision-v1','','','2016-12-16 16:35:59','2016-12-16 16:35:59','',213,'http://blog.mflysys.com/?p=214',0,'revision','',0),(215,1,'2016-12-16 16:41:43','2016-12-16 16:41:43','1、在实际项目中， 如果某个字段的字符长度比较短此时一般是采用固定字符长度。\r\n\r\n2、字段的长度固定或相近比较 适合采用CHAR字符类型\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n根据上面的分析，我们知道VARCHAR数据类型是一把双刃剑，其在带来性能提升的同时，也可能会存在着一些额外的消耗。我们在评估到底是使用VARCHAR数据类型还是采用CHAR数据类型时，就需要进行均衡。在实际项目中，我们会考量如下情况。\r\n\r\n一是根据字符的长度来判断。如某个字段，像人的名字，其最长的长度也是有限的。如我们给其分配18个字符长度即可。此时虽然每个人的名字长度有可能 不同，但是即使为其分配了固定长度的字符类型，即18个字符长度，最后浪费的空间也不是很大。而如果采用NVARCHAR数据类型时，万一以后需要改名， 而原先的存储空间不足用来容纳新的值，反而会造成一些额外的工作。在这种情况下，进行均衡时，会认为采用CHAR固定长度的数据类型更好。在实际项目中， 如果某个字段的字符长度比较短此时一般是采用固定字符长度。\r\n\r\n二是考虑其长度的是否相近。如果某个字段其长度虽然比较长，但是其长度总是近似的，如一般在90个到100个字符之间，甚至是相同的长度。此时比较 适合采用CHAR字符类型。比较典型的应用就是MD5哈希值。当利用MD5哈希值来存储用户密码时，就非常使用采用CHAR字符类型。因为其长度是相同 的。另外，像用来存储用户的身份证号码等等，一般也建议使用CHAR类型的数据。\r\n\r\n另外请大家考虑一个问题，CHAR（1）与VARCHAR（1）两这个定义，会有什么区别呢？虽然这两个都只能够用来保存单个的字符，但是 VARCHAR要比CHAR多占用一个存储位置。这主要是因为使用VARCHAR数据类型时，会多用1个字节用来存储长度信息。这个管理上的开销CHAR 字符类型是没有的。\r\n\r\n三是从碎片角度进行考虑。使用CHAR字符型时，由于存储空间都是一次性分配的。为此某个字段的内容，其都是存储在一起的。单从这个角度来讲，其不 存在碎片的困扰。而可变长度的字符数据类型，其存储的长度是可变的。当其更改前后数据长度不一致时，就不可避免的会出现碎片的问题。故使用可变长度的字符 型数据时，数据库管理员要时不时的对碎片进行整理。如执行数据库导出导入作业，来消除碎片。\r\n\r\n四是即使使用Varchar数据类型，也不能够太过于慷慨。这是什么意思呢？如现在用户需要存储一个地址信息。根据评估，只要使用100个字符就可 以了。但是有些数据库管理员会认为，反正Varchar数据类型是根据实际的需要来分配长度的。还不如给其大一点的呢。为此他们可能会为这个字段一次性分 配200个字符的存储空间。这VARCHAR（100）与VARCHAR（200）真的相同吗？结果是否定的。虽然他们用来存储90个字符的数据，其存储 空间相同。但是对于内存的消耗是不同的。对于VARCHAR数据类型来说，硬盘上的存储空间虽然都是根据实际字符长度来分配存储空间的，但是对于内存来 说，则不是。其时使用固定大小的内存块来保存值。简单的说，就是使用字符类型中定义的长度，即200个字符空间。显然，这对于排序或者临时表（这些内容都 需要通过内存来实现）作业会产生比较大的不利影响。所以如果某些字段会涉及到文件排序或者基于磁盘的临时表时，分配VARCHAR数据类型时仍然不能够太 过于慷慨。还是要评估实际需要的长度，然后选择一个最长的字段来设置字符长度。如果为了考虑冗余，可以留10%左右的字符长度。千万不能认为其为根据实际 长度来分配存储空间，而随意的分配长度，或者说干脆使用最大的字符长度。','Mysql什么时候用char，什么时候用varchar','','publish','open','open','','mysql%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e7%94%a8char%ef%bc%8c%e4%bb%80%e4%b9%88%e6%97%b6%e5%80%99%e7%94%a8varchar','','','2016-12-16 16:41:43','2016-12-16 16:41:43','',0,'http://blog.mflysys.com/?p=215',0,'post','',0),(190,1,'2016-10-14 10:48:59','2016-10-14 10:48:59','YII应用配置文件存放在项目下的 config 文件夹内：console.php 对应命令行应用，web.php对应web应用\r\n<pre><span style=\"color: #000000;\"><strong>$config = [</strong></span>\r\n \'id\' =&gt;<span style=\"color: #3366ff;\"><em> \'basic\'</em></span>,<span style=\"color: #008000;\">//用来区分其他应用的唯一标识ID</span>\r\n \'basePath\' =&gt; <em><span style=\"color: #3366ff;\">dirname(__DIR__)</span></em>,<span style=\"color: #008000;\">//应用的根目录，包含MVC设计模式的models, views, controllers等子目录，系统预定义 @app 代表这个路径</span>\r\n \'aliases\' =&gt; <span style=\"color: #3366ff;\"><em>[</em></span><span style=\"color: #008000;\">//路径别名</span>\r\n<em><span style=\"color: #3366ff;\"> \'@admin\' =&gt; \'path/to/Raymond\'</span></em>\r\n<em><span style=\"color: #3366ff;\"> ]</span></em>\r\n \'bootstrap\' =&gt;<em><span style=\"color: #3366ff;\"> [\'log\']</span></em>,<span style=\"color: #008000;\">//数组指定启动阶段 yii\\base\\Application::bootstrap()需要运行的组件</span>\r\n \'catchAll\' =&gt; <em><span style=\"color: #3366ff;\">[</span></em><span style=\"color: #008000;\">//指定一个处理所有用户请求的控制器方法，通常在项目维护模式下启用。该属性只适用于web应用</span>\r\n<span style=\"color: #3366ff;\"><em> \'offline/notice\',</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'param1\' =&gt; \'value\'</em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>\r\n \'components\' =&gt;<span style=\"color: #3366ff;\"> [</span><span style=\"color: #008000;\">//注册多个在其他地方使用的应用组件</span>\r\n <em><span style=\"color: #3366ff;\">\'request\' =&gt; [</span></em>\r\n <span style=\"color: #008000;\">// !!! insert a secret key in the following (if it is empty) - this is required by cookie</span> <em><span style=\"color: #3366ff;\">validation</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'cookieValidationKey\' =&gt; \'raymondSvNScq\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'cache\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'class\' =&gt; \'yii\\caching\\FileCache\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'user\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'identityClass\' =&gt; \'app\\models\\User\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'enableAutoLogin\' =&gt; true,</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'errorHandler\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'errorAction\' =&gt; \'site/error\',</span></em>\r\n<em><span style=\"color: #3366ff;\"> ],</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'mailer\' =&gt; [</span></em>\r\n<em><span style=\"color: #3366ff;\"> \'class\' =&gt; \'yii\\swiftmailer\\Mailer\',</span></em>\r\n <span style=\"color: #008000;\">// send all mails to a file by default. You have to set</span>\r\n<span style=\"color: #008000;\"> // \'useFileTransport\' to false and configure a transport</span>\r\n<span style=\"color: #008000;\"> // for the mailer to send real emails.</span>\r\n<span style=\"color: #3366ff;\"><em> \'useFileTransport\' =&gt; true,</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'log\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'traceLevel\' =&gt; YII_DEBUG ? 3 : 0,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'targets\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'class\' =&gt; \'yii\\log\\FileTarget\',</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'levels\' =&gt; [\'error\', \'warning\'],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'db\' =&gt; require(__DIR__ . \'/db.php\'),</em></span>\r\n<span style=\"color: #3366ff;\"><em> /*</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'urlManager\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'enablePrettyUrl\' =&gt; true,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'showScriptName\' =&gt; false,</em></span>\r\n<span style=\"color: #3366ff;\"><em> \'rules\' =&gt; [</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> ],</em></span>\r\n<span style=\"color: #3366ff;\"><em> */</em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>,\r\n \'controllerMap\' =&gt; <em><span style=\"color: #3366ff;\">[</span></em><span style=\"color: #008000;\">//定义一个类的特殊路径，默认情况下YII用 app\\controllers\\类名Controller来路由</span>\r\n<span style=\"color: #3366ff;\"><em> \'account\' =&gt; \'app\\controllers\\UserController\' </em></span>\r\n<span style=\"color: #3366ff;\"><em> ]</em></span>,\r\n \'controllerNamespace\' =&gt; <em><span style=\"color: #3366ff;\">\'app\\controllers\\admin\'</span></em>,<span style=\"color: #008000;\">//定义控制类文件默认的命名空间。默认情况下 YII 用 app\\controllers</span>\r\n \'language\' =&gt; <em><span style=\"color: #3366ff;\">\'en\'</span></em>,<span style=\"color: #008000;\">//项目展示的语言</span>\r\n \'timeZone\' =&gt; <em><span style=\"color: #3366ff;\">\'Asia/Shanghai\'</span></em>,<span style=\"color: #008000;\">//默认时区，本质上是调用 PHP 方法 date_default_timezone_set()</span> \r\n \'charset\' =&gt;<em><span style=\"color: #3366ff;\"> \'UTF-8\'</span></em>,<span style=\"color: #008000;\">//应用字符集，默认UTF-8</span>\r\n \'defaultRoute\' =&gt;<em><span style=\"color: #3366ff;\"> \'welcome/index\'</span></em>,<span style=\"color: #008000;\">//默认路由</span>\r\n \'extensions\' =&gt; <span style=\"color: #3366ff;\">[</span><span style=\"color: #008000;\">//应用扩展，默认使用@vendor/yiisoft/extensions.php文件返回的数组</span>\r\n<span style=\"color: #3366ff;\"> ],</span>\r\n \'layout\' =&gt; <em><span style=\"color: #3366ff;\">\'admin\'</span></em>,<span style=\"color: #008000;\">//默认视图文件，默认文件为main，对应@app/views/layouts/main.php。如果不想使用视图可以用 false</span>\r\n \'layoutPath\' =&gt;<em><span style=\"color: #3366ff;\"> \'@app/views/layouts/admin/\'</span></em>,<span style=\"color: #008000;\">//默认视图文件存放目录</span>\r\n \'runtimePath\' =&gt; <em><span style=\"color: #3366ff;\">\'@app/runtime/admin\'</span></em>,<span style=\"color: #008000;\">//临时文件如日志文件、缓存文件等保存路径，Yii预定义别名 @runtime 代表该路径</span>\r\n \'vendorPath\' =&gt; <em><span style=\"color: #3366ff;\">\'@app/vendor\'</span></em>,<span style=\"color: #008000;\">//指定 Composer 管理的供应商路径， 该路径包含应用使用的包括 Yii 框架在内的所有第三方库。 默认值为 @app/vendor</span>\r\n \'enableCoreCommands\' =&gt;<em><span style=\"color: #3366ff;\"> true</span></em>,<span style=\"color: #008000;\">//仅 yii\\console\\Application 控制台应用支持， 用来指定是否启用Yii中的核心命令，默认值为 true</span>\r\n \r\n<span style=\"color: #008000;\"> //定义应用处理过程中的执行事件</span>\r\n EVENT_BEFORE_REQUEST =&gt;<em><span style=\"color: #3366ff;\"> function($event){}</span></em>,<span style=\"color: #008000;\">//on beforeRequest,接收到请求开始处理前</span>\r\n EVENT_AFTER_REQUEST =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on afterRequest,应用处理请求after之后但在返回响应before之前触发</span>\r\n EVENT_BEFORE_ACTION =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on beforeAction,每个 控制器动作 运行before之前会被触发</span>\r\n EVENT_AFTER_ACTION =&gt; <em><span style=\"color: #3366ff;\">function($event){}</span></em>,<span style=\"color: #008000;\">//on afterAction,每个 控制器动作 运行after之后会被触发</span>\r\n \'params\' =&gt; <span style=\"color: #3366ff;\"><em>$params</em></span>,\r\n<span style=\"color: #000000;\">];</span></pre>','YII Application配置文件详解','','inherit','open','open','','188-revision-v1','','','2016-10-14 10:48:59','2016-10-14 10:48:59','',188,'http://blog.raymond.com/?p=190',0,'revision','',0),(218,1,'2016-12-16 16:46:15','2016-12-16 16:46:15','编译器可以根据自身硬件来选择合适的大小，但是需要满足约束：short和int型至少为16位，long型至少为32位，并且short型长度不能超过int型，而int型不能超过long型。这即是说各个类型的变量长度是由编译器来决定的，而当前主流的编译器中一般是32位机器和64位机器中int型都是4个字节','int型占几个字节','','inherit','open','open','','217-revision-v1','','','2016-12-16 16:46:15','2016-12-16 16:46:15','',217,'http://blog.mflysys.com/?p=218',0,'revision','',0),(219,1,'2016-12-16 16:47:03','0000-00-00 00:00:00','','PHP的内存管理机制','','draft','open','open','','','','','2016-12-16 16:47:03','2016-12-16 16:47:03','',0,'http://blog.mflysys.com/?p=219',0,'post','',0),(221,1,'2016-12-22 11:16:22','2016-12-22 11:16:22','fpm是fastcgi进程管理器，用于替换fastcgi中的大部分附加功能\r\n\r\nphp-fpm的安装：在编译时加上<em>--enable-fpm </em>即可（5.3之后）\r\n\r\nphp-fpm 的配置：\r\n位置：php-fpm.conf文件\r\n关键配置项：\r\n<span style=\"color: #3366ff;\">;include</span>=\'引入其他配置文件\'\r\n<span style=\"color: #3366ff;\">;pid</span>=pid文件的位置，默认为空\r\n#pid文件记录该进程的进程id，为了防止进程启动多个副本，进程启动时会查询pid文件，只有获得写权限时，才能正常启动，并把自身PID写入该文件中\r\n<span style=\"color: #3366ff;\">;error_log</span>=fpm错误日志位置\r\n<span style=\"color: #3366ff;\">;log_level</span>=日志级别(alert,error,warning,notice,debug)\r\n#在php本身的配置文件php.ini中有错误级别error_reporting，这个配置是告诉php什么样的级别才会出发错误，如果触发了，则会在log_level大于error时被记录\r\n<span style=\"color: #3366ff;\">;emergency_restart_interval</span>=平滑重启的时间间隔，设为0则关闭该功能\r\n<span style=\"color: #3366ff;\">;emergency_restart_threshold</span>=平滑重启的SIGSEGV/SIGBUS推出信号阀值，设为0则关闭该功能\r\n<span style=\"color: #3366ff;\">;process_control_timeout</span>=子进程接受主进程复用信号的超过时间\r\n#nginx接收到请求后，会将请求发给phpfpm，由fpm选择合适的FastCGI来处理，在处理前phpfpm会先给FastCGI发送一个复用信号，让FastCGI准备好接受请求。如果FastCGI在接收到复用信号后，处理响应时间超过timeout时间，phpfpm会选择其他方式处理该请求\r\n<span style=\"color: #3366ff;\">;process</span>.max=子进程最大数\r\n<span style=\"color: #3366ff;\">;process.priority</span>=master进程的优先级（子进程会继承该优先级）\r\n<span style=\"color: #3366ff;\">;deamonize</span>=是否设置fpm在后台运行，默认yes\r\n\r\n基础的配置就是这些，php-fpm.onf还include了\r\nconf.d/*，保存php扩展配置的extension pecl信息\r\npool.d/www.conf，保存运行配置区段\r\n\r\nwww.conf关键配置项\r\n\r\n<span style=\"color: #3366ff;\">user</span>=fpm进程的运行用户\r\n<span style=\"color: #3366ff;\">group</span>=fpm进程的运行用户组\r\n\r\n<span style=\"color: #3366ff;\">listen</span>=接受FastCGI请求的地址，一般来说，是地址+端口/端口/unix套接字地址\r\n<span style=\"color: #3366ff;\">listen.owner</span>=Unix套接字的权限用户，在linux中该用户为owner\r\n<span style=\"color: #3366ff;\">listen.group</span>=Unix套接字的权限组\r\n<span style=\"color: #3366ff;\">listen.allowed_clients</span>=允许TCP连接到该套接字的IPv4地址，默认为any\r\n\r\n<span style=\"color: #3366ff;\">pm</span>=dynamic，设置进程管理器如何管理进程\r\n\r\n<span style=\"color: #3366ff;\">pm.max_children</span>=pm为static时创建的进程数\r\n<span style=\"color: #3366ff;\">pm.start_servers</span>=pm为dynamic时可创建的最大子进程数\r\n<span style=\"color: #3366ff;\">pm.min_spare_servers</span>=pm为dynamic时最小空闲服务进程数\r\n<span style=\"color: #3366ff;\">pm.max_spare_servers</span>=pm为dynamic时最大空闲服务进程数\r\n<span style=\"color: #3366ff;\">pm.max_requests</span>=每个子进程重生之前处理的最大服务请求数，0则一直接受请求\r\n\r\n<span style=\"color: #3366ff;\">slowlog</span>=slowlog地址\r\n<span style=\"color: #3366ff;\">request_slowlog_timeout</span>=处理多久会被标志为slowlog\r\n\r\n<span style=\"color: #3366ff;\">request_terminate_timeout</span>=单个请求的超时终止时间\r\n#设置该值后，php.ini中的max_execution_time和max_input_time都会失效','PHP手册阅读笔记(1): php-fpm','','publish','open','open','','php%e6%89%8b%e5%86%8c%e9%98%85%e8%af%bb%e7%ac%94%e8%ae%b01-php-fpm','','','2016-12-22 11:16:22','2016-12-22 11:16:22','',0,'http://blog.mflysys.com/?p=221',0,'post','',0),(222,1,'2016-12-22 11:16:22','2016-12-22 11:16:22','fpm是fastcgi进程管理器，用于替换fastcgi中的大部分附加功能\r\n\r\nphp-fpm的安装：在编译时加上<em>--enable-fpm </em>即可（5.3之后）\r\n\r\nphp-fpm 的配置：\r\n位置：php-fpm.conf文件\r\n关键配置项：\r\n<span style=\"color: #3366ff;\">;include</span>=\'引入其他配置文件\'\r\n<span style=\"color: #3366ff;\">;pid</span>=pid文件的位置，默认为空\r\n#pid文件记录该进程的进程id，为了防止进程启动多个副本，进程启动时会查询pid文件，只有获得写权限时，才能正常启动，并把自身PID写入该文件中\r\n<span style=\"color: #3366ff;\">;error_log</span>=fpm错误日志位置\r\n<span style=\"color: #3366ff;\">;log_level</span>=日志级别(alert,error,warning,notice,debug)\r\n#在php本身的配置文件php.ini中有错误级别error_reporting，这个配置是告诉php什么样的级别才会出发错误，如果触发了，则会在log_level大于error时被记录\r\n<span style=\"color: #3366ff;\">;emergency_restart_interval</span>=平滑重启的时间间隔，设为0则关闭该功能\r\n<span style=\"color: #3366ff;\">;emergency_restart_threshold</span>=平滑重启的SIGSEGV/SIGBUS推出信号阀值，设为0则关闭该功能\r\n<span style=\"color: #3366ff;\">;process_control_timeout</span>=子进程接受主进程复用信号的超过时间\r\n#nginx接收到请求后，会将请求发给phpfpm，由fpm选择合适的FastCGI来处理，在处理前phpfpm会先给FastCGI发送一个复用信号，让FastCGI准备好接受请求。如果FastCGI在接收到复用信号后，处理响应时间超过timeout时间，phpfpm会选择其他方式处理该请求\r\n<span style=\"color: #3366ff;\">;process</span>.max=子进程最大数\r\n<span style=\"color: #3366ff;\">;process.priority</span>=master进程的优先级（子进程会继承该优先级）\r\n<span style=\"color: #3366ff;\">;deamonize</span>=是否设置fpm在后台运行，默认yes\r\n\r\n基础的配置就是这些，php-fpm.onf还include了\r\nconf.d/*，保存php扩展配置的extension pecl信息\r\npool.d/www.conf，保存运行配置区段\r\n\r\nwww.conf关键配置项\r\n\r\n<span style=\"color: #3366ff;\">user</span>=fpm进程的运行用户\r\n<span style=\"color: #3366ff;\">group</span>=fpm进程的运行用户组\r\n\r\n<span style=\"color: #3366ff;\">listen</span>=接受FastCGI请求的地址，一般来说，是地址+端口/端口/unix套接字地址\r\n<span style=\"color: #3366ff;\">listen.owner</span>=Unix套接字的权限用户，在linux中该用户为owner\r\n<span style=\"color: #3366ff;\">listen.group</span>=Unix套接字的权限组\r\n<span style=\"color: #3366ff;\">listen.allowed_clients</span>=允许TCP连接到该套接字的IPv4地址，默认为any\r\n\r\n<span style=\"color: #3366ff;\">pm</span>=dynamic，设置进程管理器如何管理进程\r\n\r\n<span style=\"color: #3366ff;\">pm.max_children</span>=pm为static时创建的进程数\r\n<span style=\"color: #3366ff;\">pm.start_servers</span>=pm为dynamic时可创建的最大子进程数\r\n<span style=\"color: #3366ff;\">pm.min_spare_servers</span>=pm为dynamic时最小空闲服务进程数\r\n<span style=\"color: #3366ff;\">pm.max_spare_servers</span>=pm为dynamic时最大空闲服务进程数\r\n<span style=\"color: #3366ff;\">pm.max_requests</span>=每个子进程重生之前处理的最大服务请求数，0则一直接受请求\r\n\r\n<span style=\"color: #3366ff;\">slowlog</span>=slowlog地址\r\n<span style=\"color: #3366ff;\">request_slowlog_timeout</span>=处理多久会被标志为slowlog\r\n\r\n<span style=\"color: #3366ff;\">request_terminate_timeout</span>=单个请求的超时终止时间\r\n#设置该值后，php.ini中的max_execution_time和max_input_time都会失效','PHP手册阅读笔记(1): php-fpm','','inherit','open','open','','221-revision-v1','','','2016-12-22 11:16:22','2016-12-22 11:16:22','',221,'http://blog.mflysys.com/?p=222',0,'revision','',0),(216,1,'2016-12-16 16:41:43','2016-12-16 16:41:43','1、在实际项目中， 如果某个字段的字符长度比较短此时一般是采用固定字符长度。\r\n\r\n2、字段的长度固定或相近比较 适合采用CHAR字符类型\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n根据上面的分析，我们知道VARCHAR数据类型是一把双刃剑，其在带来性能提升的同时，也可能会存在着一些额外的消耗。我们在评估到底是使用VARCHAR数据类型还是采用CHAR数据类型时，就需要进行均衡。在实际项目中，我们会考量如下情况。\r\n\r\n一是根据字符的长度来判断。如某个字段，像人的名字，其最长的长度也是有限的。如我们给其分配18个字符长度即可。此时虽然每个人的名字长度有可能 不同，但是即使为其分配了固定长度的字符类型，即18个字符长度，最后浪费的空间也不是很大。而如果采用NVARCHAR数据类型时，万一以后需要改名， 而原先的存储空间不足用来容纳新的值，反而会造成一些额外的工作。在这种情况下，进行均衡时，会认为采用CHAR固定长度的数据类型更好。在实际项目中， 如果某个字段的字符长度比较短此时一般是采用固定字符长度。\r\n\r\n二是考虑其长度的是否相近。如果某个字段其长度虽然比较长，但是其长度总是近似的，如一般在90个到100个字符之间，甚至是相同的长度。此时比较 适合采用CHAR字符类型。比较典型的应用就是MD5哈希值。当利用MD5哈希值来存储用户密码时，就非常使用采用CHAR字符类型。因为其长度是相同 的。另外，像用来存储用户的身份证号码等等，一般也建议使用CHAR类型的数据。\r\n\r\n另外请大家考虑一个问题，CHAR（1）与VARCHAR（1）两这个定义，会有什么区别呢？虽然这两个都只能够用来保存单个的字符，但是 VARCHAR要比CHAR多占用一个存储位置。这主要是因为使用VARCHAR数据类型时，会多用1个字节用来存储长度信息。这个管理上的开销CHAR 字符类型是没有的。\r\n\r\n三是从碎片角度进行考虑。使用CHAR字符型时，由于存储空间都是一次性分配的。为此某个字段的内容，其都是存储在一起的。单从这个角度来讲，其不 存在碎片的困扰。而可变长度的字符数据类型，其存储的长度是可变的。当其更改前后数据长度不一致时，就不可避免的会出现碎片的问题。故使用可变长度的字符 型数据时，数据库管理员要时不时的对碎片进行整理。如执行数据库导出导入作业，来消除碎片。\r\n\r\n四是即使使用Varchar数据类型，也不能够太过于慷慨。这是什么意思呢？如现在用户需要存储一个地址信息。根据评估，只要使用100个字符就可 以了。但是有些数据库管理员会认为，反正Varchar数据类型是根据实际的需要来分配长度的。还不如给其大一点的呢。为此他们可能会为这个字段一次性分 配200个字符的存储空间。这VARCHAR（100）与VARCHAR（200）真的相同吗？结果是否定的。虽然他们用来存储90个字符的数据，其存储 空间相同。但是对于内存的消耗是不同的。对于VARCHAR数据类型来说，硬盘上的存储空间虽然都是根据实际字符长度来分配存储空间的，但是对于内存来 说，则不是。其时使用固定大小的内存块来保存值。简单的说，就是使用字符类型中定义的长度，即200个字符空间。显然，这对于排序或者临时表（这些内容都 需要通过内存来实现）作业会产生比较大的不利影响。所以如果某些字段会涉及到文件排序或者基于磁盘的临时表时，分配VARCHAR数据类型时仍然不能够太 过于慷慨。还是要评估实际需要的长度，然后选择一个最长的字段来设置字符长度。如果为了考虑冗余，可以留10%左右的字符长度。千万不能认为其为根据实际 长度来分配存储空间，而随意的分配长度，或者说干脆使用最大的字符长度。','Mysql什么时候用char，什么时候用varchar','','inherit','open','open','','215-revision-v1','','','2016-12-16 16:41:43','2016-12-16 16:41:43','',215,'http://blog.mflysys.com/?p=216',0,'revision','',0),(217,1,'2016-12-16 16:46:15','2016-12-16 16:46:15','编译器可以根据自身硬件来选择合适的大小，但是需要满足约束：short和int型至少为16位，long型至少为32位，并且short型长度不能超过int型，而int型不能超过long型。这即是说各个类型的变量长度是由编译器来决定的，而当前主流的编译器中一般是32位机器和64位机器中int型都是4个字节','int型占几个字节','','publish','open','open','','int%e5%9e%8b%e5%8d%a0%e5%87%a0%e4%b8%aa%e5%ad%97%e8%8a%82','','','2016-12-16 16:46:23','2016-12-16 16:46:23','',0,'http://blog.mflysys.com/?p=217',0,'post','',0),(194,1,'2016-11-27 20:25:15','2016-11-27 20:25:15','ngx_http_limit_req_module 是用来限制每个key（比如IP）的请求处理率，采用的是 漏桶原理（leaky bucket）\r\n\r\n语法(加在http server location 块里面)：\r\n<pre>\r\nhttp{\r\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\r\nlimit_req_log_level error;</pre>\r\n<pre>server{\r\n location /search/{\r\n limit_req zone=one burst=5;\r\n }\r\n }\r\n}</pre>\r\n以上配置定义一个漏桶，名称为one，桶空间 10M（大概可以存储16000个IP），每秒的最大处理请求数为 1个。\r\n另外又定义了 one 的峰值为 5，则最高并发缓存为5个，如果1s内发过来6个请求，则第一个请求会被处理，接下来4个请求会被缓存进延迟队列，最后一个请求返回 503错误，并写入 limit_req_error_log。\r\n以上配置，1s内可以接受的最大请求数为 6 个，下一秒又可以请求6个（即使上一秒的6个还没处理完）。\r\n如果在 limit_req 后面加上 nodelay，则超出 burst的请求会直接 503（即使这一秒只有一个请求，但是由于现在处理中+缓存区的请求有6个了，则会返回503）\r\n<pre>limit_req zone=one burst=5 nodelay;</pre>','ngx_http_limit_req_module','','publish','open','open','','ngx_http_limit_req_module','','','2016-11-27 20:25:15','2016-11-27 20:25:15','',0,'http://blog.raymond.com/?p=194',0,'post','',0),(195,1,'2016-11-27 20:25:15','2016-11-27 20:25:15','ngx_http_limit_req_module 是用来限制每个key（比如IP）的请求处理率，采用的是 漏桶原理（leaky bucket）\r\n\r\n语法(加在http server location 块里面)：\r\n<pre>\r\nhttp{\r\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\r\nlimit_req_log_level error;</pre>\r\n<pre>server{\r\n location /search/{\r\n limit_req zone=one burst=5;\r\n }\r\n }\r\n}</pre>\r\n以上配置定义一个漏桶，名称为one，桶空间 10M（大概可以存储16000个IP），每秒的最大处理请求数为 1个。\r\n另外又定义了 one 的峰值为 5，则最高并发缓存为5个，如果1s内发过来6个请求，则第一个请求会被处理，接下来4个请求会被缓存进延迟队列，最后一个请求返回 503错误，并写入 limit_req_error_log。\r\n以上配置，1s内可以接受的最大请求数为 6 个，下一秒又可以请求6个（即使上一秒的6个还没处理完）。\r\n如果在 limit_req 后面加上 nodelay，则超出 burst的请求会直接 503（即使这一秒只有一个请求，但是由于现在处理中+缓存区的请求有6个了，则会返回503）\r\n<pre>limit_req zone=one burst=5 nodelay;</pre>','ngx_http_limit_req_module','','inherit','open','open','','194-revision-v1','','','2016-11-27 20:25:15','2016-11-27 20:25:15','',194,'http://blog.raymond.com/?p=195',0,'revision','',0),(196,1,'2016-11-28 06:27:28','2016-11-28 06:27:28','1、当内核中使用ATOMIC标记分配内存时，不会回收cache，此时如果free内存不足，则分配不到需要的内存，而此时系统中的cached实际是很多的，这种情况很容易出现，就是因为cache不做限制。\r\n2、当业务对内存分配的及时性有要求时，cache不做限制的话，经常会出现时间需要分配内存时才做cache回收的情况，而且是同步回收，会增加内存分配的延时，直接影响业务性能。而suse的补丁中的cache应该都是异步回收的，应该不存在这个问题。\r\n\r\nbuffer:A buffer is something that has yet to be \"written\" to disk。\r\n缓冲区，一个用于存储速度不同步的设备或优先级不同的设备之间传输数据的区域。通过缓冲区，可以使进程之间的相互等待变少，从而使从速度慢的设备读入数据\r\n时，速度快的设备的操作进程不发生间断。\r\ncache:A cache is something that has been \"read\" from the disk and stored for later use.\r\n意思是说我们从硬盘或者存储设备读进计算机后缓存在内存中的数据。\r\n\r\n当我们系统中的内存不够用的时候，buffers/cache所占用的内存会被系统快速释放，然后给其他应用程序来使用。\r\n要查看cache 的内容可用安装 ftools\r\n\r\nhg clone https://code.google.com/p/linux-ftools/\r\n\r\nhg命令可能需要先安装 mercurial\r\n\r\n下载后./configure make make install 后会有linux-fincore命令\r\n执行linux-fincore * 或是 linux-fincore –pages=false –summarize –only-cached * 即可看到内存使用情况\r\n\r\nfilename size total_pages min_cached page cached_pages cached_size cached_perc\r\n\r\n仅清除页面缓存（PageCache）\r\n# sync; echo 1 &gt; /proc/sys/vm/drop_caches\r\n清除目录项和inode\r\n# sync; echo 2 &gt; /proc/sys/vm/drop_caches\r\n清除页面缓存，目录项和inode\r\n# sync; echo 3 &gt; /proc/sys/vm/drop_caches\r\n\r\nsync 将刷新文件系统缓冲区（buffer），shell在执行序列中的下一个命令之前会等待命令的终止。正如内核文档中提到的，写入到drop_cache将清空缓存而不会杀死任何应用程序/服务，echo命令做写入文件的工作。\r\n\r\n如果你必须清除磁盘高速缓存，第一个命令在企业和生产环境中是最安全，\"...echo 1&gt; ...\"只会清除页面缓存。 在生产环境中不建议使用上面的第三个选项\"...echo 3 &gt; ...\" ，除非你明确自己在做什么，因为它会清除缓存页，目录项和inodes。\r\n\r\n如果不是root，但有sudo权限，可以通过sysctl命令进行设置\r\n$sync\r\n$sudo sysctl -w vm.drop_caches=3\r\n$sudo sysctl -w vm.drop_caches=0 #recovery drop_caches','cache','','publish','open','open','','cache','','','2016-11-28 06:27:28','2016-11-28 06:27:28','',0,'http://blog.raymond.com/?p=196',0,'post','',0),(197,1,'2016-11-28 06:27:28','2016-11-28 06:27:28','1、当内核中使用ATOMIC标记分配内存时，不会回收cache，此时如果free内存不足，则分配不到需要的内存，而此时系统中的cached实际是很多的，这种情况很容易出现，就是因为cache不做限制。\r\n2、当业务对内存分配的及时性有要求时，cache不做限制的话，经常会出现时间需要分配内存时才做cache回收的情况，而且是同步回收，会增加内存分配的延时，直接影响业务性能。而suse的补丁中的cache应该都是异步回收的，应该不存在这个问题。\r\n\r\nbuffer:A buffer is something that has yet to be \"written\" to disk。\r\n缓冲区，一个用于存储速度不同步的设备或优先级不同的设备之间传输数据的区域。通过缓冲区，可以使进程之间的相互等待变少，从而使从速度慢的设备读入数据\r\n时，速度快的设备的操作进程不发生间断。\r\ncache:A cache is something that has been \"read\" from the disk and stored for later use.\r\n意思是说我们从硬盘或者存储设备读进计算机后缓存在内存中的数据。\r\n\r\n当我们系统中的内存不够用的时候，buffers/cache所占用的内存会被系统快速释放，然后给其他应用程序来使用。\r\n要查看cache 的内容可用安装 ftools\r\n\r\nhg clone https://code.google.com/p/linux-ftools/\r\n\r\nhg命令可能需要先安装 mercurial\r\n\r\n下载后./configure make make install 后会有linux-fincore命令\r\n执行linux-fincore * 或是 linux-fincore –pages=false –summarize –only-cached * 即可看到内存使用情况\r\n\r\nfilename size total_pages min_cached page cached_pages cached_size cached_perc\r\n\r\n仅清除页面缓存（PageCache）\r\n# sync; echo 1 &gt; /proc/sys/vm/drop_caches\r\n清除目录项和inode\r\n# sync; echo 2 &gt; /proc/sys/vm/drop_caches\r\n清除页面缓存，目录项和inode\r\n# sync; echo 3 &gt; /proc/sys/vm/drop_caches\r\n\r\nsync 将刷新文件系统缓冲区（buffer），shell在执行序列中的下一个命令之前会等待命令的终止。正如内核文档中提到的，写入到drop_cache将清空缓存而不会杀死任何应用程序/服务，echo命令做写入文件的工作。\r\n\r\n如果你必须清除磁盘高速缓存，第一个命令在企业和生产环境中是最安全，\"...echo 1&gt; ...\"只会清除页面缓存。 在生产环境中不建议使用上面的第三个选项\"...echo 3 &gt; ...\" ，除非你明确自己在做什么，因为它会清除缓存页，目录项和inodes。\r\n\r\n如果不是root，但有sudo权限，可以通过sysctl命令进行设置\r\n$sync\r\n$sudo sysctl -w vm.drop_caches=3\r\n$sudo sysctl -w vm.drop_caches=0 #recovery drop_caches','cache','','inherit','open','open','','196-revision-v1','','','2016-11-28 06:27:28','2016-11-28 06:27:28','',196,'http://blog.raymond.com/?p=197',0,'revision','',0),(198,1,'2016-11-28 07:09:57','2016-11-28 07:09:57','<pre><em>composer.json </em><span style=\"color: #008000;\">#composer配置文件</span></pre>\r\n<pre><em>config/ </em><span style=\"color: #008000;\">#配置文件，主要有</span>\r\n<em>db.php </em>\r\n<em>console.php </em>\r\n<em>params.php </em>\r\n<em>web.php</em></pre>\r\n<pre><em>vendor/ </em><span style=\"color: #008000;\">#已经安装的composer包，包括YII核心框架</span></pre>\r\n<pre><em>assets/ </em><span style=\"color: #008000;\">#所有应用共享的资源文件</span></pre>\r\n<pre><em>ocntrollers/ </em><span style=\"color: #008000;\">#控制类</span>\r\n<em>modoles/ </em><span style=\"color: #008000;\">#模型类</span>\r\n<em>views/ </em><span style=\"color: #008000;\">#视图类</span></pre>\r\n<pre><em>web/ </em><span style=\"color: #008000;\">#web应用根目录，包括web入口文件</span>\r\n<em> assets/ </em><span style=\"color: #008000;\">#YII发布的js资源文件</span>\r\n<em> css/ </em><span style=\"color: #008000;\">#YII发布的css资源文件</span>\r\n \r\n<em>runtime/ </em><span style=\"color: #008000;\">#YII运行时生成的文件，如日志和缓存</span></pre>\r\n<pre><em>tests/ </em><span style=\"color: #008000;\">#测试应用</span></pre>\r\n<pre><em>mail/ </em><span style=\"color: #008000;\">#email的视图文件</span></pre>\r\n<pre>\r\n<em>commands/ </em><span style=\"color: #008000;\">#控制台命令类 </span>\r\n<em>yii </em><span style=\"color: #008000;\">#控制台命令执行脚本</span></pre>','YII目录结构','','publish','open','open','','yii%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84','','','2016-11-28 07:09:57','2016-11-28 07:09:57','',0,'http://blog.raymond.com/?p=198',0,'post','',0),(199,1,'2016-11-28 07:09:57','2016-11-28 07:09:57','<pre><em>composer.json </em><span style=\"color: #008000;\">#composer配置文件</span></pre>\r\n<pre><em>config/ </em><span style=\"color: #008000;\">#配置文件，主要有</span>\r\n<em>db.php </em>\r\n<em>console.php </em>\r\n<em>params.php </em>\r\n<em>web.php</em></pre>\r\n<pre><em>vendor/ </em><span style=\"color: #008000;\">#已经安装的composer包，包括YII核心框架</span></pre>\r\n<pre><em>assets/ </em><span style=\"color: #008000;\">#所有应用共享的资源文件</span></pre>\r\n<pre><em>ocntrollers/ </em><span style=\"color: #008000;\">#控制类</span>\r\n<em>modoles/ </em><span style=\"color: #008000;\">#模型类</span>\r\n<em>views/ </em><span style=\"color: #008000;\">#视图类</span></pre>\r\n<pre><em>web/ </em><span style=\"color: #008000;\">#web应用根目录，包括web入口文件</span>\r\n<em> assets/ </em><span style=\"color: #008000;\">#YII发布的js资源文件</span>\r\n<em> css/ </em><span style=\"color: #008000;\">#YII发布的css资源文件</span>\r\n \r\n<em>runtime/ </em><span style=\"color: #008000;\">#YII运行时生成的文件，如日志和缓存</span></pre>\r\n<pre><em>tests/ </em><span style=\"color: #008000;\">#测试应用</span></pre>\r\n<pre><em>mail/ </em><span style=\"color: #008000;\">#email的视图文件</span></pre>\r\n<pre>\r\n<em>commands/ </em><span style=\"color: #008000;\">#控制台命令类 </span>\r\n<em>yii </em><span style=\"color: #008000;\">#控制台命令执行脚本</span></pre>','YII目录结构','','inherit','open','open','','198-revision-v1','','','2016-11-28 07:09:57','2016-11-28 07:09:57','',198,'http://blog.raymond.com/?p=199',0,'revision','',0),(200,1,'2016-11-28 07:11:14','2016-11-28 07:11:14','用户访问入口脚本-&gt;\r\n加载配置文件-&gt;执行YII应用-&gt;\r\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\r\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\r\n加载model-&gt;渲染view-&gt;\r\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器\r\n\r\n步骤分解：\r\n\r\n<strong>执行YII应用</strong>\r\n<pre><strong>yii\\web\\Application继承于 yii\\base\\Application，所以先会执行baseApplication的构造函数</strong>\r\n\r\n<strong>preInit($config)  <span style=\"color: #339966;\">#配置高级别应用主体属性， 比如yii\\base\\Application::basePath</span></strong>\r\n<strong>registerErrorHandler($config) <span style=\"color: #339966;\">#错误处理方法</span></strong>\r\n<strong>Component::__construct($config) <span style=\"color: #339966;\">#配置应用主体属性\r\n\r\n<span style=\"color: #333333;\">接着 baseApplication::init() 初始化，该函数会调用  bootstrap方法运行启动组件\r\n\r\n以上的应用构造完成后，接下来才执行 run() 函数</span></span></strong></pre>\r\n&nbsp;\r\n\r\nweb脚本入口代码\r\n<pre><span class=\"hljs-meta\">&lt;?php</span> \r\ndefined(<span class=\"hljs-string\">\'YII_DEBUG\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_DEBUG\'</span>, <span class=\"hljs-keyword\">true</span>); \r\ndefined(<span class=\"hljs-string\">\'YII_ENV\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_ENV\'</span>, <span class=\"hljs-string\">\'dev\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 注册 Composer 自动加载器 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../vendor/autoload.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 包含 Yii 类文件 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> .<span class=\"hljs-string\">\'/../vendor/yiisoft/yii2/Yii.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 加载应用配置 </span>\r\n$config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../config/web.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 创建、配置、运行一个应用 </span>\r\n(<span class=\"hljs-keyword\">new</span> yii\\web\\Application($config))-&gt;run();</pre>\r\n&nbsp;\r\n\r\n<strong>执行Action</strong>\r\n<pre>beforeAction\r\n\r\n runAction   <span style=\"color: #008000;\">//开始执行action</span>\r\n             createAction<span style=\"color: #008000;\"> //创建action</span>\r\n\r\n             beforeRun\r\n\r\n             runWithParams <span style=\"color: #008000;\">//执行action中的代码</span>\r\n                         checkAccess()<span style=\"color: #008000;\">//如果是rest接口，执行checkAccess</span>\r\n<span style=\"color: #008000;\">                                  /*如果有调用model*/</span>\r\n                                  find() 执行crud操作 afterFind\r\n                                  save() beforeValidate afterValidate 执行crud操作 beforesave aftersave\r\n                                  insert操作；beforeInsert afterInsert\r\n                                  update操作；beforeUpdate afterUpdate\r\n                                  delete操作：beforeDelete 执行crud操作 afterDelete\r\n\r\n            afterRun\r\n\r\nafterAction</pre>','YII项目WEB应用的加载机制','','publish','open','open','','yii%e9%a1%b9%e7%9b%aeweb%e5%ba%94%e7%94%a8%e7%9a%84%e5%8a%a0%e8%bd%bd%e6%9c%ba%e5%88%b6','','','2016-11-29 08:28:19','2016-11-29 08:28:19','',0,'http://blog.raymond.com/?p=200',0,'post','',0),(201,1,'2016-11-28 07:11:14','2016-11-28 07:11:14','用户访问入口脚本-&gt;\r\n加载配置文件-&gt;执行YII应用-&gt;\r\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\r\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\r\n加载model-&gt;渲染view-&gt;\r\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器','YII项目WEB应用的加载机制','','inherit','open','open','','200-revision-v1','','','2016-11-28 07:11:14','2016-11-28 07:11:14','',200,'http://blog.raymond.com/?p=201',0,'revision','',0),(202,1,'2016-11-29 08:26:37','2016-11-29 08:26:37','用户访问入口脚本-&gt;\n加载配置文件-&gt;执行YII应用-&gt;\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\n加载model-&gt;渲染view-&gt;\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器\n\n步骤分解：\n\n<strong>执行YII应用</strong>\n<pre><strong>yii\\web\\Application继承于 yii\\base\\Application，所以先会执行baseApplication的构造函数</strong>\n\n<strong>preInit($config)  <span style=\"color: #339966;\">#配置高级别应用主体属性， 比如yii\\base\\Application::basePath</span></strong>\n<strong>registerErrorHandler($config) <span style=\"color: #339966;\">#错误处理方法</span></strong>\n<strong>Component::__construct($config) <span style=\"color: #339966;\">#配置应用主体属性\n\n<span style=\"color: #333333;\">接着 baseApplication::init() 初始化，该函数会调用  bootstrap方法运行启动组件\n\n以上的应用构造完成后，接下来才执行 run() 函数</span></span></strong></pre>\n&nbsp;\n\nweb脚本入口代码\n<pre><span class=\"hljs-meta\">&lt;?php</span> \ndefined(<span class=\"hljs-string\">\'YII_DEBUG\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_DEBUG\'</span>, <span class=\"hljs-keyword\">true</span>); \ndefined(<span class=\"hljs-string\">\'YII_ENV\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_ENV\'</span>, <span class=\"hljs-string\">\'dev\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 注册 Composer 自动加载器 </span>\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../vendor/autoload.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 包含 Yii 类文件 </span>\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> .<span class=\"hljs-string\">\'/../vendor/yiisoft/yii2/Yii.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 加载应用配置 </span>\n$config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../config/web.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 创建、配置、运行一个应用 </span>\n(<span class=\"hljs-keyword\">new</span> yii\\web\\Application($config))-&gt;run();</pre>\n&nbsp;\n\n<strong>执行Action</strong>\n<pre>beforeAction\n\n runAction   //开始执行action\n                   createAction //创建action\n\n                  beforeRun\n\n                 runWithParams //执行action中的代码\n        //如果是rest接口，执行checkAccess\n        /*如果有调用model*/\n                 find() 执行crud操作 afterFind\n                 save() beforeValidate afterValidate 执行crud操作 beforesave aftersave\n                 insert操作；beforeInsert afterInsert\n                update操作；beforeUpdate afterUpdate\n                delete操作：beforeDelete 执行crud操作 afterDelete\n\nafterRun\n\nafterAction</pre>','YII项目WEB应用的加载机制','','inherit','open','open','','200-autosave-v1','','','2016-11-29 08:26:37','2016-11-29 08:26:37','',200,'http://blog.raymond.com/?p=202',0,'revision','',0),(203,1,'2016-11-28 07:37:47','2016-11-28 07:37:47','用户访问入口脚本-&gt;\r\n加载配置文件-&gt;执行YII应用-&gt;\r\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\r\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\r\n加载model-&gt;渲染view-&gt;\r\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器\r\n\r\n&nbsp;\r\n\r\nweb脚本入口代码\r\n<pre><span class=\"hljs-meta\">&lt;?php</span> \r\ndefined(<span class=\"hljs-string\">\'YII_DEBUG\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_DEBUG\'</span>, <span class=\"hljs-keyword\">true</span>); \r\ndefined(<span class=\"hljs-string\">\'YII_ENV\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_ENV\'</span>, <span class=\"hljs-string\">\'dev\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 注册 Composer 自动加载器 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../vendor/autoload.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 包含 Yii 类文件 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> .<span class=\"hljs-string\">\'/../vendor/yiisoft/yii2/Yii.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 加载应用配置 </span>\r\n$config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../config/web.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 创建、配置、运行一个应用 </span>\r\n(<span class=\"hljs-keyword\">new</span> yii\\web\\Application($config))-&gt;run();</pre>','YII项目WEB应用的加载机制','','inherit','open','open','','200-revision-v1','','','2016-11-28 07:37:47','2016-11-28 07:37:47','',200,'http://blog.raymond.com/?p=203',0,'revision','',0),(204,1,'2016-11-28 07:53:13','2016-11-28 07:53:13','用户访问入口脚本-&gt;\r\n加载配置文件-&gt;执行YII应用-&gt;\r\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\r\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\r\n加载model-&gt;渲染view-&gt;\r\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器\r\n\r\n步骤分解：\r\n\r\n<strong>执行YII应用</strong>\r\n<pre><strong>yii\\web\\Application继承于 yii\\base\\Application，所以先会执行baseApplication的构造函数</strong>\r\n\r\n<strong>preInit($config)  <span style=\"color: #339966;\">#配置高级别应用主体属性， 比如yii\\base\\Application::basePath</span></strong>\r\n<strong>registerErrorHandler($config) <span style=\"color: #339966;\">#错误处理方法</span></strong>\r\n<strong>Component::__construct($config) <span style=\"color: #339966;\">#配置应用主体属性\r\n\r\n<span style=\"color: #333333;\">接着 baseApplication::init() 初始化，该函数会调用  bootstrap方法运行启动组件\r\n\r\n以上的应用构造完成后，接下来才执行 run() 函数</span></span></strong></pre>\r\n&nbsp;\r\n\r\nweb脚本入口代码\r\n<pre><span class=\"hljs-meta\">&lt;?php</span> \r\ndefined(<span class=\"hljs-string\">\'YII_DEBUG\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_DEBUG\'</span>, <span class=\"hljs-keyword\">true</span>); \r\ndefined(<span class=\"hljs-string\">\'YII_ENV\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_ENV\'</span>, <span class=\"hljs-string\">\'dev\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 注册 Composer 自动加载器 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../vendor/autoload.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 包含 Yii 类文件 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> .<span class=\"hljs-string\">\'/../vendor/yiisoft/yii2/Yii.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 加载应用配置 </span>\r\n$config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../config/web.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 创建、配置、运行一个应用 </span>\r\n(<span class=\"hljs-keyword\">new</span> yii\\web\\Application($config))-&gt;run();</pre>','YII项目WEB应用的加载机制','','inherit','open','open','','200-revision-v1','','','2016-11-28 07:53:13','2016-11-28 07:53:13','',200,'http://blog.raymond.com/?p=204',0,'revision','',0),(205,1,'2016-11-29 08:28:19','2016-11-29 08:28:19','用户访问入口脚本-&gt;\r\n加载配置文件-&gt;执行YII应用-&gt;\r\n对访问进行路由解析-&gt;根据解析结果生成控制器类-&gt;\r\n根据解析生成控制类中的action-&gt;执行action过滤器-&gt;执行action-&gt;\r\n加载model-&gt;渲染view-&gt;\r\n返回渲染结果给响应组件-&gt;响应组件将结果发送给用户浏览器\r\n\r\n步骤分解：\r\n\r\n<strong>执行YII应用</strong>\r\n<pre><strong>yii\\web\\Application继承于 yii\\base\\Application，所以先会执行baseApplication的构造函数</strong>\r\n\r\n<strong>preInit($config)  <span style=\"color: #339966;\">#配置高级别应用主体属性， 比如yii\\base\\Application::basePath</span></strong>\r\n<strong>registerErrorHandler($config) <span style=\"color: #339966;\">#错误处理方法</span></strong>\r\n<strong>Component::__construct($config) <span style=\"color: #339966;\">#配置应用主体属性\r\n\r\n<span style=\"color: #333333;\">接着 baseApplication::init() 初始化，该函数会调用  bootstrap方法运行启动组件\r\n\r\n以上的应用构造完成后，接下来才执行 run() 函数</span></span></strong></pre>\r\n&nbsp;\r\n\r\nweb脚本入口代码\r\n<pre><span class=\"hljs-meta\">&lt;?php</span> \r\ndefined(<span class=\"hljs-string\">\'YII_DEBUG\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_DEBUG\'</span>, <span class=\"hljs-keyword\">true</span>); \r\ndefined(<span class=\"hljs-string\">\'YII_ENV\'</span>) <span class=\"hljs-keyword\">or</span> define(<span class=\"hljs-string\">\'YII_ENV\'</span>, <span class=\"hljs-string\">\'dev\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 注册 Composer 自动加载器 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../vendor/autoload.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 包含 Yii 类文件 </span>\r\n<span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> .<span class=\"hljs-string\">\'/../vendor/yiisoft/yii2/Yii.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 加载应用配置 </span>\r\n$config = <span class=\"hljs-keyword\">require</span>(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">\'/../config/web.php\'</span>); <span class=\"hljs-comment\" style=\"color: #339966;\">// 创建、配置、运行一个应用 </span>\r\n(<span class=\"hljs-keyword\">new</span> yii\\web\\Application($config))-&gt;run();</pre>\r\n&nbsp;\r\n\r\n<strong>执行Action</strong>\r\n<pre>beforeAction\r\n\r\n runAction   <span style=\"color: #008000;\">//开始执行action</span>\r\n             createAction<span style=\"color: #008000;\"> //创建action</span>\r\n\r\n             beforeRun\r\n\r\n             runWithParams <span style=\"color: #008000;\">//执行action中的代码</span>\r\n                         checkAccess()<span style=\"color: #008000;\">//如果是rest接口，执行checkAccess</span>\r\n<span style=\"color: #008000;\">                                  /*如果有调用model*/</span>\r\n                                  find() 执行crud操作 afterFind\r\n                                  save() beforeValidate afterValidate 执行crud操作 beforesave aftersave\r\n                                  insert操作；beforeInsert afterInsert\r\n                                  update操作；beforeUpdate afterUpdate\r\n                                  delete操作：beforeDelete 执行crud操作 afterDelete\r\n\r\n            afterRun\r\n\r\nafterAction</pre>','YII项目WEB应用的加载机制','','inherit','open','open','','200-revision-v1','','','2016-11-29 08:28:19','2016-11-29 08:28:19','',200,'http://blog.raymond.com/?p=205',0,'revision','',0),(224,1,'2016-12-22 16:34:52','2016-12-22 16:34:52','数字\r\nint,int8,int16,int32\r\nuint,uint8,uint16,uint32.uint64\r\nfloat32,float63\r\n\r\n字符\r\nstring\r\n\r\n数组\r\n定义：\r\n（1） var array[10] int\r\narray[0] = 1\r\n（2） array:=[10]int{1}\r\n遍历：\r\nfor key,val := range array{\r\n//此处key为数组键，val为数组值\r\n}\r\n\r\n切片（不用指定大小的数组）\r\n定义：\r\n（1） slice:=[]int{1,2,3}\r\n（2） 从旧切片中截取 sliceTemp:=slice[1:2]\r\n（3） slice:=make([]int,5,10)\r\nappend(slice,1,2,3)\r\n读取:\r\n和数组一样\r\n\r\n字典\r\n定义：\r\n（1） m:=make(map[string]int)\r\nm[\"first\"]=1\r\ndelete(m,\"first\")\r\n（2） m:=map[string]int{\r\n\"first\":1,\r\n\"second\":2\r\n}','go学习笔记(1)：基础数据类型','','inherit','open','open','','223-revision-v1','','','2016-12-22 16:34:52','2016-12-22 16:34:52','',223,'http://blog.mflysys.com/?p=224',0,'revision','',0),(225,1,'2016-12-22 16:52:42','2016-12-22 16:52:42','(1)基础类型函数\r\nfunc add(a int,b int)int{\r\nreturn a+b\r\n}\r\n(2)返回多值\r\nfunc sort(a int,b int)(int,int){\r\nif a&gt;b{\r\nreturn a,b\r\n}else{\r\nreturn b,a\r\n}\r\n}\r\n(3)返回值命名\r\nfunc opt(a int,b int)(add int,minus int){\r\nadd = a+b\r\nminus = a-b\r\n\r\nreturn\r\n}\r\n(4)不定参数个数\r\nfunc sum(args... int)int{\r\nfinal:=0\r\nfor _,val:=range args{\r\nfinal += val\r\n}\r\nreturn final\r\n}\r\n(5)支持函数嵌套\r\n(6)defer申明在函数结束后执行的函数\r\n(7)recover捕获异常(类似try catch，可以让程序不中断)\r\n(8)panic抛出异常(类似throw)','go学习笔记(2)：函数','','publish','open','open','','go%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b02%ef%bc%9a%e5%87%bd%e6%95%b0','','','2016-12-22 16:52:42','2016-12-22 16:52:42','',0,'http://blog.mflysys.com/?p=225',0,'post','',0),(226,1,'2016-12-22 16:52:42','2016-12-22 16:52:42','(1)基础类型函数\r\nfunc add(a int,b int)int{\r\nreturn a+b\r\n}\r\n(2)返回多值\r\nfunc sort(a int,b int)(int,int){\r\nif a&gt;b{\r\nreturn a,b\r\n}else{\r\nreturn b,a\r\n}\r\n}\r\n(3)返回值命名\r\nfunc opt(a int,b int)(add int,minus int){\r\nadd = a+b\r\nminus = a-b\r\n\r\nreturn\r\n}\r\n(4)不定参数个数\r\nfunc sum(args... int)int{\r\nfinal:=0\r\nfor _,val:=range args{\r\nfinal += val\r\n}\r\nreturn final\r\n}\r\n(5)支持函数嵌套\r\n(6)defer申明在函数结束后执行的函数\r\n(7)recover捕获异常(类似try catch，可以让程序不中断)\r\n(8)panic抛出异常(类似throw)','go学习笔记(2)：函数','','inherit','open','open','','225-revision-v1','','','2016-12-22 16:52:42','2016-12-22 16:52:42','',225,'http://blog.mflysys.com/?p=226',0,'revision','',0),(227,1,'2016-12-22 17:00:51','0000-00-00 00:00:00','','php中的yield如何实现协程作业','','draft','open','open','','','','','2016-12-22 17:00:51','2016-12-22 17:00:51','',0,'http://blog.mflysys.com/?p=227',0,'post','',0),(228,1,'2016-12-22 17:05:56','0000-00-00 00:00:00','','PHP中的迭代器概念','','draft','open','open','','','','','2016-12-22 17:05:56','2016-12-22 17:05:56','',0,'http://blog.mflysys.com/?p=228',0,'post','',0),(230,1,'2016-12-22 18:37:35','2016-12-22 18:37:35','数字\r\nint,int8,int16,int32\r\nuint,uint8,uint16,uint32.uint64\r\nfloat32,float63\r\n\r\n字符\r\nstring\r\n\r\n数组\r\n定义：\r\n（1） var array[10] int\r\narray[0] = 1\r\n（2） array:=[10]int{1}\r\n遍历：\r\nfor key,val := range array{\r\n//此处key为数组键，val为数组值\r\n}\r\n\r\n切片（不用指定大小的数组）\r\n定义：\r\n（1） slice:=[]int{1,2,3}\r\n（2） 从旧切片中截取 sliceTemp:=slice[1:2]\r\n（3） slice:=make([]int,5,10)\r\nappend(slice,1,2,3)\r\n读取:\r\n和数组一样\r\n\r\n字典\r\n定义：\r\n（1） m:=make(map[string]int)\r\nm[\"first\"]=1\r\ndelete(m,\"first\")\r\n（2） m:=map[string]int{\r\n\"first\":1,\r\n\"second\":2\r\n}\r\n\r\n&nbsp;\r\n\r\n结构体\r\n定义：\r\ntype 结构体名称 struct{\r\n字段名 字段值类型\r\n}\r\n\r\ntype Rectangle struct{\r\nwidth float64\r\nheight float64\r\n}\r\n实例：\r\nvar r Rectangle\r\n（1） r = Rectangle{width:20,height:20}\r\n（2） r = {20,20}\r\n定义结构体的方法\r\nfunc (r *Rectangle)area() float64{\r\nreturn r.width * r.height\r\n}','go学习笔记(1)：基础数据类型','','inherit','open','open','','223-revision-v1','','','2016-12-22 18:37:35','2016-12-22 18:37:35','',223,'http://blog.mflysys.com/?p=230',0,'revision','',0),(231,1,'2016-12-22 18:46:36','2016-12-22 18:46:36','数字\r\nint,int8,int16,int32\r\nuint,uint8,uint16,uint32.uint64\r\nfloat32,float63\r\n\r\n字符\r\nstring\r\n\r\n数组\r\n定义：\r\n（1） var array[10] int\r\narray[0] = 1\r\n（2） array:=[10]int{1}\r\n遍历：\r\nfor key,val := range array{\r\n//此处key为数组键，val为数组值\r\n}\r\n\r\n切片（不用指定大小的数组）\r\n定义：\r\n（1） slice:=[]int{1,2,3}\r\n（2） 从旧切片中截取 sliceTemp:=slice[1:2]\r\n（3） slice:=make([]int,5,10)\r\nappend(slice,1,2,3)\r\n读取:\r\n和数组一样\r\n\r\n字典\r\n定义：\r\n（1） m:=make(map[string]int)\r\nm[\"first\"]=1\r\ndelete(m,\"first\")\r\n（2） m:=map[string]int{\r\n\"first\":1,\r\n\"second\":2\r\n}\r\n\r\n&nbsp;\r\n\r\n结构体\r\n定义：\r\ntype 结构体名称 struct{\r\n字段名 字段值类型\r\n}\r\n\r\ntype Rectangle struct{\r\nwidth float64\r\nheight float64\r\n}\r\n实例：\r\n（1） var r Rectangle\r\nr.width=20\r\nr.height=20\r\n（2） r = Rectangle{width:20,height:20}\r\n（3） r =Rectangle{20,20}\r\n定义结构体的方法\r\nfunc (r *Rectangle)area() float64{\r\nreturn r.width * r.height\r\n}','go学习笔记(1)：基础数据类型','','inherit','open','open','','223-revision-v1','','','2016-12-22 18:46:36','2016-12-22 18:46:36','',223,'http://blog.mflysys.com/?p=231',0,'revision','',0),(232,1,'2016-12-23 04:09:36','2016-12-23 04:09:36','数字\r\nint,int8,int16,int32\r\nuint,uint8,uint16,uint32.uint64\r\nfloat32,float63\r\n\r\n字符\r\nstring\r\n\r\n数组\r\n定义：\r\n（1） var array[10] int\r\narray[0] = 1\r\n（2） array:=[10]int{1}\r\n遍历：\r\nfor key,val := range array{\r\n//此处key为数组键，val为数组值\r\n}\r\n\r\n切片（不用指定大小的数组）\r\n定义：\r\n（1） slice:=[]int{1,2,3}\r\n（2） 从旧切片中截取 sliceTemp:=slice[1:2]\r\n（3） slice:=make([]int,5,10)\r\nappend(slice,1,2,3)\r\n读取:\r\n和数组一样\r\n\r\n字典\r\n定义：\r\n（1） m:=make(map[string]int)\r\nm[\"first\"]=1\r\ndelete(m,\"first\")\r\n（2） m:=map[string]int{\r\n\"first\":1,\r\n\"second\":2\r\n}\r\n\r\n&nbsp;\r\n\r\n结构体\r\n定义：\r\ntype 结构体名称 struct{\r\n字段名 字段值类型\r\n}\r\n\r\ntype Rectangle struct{\r\nwidth float64\r\nheight float64\r\n}\r\n实例：\r\n（1） var r Rectangle\r\nr.width=20\r\nr.height=20\r\n（2） r = Rectangle{width:20,height:20}\r\n（3） r =Rectangle{20,20}\r\n定义结构体的方法\r\nfunc (r *Rectangle)area() float64{\r\nreturn r.width * r.height\r\n}\r\n\r\n&nbsp;\r\n\r\n通道类型\r\n定义：\r\nc:=make(chan int,10)\r\n赋值：\r\nc&lt;-0\r\n从通道接收数据\r\ni:&lt;-c','go学习笔记(1)：基础数据类型','','inherit','open','open','','223-revision-v1','','','2016-12-23 04:09:36','2016-12-23 04:09:36','',223,'http://blog.mflysys.com/?p=232',0,'revision','',0),(233,1,'2016-12-23 04:26:25','2016-12-23 04:26:25','Vi有三种基本的工作模式：指令行模式、文本输入模式、行末模式。他们的相互关系如所示。\r\n指令模式(Command Mode） 下输入 a、i、o进入文本输入模式(Input Mode)\r\n文本输入模式(Input Mode) 下按ESC进入指令模式（Command Mode）\r\n\r\n指令模式(Command Mode）下输入:进入末行模式（Last line Mode）\r\n末行模式（Last line Mode）下指令错误则返回指令模式(Command Mode）\r\n下面分别介绍这三种模式\r\n\r\n1、指令模式(Command Mode）\r\n指令模式主要使用方向键移动光标位置进行文字的编辑，下面列出了常用的操作命令及含义。\r\n0 －－－－－光标移动至行首\r\nh －－－－－光标左移一格\r\nl －－－－－光标右移一格\r\nj －－－－－光标下移一行\r\nk －－－－－光标上移一行\r\n$+A－－－－－将光标移动到该行最后\r\nPageDn －－－－－ 向下移动一页\r\nPageUp －－－－－ 向上移动一页\r\nd+方向键 －－－－－删除文字\r\ndd －－－－－删除整行\r\npp －－－－－整行复制\r\nr －－－－－修改光标所在的字符\r\nS －－－－－删除光标所在的列，并进入输入模式\r\n\r\n2、文本输入模式（Input Mode）\r\n在指令模式下（Command Mode）按a／A键、i/I键、o／O键进入文本模式，文本输入模式的命令及其含义如下所示。\r\na －－－－－在光标后开始插入\r\nA －－－－－在行尾开始插入\r\ni －－－－－从光标所在位置前面开始插入\r\nI －－－－－从光标所在列的第一个非空白字元前面开始插入\r\no －－－－－在光标所在列下新增一列并进入输入模式\r\nO －－－－－在光标所在列上方新增一列并进入输入模式\r\nESC －－－－－返回命令行模式\r\n\r\n3、末行模式（Last line Mode）\r\n末行模式主要进行一些文字编辑辅助功能，比如字串搜索、替代、保存文件等操作。主要命令如下\r\n：q －－－－－结束Vi程序，如果文件有过修改，先保存文件\r\n：q！ －－－－－强制退出Vi程序\r\n：wq －－－－－保存修改并退出程序\r\n：set nu －－－－－设置行号\r\n\r\n需要注意的是，以上指令都是在英文输入模式下才有效，在linux 终端下有时我们用的是中文输入模式，输入中文的“：”就不能转换模式了。','Linux下vi/vim有几种模式，分别是什么','','publish','open','open','','linux%e4%b8%8bvivim%e6%9c%89%e5%87%a0%e7%a7%8d%e6%a8%a1%e5%bc%8f%ef%bc%8c%e5%88%86%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88','','','2016-12-23 04:26:25','2016-12-23 04:26:25','',0,'http://blog.mflysys.com/?p=233',0,'post','',0),(234,1,'2016-12-23 04:26:25','2016-12-23 04:26:25','Vi有三种基本的工作模式：指令行模式、文本输入模式、行末模式。他们的相互关系如所示。\r\n指令模式(Command Mode） 下输入 a、i、o进入文本输入模式(Input Mode)\r\n文本输入模式(Input Mode) 下按ESC进入指令模式（Command Mode）\r\n\r\n指令模式(Command Mode）下输入:进入末行模式（Last line Mode）\r\n末行模式（Last line Mode）下指令错误则返回指令模式(Command Mode）\r\n下面分别介绍这三种模式\r\n\r\n1、指令模式(Command Mode）\r\n指令模式主要使用方向键移动光标位置进行文字的编辑，下面列出了常用的操作命令及含义。\r\n0 －－－－－光标移动至行首\r\nh －－－－－光标左移一格\r\nl －－－－－光标右移一格\r\nj －－－－－光标下移一行\r\nk －－－－－光标上移一行\r\n$+A－－－－－将光标移动到该行最后\r\nPageDn －－－－－ 向下移动一页\r\nPageUp －－－－－ 向上移动一页\r\nd+方向键 －－－－－删除文字\r\ndd －－－－－删除整行\r\npp －－－－－整行复制\r\nr －－－－－修改光标所在的字符\r\nS －－－－－删除光标所在的列，并进入输入模式\r\n\r\n2、文本输入模式（Input Mode）\r\n在指令模式下（Command Mode）按a／A键、i/I键、o／O键进入文本模式，文本输入模式的命令及其含义如下所示。\r\na －－－－－在光标后开始插入\r\nA －－－－－在行尾开始插入\r\ni －－－－－从光标所在位置前面开始插入\r\nI －－－－－从光标所在列的第一个非空白字元前面开始插入\r\no －－－－－在光标所在列下新增一列并进入输入模式\r\nO －－－－－在光标所在列上方新增一列并进入输入模式\r\nESC －－－－－返回命令行模式\r\n\r\n3、末行模式（Last line Mode）\r\n末行模式主要进行一些文字编辑辅助功能，比如字串搜索、替代、保存文件等操作。主要命令如下\r\n：q －－－－－结束Vi程序，如果文件有过修改，先保存文件\r\n：q！ －－－－－强制退出Vi程序\r\n：wq －－－－－保存修改并退出程序\r\n：set nu －－－－－设置行号\r\n\r\n需要注意的是，以上指令都是在英文输入模式下才有效，在linux 终端下有时我们用的是中文输入模式，输入中文的“：”就不能转换模式了。','Linux下vi/vim有几种模式，分别是什么','','inherit','open','open','','233-revision-v1','','','2016-12-23 04:26:25','2016-12-23 04:26:25','',233,'http://blog.mflysys.com/?p=234',0,'revision','',0),(235,1,'2016-12-23 15:51:39','2016-12-23 15:51:39','Consistency，Availability和Partition Tolerance\r\n原子性，可用性和分区可容忍性\r\n\r\n原子性：\r\n一个服务是完整操作或不操作，如果数据违反了某些预设约束，就不能被持久化。也叫数据一致性\r\nACID：数据库事务正确执行的四个基本要素的缩写。包含：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）\r\n\r\n可用性：\r\n服务是可用的\r\n\r\n分区可容忍性：\r\n除整个网络的故障外，其他的故障都不能导致整个系统无法正确响应（单节点出现故障，就像他不存在一样）\r\n\r\n在实际应用中，举两个例子：\r\n1）两台服务器A和B之间共同存有V的值v0，现在A要修改值为v1，那么流程就应该是A修改了V的值后，同步给B，B在同步完成后才能够读取V的正确值。A与B之间的同步可能存在时延甚至故障。\r\n2）A将V的值改为v0，B将V的值改为v1，二者是同时发生的，那么A+B操作整体可以被当成一个原子操作，根据CAP原则，必须都成功或都失败。但是，由于A与B存在不同的分区，同时操作必然导致错误，也就出现了 C与P 出现冲突的情况。即使我们可以用类似阻塞，隔离，中央化管理等方案来解决冲突，但是这样就会导致A/B某个服务是不可用的。\r\n总的来说，在高并发时，CAP之间需要取舍\r\n\r\n处理方案：\r\n放弃C：只执行多个操作中的一个，其他标志为备份操作，\r\n常用于NoSql，只保证最终的数据一致性\r\n运用：即时响应，有可能是错的，最终达到一致性\r\n\r\n放弃A：一旦遇到问题，受影响的服务需要等待数据一致，等待期间服务不可用。\r\n缺点：涉及到大量的逻辑处理，控制和恢复相当复杂\r\n运用：每个操作前AB数据同步检测，如果无法同步则报错\r\n\r\n放弃P：将所有东西放到一台机器上。虽然还是可能出现由并发导致的失败，但是能够避免分区带来的不同步问题。\r\n缺点：严重影响了scale\r\n运用：关系型数据库，如mysql单节点\r\n解决CAP问题的方案：\r\n\r\nBASE理论：强调基本可用\r\n执行方案：\r\n（1）程序优先读取数据库，无法读取才读取缓存\r\n（2）所有的读取操作都加上版本号/使用乐观锁\r\n（3）所有更新操作队列处理，包含操作和版本信息\r\n（4）建立一个可以跨越所有分布式副本的事物，对每个副本执行队列操作。如果某个副本发生错误，则失败\r\n（5）数据操作结果异步返回\r\n缺点：\r\n1）在队列还在排队时，读可能不一致\r\n2）队列必须在有限时间内快速在所有副本中执行\r\n3）update操作必须严格保证顺序\r\n\r\n另外的方案（Twitter首席工程师Nathan Marz的文章）\r\n去除CURD中的UD操作，\r\n1）所有的update变更为append\r\n2）所有的Read变成对整个数据集的Query\r\n\r\n个人觉得，无论是CAP进行取舍，还是BASE，或者是Marz大神的方案，都有本身的适用场景，对于不同级别的数据可以采取不同的方法\r\n\r\n实例：\r\n系统中存在有1亿会员，每个会员都有账户余额，系统分布在多台机器，存在redis，同时也存在mysql集群。\r\n从系统负载角度，我们无法抛弃P\r\n1）BASE部分理论+AP\r\n现在会员的操作可能会在多个客户端同时进行，比如在手机，pad，PC端都进行了消费操作O_phone,O_pad,O_PC，而当前的余额只允许其中的某一个操作执行\r\n因为消费成功后会影响到其他的数据，比如商家金额，商品库存等，错误的后果比较严重，所以必须严格保证A。\r\n采用BASE方案中的（3）（4），缓存数据带版本号，每台服务器本身根据缓存数据判断操作是否“合法”，对于“合法”的操作，带上操作数据，以及读到的数据版本号，请求Mysql集群执行，Mysql集群执行操作需要整个集群数据全部响应，并且保证版本正确。\r\n所以可能所有的操作都不成功（因为BASE4不通过），或者其中一个操作成功，其余两个失败（因为版本错误）\r\n成功/失败的操作都会给客户端返回信息，操作同步执行，保证数据实时一致\r\n\r\n2）Marz理论+AP\r\n会员在多个客户端同时充值\r\n因为充值操作只是影响到用户本身账户余额，所以允许存在一定的A缺失\r\n每台服务器根据缓存本身的数据，计算出操作结果并及时返回给客户端\r\n同时生成操作请求发送到操作队列，操作队列生成对应的append操作，异步在Mysql集群中执行，Mysql执行完同步给Redis\r\n查询用户余额时可能会存在未到账的情况，但是保证数据最终一致\r\n基于以上的考量，个人觉得，在架构时，还是应该基于CAP理论本身，但是可以不用一刀切的使用CA或AP，可以用BASE/Marz的理论弥补我们放弃某个特性的损失','什么是cap原则','','publish','open','open','','%e4%bb%80%e4%b9%88%e6%98%afcap%e5%8e%9f%e5%88%99','','','2016-12-23 15:51:39','2016-12-23 15:51:39','',0,'http://blog.mflysys.com/?p=235',0,'post','',0),(236,1,'2016-12-23 15:51:39','2016-12-23 15:51:39','Consistency，Availability和Partition Tolerance\r\n原子性，可用性和分区可容忍性\r\n\r\n原子性：\r\n一个服务是完整操作或不操作，如果数据违反了某些预设约束，就不能被持久化。也叫数据一致性\r\nACID：数据库事务正确执行的四个基本要素的缩写。包含：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）\r\n\r\n可用性：\r\n服务是可用的\r\n\r\n分区可容忍性：\r\n除整个网络的故障外，其他的故障都不能导致整个系统无法正确响应（单节点出现故障，就像他不存在一样）\r\n\r\n在实际应用中，举两个例子：\r\n1）两台服务器A和B之间共同存有V的值v0，现在A要修改值为v1，那么流程就应该是A修改了V的值后，同步给B，B在同步完成后才能够读取V的正确值。A与B之间的同步可能存在时延甚至故障。\r\n2）A将V的值改为v0，B将V的值改为v1，二者是同时发生的，那么A+B操作整体可以被当成一个原子操作，根据CAP原则，必须都成功或都失败。但是，由于A与B存在不同的分区，同时操作必然导致错误，也就出现了 C与P 出现冲突的情况。即使我们可以用类似阻塞，隔离，中央化管理等方案来解决冲突，但是这样就会导致A/B某个服务是不可用的。\r\n总的来说，在高并发时，CAP之间需要取舍\r\n\r\n处理方案：\r\n放弃C：只执行多个操作中的一个，其他标志为备份操作，\r\n常用于NoSql，只保证最终的数据一致性\r\n运用：即时响应，有可能是错的，最终达到一致性\r\n\r\n放弃A：一旦遇到问题，受影响的服务需要等待数据一致，等待期间服务不可用。\r\n缺点：涉及到大量的逻辑处理，控制和恢复相当复杂\r\n运用：每个操作前AB数据同步检测，如果无法同步则报错\r\n\r\n放弃P：将所有东西放到一台机器上。虽然还是可能出现由并发导致的失败，但是能够避免分区带来的不同步问题。\r\n缺点：严重影响了scale\r\n运用：关系型数据库，如mysql单节点\r\n解决CAP问题的方案：\r\n\r\nBASE理论：强调基本可用\r\n执行方案：\r\n（1）程序优先读取数据库，无法读取才读取缓存\r\n（2）所有的读取操作都加上版本号/使用乐观锁\r\n（3）所有更新操作队列处理，包含操作和版本信息\r\n（4）建立一个可以跨越所有分布式副本的事物，对每个副本执行队列操作。如果某个副本发生错误，则失败\r\n（5）数据操作结果异步返回\r\n缺点：\r\n1）在队列还在排队时，读可能不一致\r\n2）队列必须在有限时间内快速在所有副本中执行\r\n3）update操作必须严格保证顺序\r\n\r\n另外的方案（Twitter首席工程师Nathan Marz的文章）\r\n去除CURD中的UD操作，\r\n1）所有的update变更为append\r\n2）所有的Read变成对整个数据集的Query\r\n\r\n个人觉得，无论是CAP进行取舍，还是BASE，或者是Marz大神的方案，都有本身的适用场景，对于不同级别的数据可以采取不同的方法\r\n\r\n实例：\r\n系统中存在有1亿会员，每个会员都有账户余额，系统分布在多台机器，存在redis，同时也存在mysql集群。\r\n从系统负载角度，我们无法抛弃P\r\n1）BASE部分理论+AP\r\n现在会员的操作可能会在多个客户端同时进行，比如在手机，pad，PC端都进行了消费操作O_phone,O_pad,O_PC，而当前的余额只允许其中的某一个操作执行\r\n因为消费成功后会影响到其他的数据，比如商家金额，商品库存等，错误的后果比较严重，所以必须严格保证A。\r\n采用BASE方案中的（3）（4），缓存数据带版本号，每台服务器本身根据缓存数据判断操作是否“合法”，对于“合法”的操作，带上操作数据，以及读到的数据版本号，请求Mysql集群执行，Mysql集群执行操作需要整个集群数据全部响应，并且保证版本正确。\r\n所以可能所有的操作都不成功（因为BASE4不通过），或者其中一个操作成功，其余两个失败（因为版本错误）\r\n成功/失败的操作都会给客户端返回信息，操作同步执行，保证数据实时一致\r\n\r\n2）Marz理论+AP\r\n会员在多个客户端同时充值\r\n因为充值操作只是影响到用户本身账户余额，所以允许存在一定的A缺失\r\n每台服务器根据缓存本身的数据，计算出操作结果并及时返回给客户端\r\n同时生成操作请求发送到操作队列，操作队列生成对应的append操作，异步在Mysql集群中执行，Mysql执行完同步给Redis\r\n查询用户余额时可能会存在未到账的情况，但是保证数据最终一致\r\n基于以上的考量，个人觉得，在架构时，还是应该基于CAP理论本身，但是可以不用一刀切的使用CA或AP，可以用BASE/Marz的理论弥补我们放弃某个特性的损失','什么是cap原则','','inherit','open','open','','235-revision-v1','','','2016-12-23 15:51:39','2016-12-23 15:51:39','',235,'http://blog.mflysys.com/?p=236',0,'revision','',0),(237,1,'2016-12-24 08:08:35','0000-00-00 00:00:00','','抓取去哪儿页面中的航班信息','','draft','open','open','','','','','2016-12-24 08:08:35','2016-12-24 08:08:35','',0,'http://blog.mflysys.com/?p=237',0,'post','',0),(238,1,'2016-12-25 18:35:19','2016-12-25 18:35:19','<pre>&lt;?php\r\nclass qunaerSpider\r\n{\r\n    public function getUrlContent($url)\r\n    {\r\n        $ch = curl_init($url);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        $content = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $content;\r\n    }\r\n\r\n    public function getFileContent($fileName){\r\n        if(is_file($fileName)){\r\n            $fp = fopen($fileName,\'r\');\r\n            if($fp){\r\n                $data = file_get_contents($fileName);\r\n            }else{\r\n                $data = false;\r\n            }\r\n            fclose($fp);\r\n            return $data;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //获取航班信息\r\n    public function getFlightInfo($content)\r\n    {\r\n    }\r\n\r\n    //获取某类tag的信息\r\n    public function getElementsInfo($tag,$content){\r\n        if(!is_string($content)){\r\n            return false;\r\n        }\r\n        if($tag==\'img\'){\r\n            $pregTag = [\'/&lt;(\\ )*img.+?&gt;/\',\'/&lt;(\\ )*img.+?\\/&gt;/\',\'/&lt;(\\ )*img(\\ )*&gt;.+?&lt;(\\ )*\\/img(\\ )*&gt;/\'];\r\n      }else{\r\n            $pregTag = [\'/&lt;(\\ )*\'.$tag.\'.*?&gt;.*?&lt;(\\ )*\\/\'.$tag.\'(\\ )*&gt;/\'];\r\n        }\r\n\r\n        $returnData = [];\r\n        foreach($pregTag as $key=&gt;$pattern){\r\n            preg_match_all($pattern,$content,$tagElements);\r\n            foreach($tagElements[0] as $val){\r\n                $returnData[] = $val;\r\n            }\r\n        }\r\n        return $returnData;\r\n    }\r\n}\r\n$qnrSpider = new qunaerSpider();\r\n\r\n$content = $qnrSpider-&gt;getFileContent(\'qunaer.html\');\r\n$imgElements = $qnrSpider-&gt;getElementsInfo(\'script\',$content);\r\nvar_dump($imgElements);</pre>','用正则抓取页面信息','','publish','open','open','','%e7%94%a8%e6%ad%a3%e5%88%99%e6%8a%93%e5%8f%96%e9%a1%b5%e9%9d%a2%e4%bf%a1%e6%81%af','','','2016-12-25 18:35:19','2016-12-25 18:35:19','',0,'http://blog.mflysys.com/?p=238',0,'post','',0),(239,1,'2016-12-25 18:35:19','2016-12-25 18:35:19','<pre>&lt;?php\r\nclass qunaerSpider\r\n{\r\n    public function getUrlContent($url)\r\n    {\r\n        $ch = curl_init($url);\r\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n        $content = curl_exec($ch);\r\n        curl_close($ch);\r\n        return $content;\r\n    }\r\n\r\n    public function getFileContent($fileName){\r\n        if(is_file($fileName)){\r\n            $fp = fopen($fileName,\'r\');\r\n            if($fp){\r\n                $data = file_get_contents($fileName);\r\n            }else{\r\n                $data = false;\r\n            }\r\n            fclose($fp);\r\n            return $data;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //获取航班信息\r\n    public function getFlightInfo($content)\r\n    {\r\n    }\r\n\r\n    //获取某类tag的信息\r\n    public function getElementsInfo($tag,$content){\r\n        if(!is_string($content)){\r\n            return false;\r\n        }\r\n        if($tag==\'img\'){\r\n            $pregTag = [\'/&lt;(\\ )*img.+?&gt;/\',\'/&lt;(\\ )*img.+?\\/&gt;/\',\'/&lt;(\\ )*img(\\ )*&gt;.+?&lt;(\\ )*\\/img(\\ )*&gt;/\'];\r\n      }else{\r\n            $pregTag = [\'/&lt;(\\ )*\'.$tag.\'.*?&gt;.*?&lt;(\\ )*\\/\'.$tag.\'(\\ )*&gt;/\'];\r\n        }\r\n\r\n        $returnData = [];\r\n        foreach($pregTag as $key=&gt;$pattern){\r\n            preg_match_all($pattern,$content,$tagElements);\r\n            foreach($tagElements[0] as $val){\r\n                $returnData[] = $val;\r\n            }\r\n        }\r\n        return $returnData;\r\n    }\r\n}\r\n$qnrSpider = new qunaerSpider();\r\n\r\n$content = $qnrSpider-&gt;getFileContent(\'qunaer.html\');\r\n$imgElements = $qnrSpider-&gt;getElementsInfo(\'script\',$content);\r\nvar_dump($imgElements);</pre>','用正则抓取页面信息','','inherit','open','open','','238-revision-v1','','','2016-12-25 18:35:19','2016-12-25 18:35:19','',238,'http://blog.mflysys.com/?p=239',0,'revision','',0),(240,1,'2016-12-25 19:38:39','2016-12-25 19:38:39','<pre>&lt;?php\r\n/**\r\n * @Class get_file_tree.php\r\n * @Description\r\n * @Date 16-12-26\r\n * @author raymond\r\n */\r\nclass fileTree{\r\n    protected static $_rootDir;\r\n    protected static $_fileTree;\r\n\r\n    public function __construct($dir){\r\n        if(is_dir($dir)){\r\n            self::$_rootDir = $dir;\r\n            self::$_fileTree = [$dir=&gt;[]];\r\n        }elseif(is_file($dir)){\r\n            self::$_rootDir = $dir;\r\n            self::$_fileTree = [$dir];\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //$dir为本目录\r\n    //$parentDir为上级数组\r\n    protected static function _getDirTree($dir,&amp;$parentDir){\r\n        if(substr($dir,-2)!==\'/.\' &amp;&amp; substr($dir,-3)!==\'/..\'){\r\n            if(is_dir($dir)){\r\n                $parentDir[$dir] = [];\r\n                $fileNames = scandir($dir);\r\n                foreach($fileNames as $file){\r\n                    self::_getDirTree($dir.\'/\'.$file,$parentDir[$dir]);\r\n                }\r\n            }elseif(is_file($dir)){\r\n                $parentDir[] = $dir;\r\n            }\r\n        }\r\n    }\r\n\r\n    public function getDirTree(){\r\n        self::_getDirTree(self::$_rootDir,self::$_fileTree);\r\n        return self::$_fileTree;\r\n    }\r\n\r\n    protected function _printDirTree($name,$data,$level){\r\n        for($i=0;$i&lt;$level;$i++){\r\n            echo \'----\';\r\n        }\r\n\r\n        if(is_array($data)){\r\n            echo str_replace(self::$_rootDir,\'\',$name).\"\\r\\n\";\r\n\r\n            $level++;\r\n            foreach($data as $key=&gt;$val){\r\n                self::_printDirTree($key,$data[$key],$level);\r\n            }\r\n        }else{\r\n            echo str_replace(self::$_rootDir,\'\',$data).\"\\r\\n\";\r\n        }\r\n    }\r\n\r\n    public function printDirTree(){\r\n        echo self::$_rootDir.\"\\r\\n\";\r\n        foreach(self::$_fileTree as $key=&gt;$val){\r\n           self::_printDirTree($key,$val,1);\r\n        }\r\n    }\r\n}\r\n\r\n$fileTree = new fileTree(\'/home/web\');\r\nif($fileTree){\r\n    $fileTree-&gt;getDirTree();\r\n    $fileTree-&gt;printDirTree();\r\n}</pre>','获取某个文件目录结构，并返回为数组格式(要求key为文件夹名称，value为文件名)','','publish','open','open','','%e8%8e%b7%e5%8f%96%e6%9f%90%e4%b8%aa%e6%96%87%e4%bb%b6%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84%ef%bc%8c%e5%b9%b6%e8%bf%94%e5%9b%9e%e4%b8%ba%e6%95%b0%e7%bb%84%e6%a0%bc%e5%bc%8f%e8%a6%81%e6%b1%82key','','','2016-12-25 19:38:39','2016-12-25 19:38:39','',0,'http://blog.mflysys.com/?p=240',0,'post','',0),(241,1,'2016-12-25 19:38:39','2016-12-25 19:38:39','<pre>&lt;?php\r\n/**\r\n * @Class get_file_tree.php\r\n * @Description\r\n * @Date 16-12-26\r\n * @author raymond\r\n */\r\nclass fileTree{\r\n    protected static $_rootDir;\r\n    protected static $_fileTree;\r\n\r\n    public function __construct($dir){\r\n        if(is_dir($dir)){\r\n            self::$_rootDir = $dir;\r\n            self::$_fileTree = [$dir=&gt;[]];\r\n        }elseif(is_file($dir)){\r\n            self::$_rootDir = $dir;\r\n            self::$_fileTree = [$dir];\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //$dir为本目录\r\n    //$parentDir为上级数组\r\n    protected static function _getDirTree($dir,&amp;$parentDir){\r\n        if(substr($dir,-2)!==\'/.\' &amp;&amp; substr($dir,-3)!==\'/..\'){\r\n            if(is_dir($dir)){\r\n                $parentDir[$dir] = [];\r\n                $fileNames = scandir($dir);\r\n                foreach($fileNames as $file){\r\n                    self::_getDirTree($dir.\'/\'.$file,$parentDir[$dir]);\r\n                }\r\n            }elseif(is_file($dir)){\r\n                $parentDir[] = $dir;\r\n            }\r\n        }\r\n    }\r\n\r\n    public function getDirTree(){\r\n        self::_getDirTree(self::$_rootDir,self::$_fileTree);\r\n        return self::$_fileTree;\r\n    }\r\n\r\n    protected function _printDirTree($name,$data,$level){\r\n        for($i=0;$i&lt;$level;$i++){\r\n            echo \'----\';\r\n        }\r\n\r\n        if(is_array($data)){\r\n            echo str_replace(self::$_rootDir,\'\',$name).\"\\r\\n\";\r\n\r\n            $level++;\r\n            foreach($data as $key=&gt;$val){\r\n                self::_printDirTree($key,$data[$key],$level);\r\n            }\r\n        }else{\r\n            echo str_replace(self::$_rootDir,\'\',$data).\"\\r\\n\";\r\n        }\r\n    }\r\n\r\n    public function printDirTree(){\r\n        echo self::$_rootDir.\"\\r\\n\";\r\n        foreach(self::$_fileTree as $key=&gt;$val){\r\n           self::_printDirTree($key,$val,1);\r\n        }\r\n    }\r\n}\r\n\r\n$fileTree = new fileTree(\'/home/web\');\r\nif($fileTree){\r\n    $fileTree-&gt;getDirTree();\r\n    $fileTree-&gt;printDirTree();\r\n}</pre>','获取某个文件目录结构，并返回为数组格式(要求key为文件夹名称，value为文件名)','','inherit','open','open','','240-revision-v1','','','2016-12-25 19:38:39','2016-12-25 19:38:39','',240,'http://blog.mflysys.com/?p=241',0,'revision','',0),(243,1,'2016-12-29 08:33:34','2016-12-29 08:33:34','环境需求：\r\njava redis\r\n\r\njava需要添加环境变量\r\n\r\nsudo vim ~/.bashrc\r\n\r\nexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\r\nexport JRE_HOME=${JAVA_HOME}/jre\r\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\r\nexport PATH=${JAVA_HOME}/bin:$PATH\r\n\r\nsource ~/.bashrc\r\n\r\nelasticSearch对于java版本有依赖\r\nwget http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz?AuthParam=1482993956_a232754341338dae6c7fd6f9f802784a\r\n\r\n安装 ElasticSearch\r\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.zip\r\n解压后 ./bin/elasticsearch\r\n不要用root运行，会报错\r\n此时，打开 http://localhost:9200/ 会得到 ElasticSearch的提示\r\n{\r\nname: \"S6dhC19\",\r\ncluster_name: \"elasticsearch\",\r\ncluster_uuid: \"6ycyju7CSiK8o1ZfAKxH5g\",\r\nversion: {\r\nnumber: \"5.1.1\",\r\nbuild_hash: \"5395e21\",\r\nbuild_date: \"2016-12-06T12:36:15.409Z\",\r\nbuild_snapshot: false,\r\nlucene_version: \"6.3.0\"\r\n},\r\ntagline: \"You Know, for Search\"\r\n}\r\n说明安装成功了\r\n安装 Kibana\r\nwget https://artifacts.elastic.co/downloads/kibana/kibana-5.1.1-linux-x86_64.tar.gz\r\n解压后 ./bin/kibana\r\n之后打开 http://localhost:5601 即可看到 kibana 已经安装到本地\r\n可以修改config.js来配置elasticsearch的地址和索引\r\n\r\n安装 logstash\r\nwget https://artifacts.elastic.co/downloads/logstash/logstash-5.1.1.zip\r\n解压后 ./bin/logstash\r\nELK集成\r\n首先为 logstash 添加一个配置文件，配置文件中的input为输入数据来源，output为数据输出。我们配置数据来自redis，然后输出到 elasticSearch中\r\ninput {\r\nredis {\r\nhost =&gt; \"127.0.0.1\"\r\nport =&gt; \"6379\"\r\nkey =&gt; \"logstash:demo\"\r\ndata_type =&gt; \"list\"\r\ncodec =&gt; \"json\"\r\ntype =&gt; \"logstash-redis-demo\"\r\ntags =&gt; [\"logstashdemo\"]\r\n}\r\n}\r\n\r\noutput {\r\nelasticsearch {\r\nhosts =&gt; \"127.0.0.1\"\r\n}\r\n\r\n}\r\n\r\n接着重启 logstash，读取配置文件（设为redis.conf)，\r\n./bin/logstash -f redis.conf\r\n\r\n这时，如果向redis中写入数据\r\nRPUSH logstash:demo \"{\\\"time\\\": \\\"2013-01-01T01:23:55\\\", \\\"message\\\": \\\"logstash demo message\\\"}\"\r\n\r\n这可以在elasticSearch中获取实时索引，\r\n通过 http://localhost:9200/_search?pretty=true 查看结果','ELK平台初使用','','publish','open','open','','elk%e5%b9%b3%e5%8f%b0%e5%88%9d%e4%bd%bf%e7%94%a8','','','2016-12-29 08:33:34','2016-12-29 08:33:34','',0,'http://blog.mflysys.com/?p=243',0,'post','',0),(244,1,'2016-12-29 08:33:34','2016-12-29 08:33:34','环境需求：\r\njava redis\r\n\r\njava需要添加环境变量\r\n\r\nsudo vim ~/.bashrc\r\n\r\nexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\r\nexport JRE_HOME=${JAVA_HOME}/jre\r\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\r\nexport PATH=${JAVA_HOME}/bin:$PATH\r\n\r\nsource ~/.bashrc\r\n\r\nelasticSearch对于java版本有依赖\r\nwget http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz?AuthParam=1482993956_a232754341338dae6c7fd6f9f802784a\r\n\r\n安装 ElasticSearch\r\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.zip\r\n解压后 ./bin/elasticsearch\r\n不要用root运行，会报错\r\n此时，打开 http://localhost:9200/ 会得到 ElasticSearch的提示\r\n{\r\nname: \"S6dhC19\",\r\ncluster_name: \"elasticsearch\",\r\ncluster_uuid: \"6ycyju7CSiK8o1ZfAKxH5g\",\r\nversion: {\r\nnumber: \"5.1.1\",\r\nbuild_hash: \"5395e21\",\r\nbuild_date: \"2016-12-06T12:36:15.409Z\",\r\nbuild_snapshot: false,\r\nlucene_version: \"6.3.0\"\r\n},\r\ntagline: \"You Know, for Search\"\r\n}\r\n说明安装成功了\r\n安装 Kibana\r\nwget https://artifacts.elastic.co/downloads/kibana/kibana-5.1.1-linux-x86_64.tar.gz\r\n解压后 ./bin/kibana\r\n之后打开 http://localhost:5601 即可看到 kibana 已经安装到本地\r\n可以修改config.js来配置elasticsearch的地址和索引\r\n\r\n安装 logstash\r\nwget https://artifacts.elastic.co/downloads/logstash/logstash-5.1.1.zip\r\n解压后 ./bin/logstash\r\nELK集成\r\n首先为 logstash 添加一个配置文件，配置文件中的input为输入数据来源，output为数据输出。我们配置数据来自redis，然后输出到 elasticSearch中\r\ninput {\r\nredis {\r\nhost =&gt; \"127.0.0.1\"\r\nport =&gt; \"6379\"\r\nkey =&gt; \"logstash:demo\"\r\ndata_type =&gt; \"list\"\r\ncodec =&gt; \"json\"\r\ntype =&gt; \"logstash-redis-demo\"\r\ntags =&gt; [\"logstashdemo\"]\r\n}\r\n}\r\n\r\noutput {\r\nelasticsearch {\r\nhosts =&gt; \"127.0.0.1\"\r\n}\r\n\r\n}\r\n\r\n接着重启 logstash，读取配置文件（设为redis.conf)，\r\n./bin/logstash -f redis.conf\r\n\r\n这时，如果向redis中写入数据\r\nRPUSH logstash:demo \"{\\\"time\\\": \\\"2013-01-01T01:23:55\\\", \\\"message\\\": \\\"logstash demo message\\\"}\"\r\n\r\n这可以在elasticSearch中获取实时索引，\r\n通过 http://localhost:9200/_search?pretty=true 查看结果','ELK平台初使用','','inherit','open','open','','243-revision-v1','','','2016-12-29 08:33:34','2016-12-29 08:33:34','',243,'http://blog.mflysys.com/?p=244',0,'revision','',0),(246,1,'2016-12-30 06:35:13','2016-12-30 06:35:13','当PHP实例化一个类的时候，如果文件中不包括类文件，就会调用__autoload函数去加载类库文件。\r\n像__construct一样，可以自定义\r\n<pre>function __autoload( $class )\r\n{\r\n $file = $class . \'.class.php\';\r\n if (is_file($file)) {\r\n require_once($file);\r\n }\r\n}</pre>\r\n此时在文件中执行以下语句\r\n<pre>$obj = new pr();</pre>\r\n则PHP引擎会去寻找到 pr.class.php 文件，然后include进来\r\n\r\n如果 autoload 的文件存在继承关系，则需要把其父类也包含进来，否则会出错\r\nspl_autoload 是_autoload()的默认实现，它会去include_path中寻找$class_name(.php/.inc)\r\n\r\n可以使用 spl_autoload_register 将函数注册到 spl_autoload 函数栈中，用自定义方法替代 __autoload\r\n如\r\n<pre>spl_autoload_register(\'test\');\r\nspl_autoload_register(array(\'test\',\'loadprint\'));</pre>','PHP autoload机制','','publish','open','open','','php-autoload%e6%9c%ba%e5%88%b6','','','2016-12-30 06:35:13','2016-12-30 06:35:13','',0,'http://blog.mflysys.com/?p=246',0,'post','',0),(247,1,'2016-12-30 06:35:13','2016-12-30 06:35:13','当PHP实例化一个类的时候，如果文件中不包括类文件，就会调用__autoload函数去加载类库文件。\r\n像__construct一样，可以自定义\r\n<pre>function __autoload( $class )\r\n{\r\n $file = $class . \'.class.php\';\r\n if (is_file($file)) {\r\n require_once($file);\r\n }\r\n}</pre>\r\n此时在文件中执行以下语句\r\n<pre>$obj = new pr();</pre>\r\n则PHP引擎会去寻找到 pr.class.php 文件，然后include进来\r\n\r\n如果 autoload 的文件存在继承关系，则需要把其父类也包含进来，否则会出错\r\nspl_autoload 是_autoload()的默认实现，它会去include_path中寻找$class_name(.php/.inc)\r\n\r\n可以使用 spl_autoload_register 将函数注册到 spl_autoload 函数栈中，用自定义方法替代 __autoload\r\n如\r\n<pre>spl_autoload_register(\'test\');\r\nspl_autoload_register(array(\'test\',\'loadprint\'));</pre>','PHP autoload机制','','inherit','open','open','','246-revision-v1','','','2016-12-30 06:35:13','2016-12-30 06:35:13','',246,'http://blog.mflysys.com/?p=247',0,'revision','',0),(249,1,'2017-01-04 03:09:42','2017-01-04 03:09:42','安装直接使用最简单的方式：\r\n<pre>sudo apt-get install subversion</pre>\r\n修改一下配置保存密码：\r\n<pre>vim ~/.subversion/config</pre>\r\n找到 store-passwords，修改配置值为 yes\r\n<pre>store-passwords = yes</pre>\r\n接下来就是可以使用了，常用操作\r\n\r\n<strong>1、检出</strong>\r\n<pre>svn co svn地址 [checkout到的目标目录] [--username 用户名]</pre>\r\nco 等价于 checkout，也可以用 checkout\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>2、导出</strong>\r\n<pre>svn export [-r 版本号] svn地址 [checkout到的目标目录] [--username 用户名]</pre>\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>3、新增/删除</strong>\r\n<pre>svn add 文件名 \r\nsvn delete 文件名</pre>\r\n<strong>4、提交</strong>\r\n<pre>svn ci -m 提交备注信息文本 [-N] [--no-unlock] 文件名</pre>\r\nci 等价于 commit，也可以用 commit\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>5、更新</strong>\r\n<pre>svn update \r\nsvn update -r 修正版本 文件名 \r\nsvn update 文件名</pre>\r\n<strong>6、查看状态</strong>\r\n<pre>svn st [-v] 目录/文件名</pre>\r\nst 等价于 status，也可以用 status\r\nv为是否显示版本号，是则会显示当前工作版本以及最后修改版本\r\n如果文件正常，则不会出现状态，?不在svn版本中，M修改，C冲突，A添加，K锁定\r\n\r\n<strong>7、加锁/解锁</strong>\r\n<pre>svn lock -m 加锁备注信息文本 [--force] 文件名 \r\nsvn unlock 文件名</pre>\r\n<strong>8、比较差异</strong>\r\n<pre>svn diff 文件名 \r\nsvn diff -r 修正版本号m:修正版本号n文件名</pre>\r\n<strong>9、恢复本地修改</strong>\r\n<pre>svn revert [-R] 文件名</pre>\r\n不会存取网络，覆盖本地修改\r\n-R为是否递归，如果加上此配置，则文件为目录时，目录下的所有文件都会被覆盖\r\n\r\n<strong>10、冲突解决</strong>\r\n<pre>svn resolved 冲突文件</pre>\r\n<strong>11、查看svn版本文件</strong>\r\n<pre>svn cat svn地址</pre>\r\n<strong>12、日志</strong>\r\n<pre>svn log</pre>','ubuntu环境下svn使用','','publish','open','open','','ubuntu%e7%8e%af%e5%a2%83%e4%b8%8bsvn%e4%bd%bf%e7%94%a8','','','2017-01-04 03:09:42','2017-01-04 03:09:42','',0,'http://blog.mflysys.com/?p=249',0,'post','',0),(250,1,'2017-01-04 03:09:42','2017-01-04 03:09:42','安装直接使用最简单的方式：\r\n<pre>sudo apt-get install subversion</pre>\r\n修改一下配置保存密码：\r\n<pre>vim ~/.subversion/config</pre>\r\n找到 store-passwords，修改配置值为 yes\r\n<pre>store-passwords = yes</pre>\r\n接下来就是可以使用了，常用操作\r\n\r\n<strong>1、检出</strong>\r\n<pre>svn co svn地址 [checkout到的目标目录] [--username 用户名]</pre>\r\nco 等价于 checkout，也可以用 checkout\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>2、导出</strong>\r\n<pre>svn export [-r 版本号] svn地址 [checkout到的目标目录] [--username 用户名]</pre>\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>3、新增/删除</strong>\r\n<pre>svn add 文件名 \r\nsvn delete 文件名</pre>\r\n<strong>4、提交</strong>\r\n<pre>svn ci -m 提交备注信息文本 [-N] [--no-unlock] 文件名</pre>\r\nci 等价于 commit，也可以用 commit\r\n不带目标目录则默认为当前目录\r\n不带用户名则默认用当前系统用户名\r\n\r\n<strong>5、更新</strong>\r\n<pre>svn update \r\nsvn update -r 修正版本 文件名 \r\nsvn update 文件名</pre>\r\n<strong>6、查看状态</strong>\r\n<pre>svn st [-v] 目录/文件名</pre>\r\nst 等价于 status，也可以用 status\r\nv为是否显示版本号，是则会显示当前工作版本以及最后修改版本\r\n如果文件正常，则不会出现状态，?不在svn版本中，M修改，C冲突，A添加，K锁定\r\n\r\n<strong>7、加锁/解锁</strong>\r\n<pre>svn lock -m 加锁备注信息文本 [--force] 文件名 \r\nsvn unlock 文件名</pre>\r\n<strong>8、比较差异</strong>\r\n<pre>svn diff 文件名 \r\nsvn diff -r 修正版本号m:修正版本号n文件名</pre>\r\n<strong>9、恢复本地修改</strong>\r\n<pre>svn revert [-R] 文件名</pre>\r\n不会存取网络，覆盖本地修改\r\n-R为是否递归，如果加上此配置，则文件为目录时，目录下的所有文件都会被覆盖\r\n\r\n<strong>10、冲突解决</strong>\r\n<pre>svn resolved 冲突文件</pre>\r\n<strong>11、查看svn版本文件</strong>\r\n<pre>svn cat svn地址</pre>\r\n<strong>12、日志</strong>\r\n<pre>svn log</pre>','ubuntu环境下svn使用','','inherit','open','open','','249-revision-v1','','','2017-01-04 03:09:42','2017-01-04 03:09:42','',249,'http://blog.mflysys.com/?p=250',0,'revision','',0);
